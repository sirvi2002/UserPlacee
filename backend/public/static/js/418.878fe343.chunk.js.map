{"version":3,"file":"static/js/418.878fe343.chunk.js","mappings":"uLAiEA,EA3DoB,SAACA,GAEjB,IAAAC,GAAwBC,EAAAA,EAAAA,YAAUC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA3BI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GACpBI,GAAoCL,EAAAA,EAAAA,YAAUM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAvCE,EAAUD,EAAA,GAAEE,EAAaF,EAAA,GAChCG,GAA8BT,EAAAA,EAAAA,WAAS,GAAMU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAAtCE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GACpBG,GAAgBC,EAAAA,EAAAA,WAEtBC,EAAAA,EAAAA,YAAU,WAEN,GAAKZ,EAAL,CAIA,IAAMa,EAAa,IAAIC,WACvBD,EAAWE,OAAS,WAChBV,EAAcQ,EAAWG,OAC7B,EACAH,EAAWI,cAAcjB,EANzB,CASJ,GAAG,CAACA,IAsBJ,OACIkB,EAAAA,EAAAA,MAAA,OAAKC,UAAU,eAAcC,SAAA,EACzBC,EAAAA,EAAAA,KAAA,SAAOC,IAAKZ,EAAea,GAAI5B,EAAM4B,GAAIC,MAAO,CAAEC,QAAS,QAAUC,SAtBvD,SAAAC,GAClB,IAAIC,EACAC,EACAF,EAAMG,OAAOC,OAAuC,IAA9BJ,EAAMG,OAAOC,MAAMC,QACzCJ,EAAaD,EAAMG,OAAOC,MAAM,GAChC9B,EAAQ2B,GACRnB,GAAW,GACXoB,GAAc,IAGdpB,GAAW,GACXoB,GAAc,GAElBlC,EAAMsC,QAAQtC,EAAM4B,GAAIK,EAAYC,EACxC,EAQsGK,KAAK,OAAOC,OAAO,qBACjHjB,EAAAA,EAAAA,MAAA,OAAKC,UAAS,gBAAAiB,OAAkBzC,EAAM0C,QAAU,UAAWjB,SAAA,EACvDF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,wBAAuBC,SAAA,CACjChB,IAAciB,EAAAA,EAAAA,KAAA,OAAKiB,IAAKlC,EAAYmC,IAAI,aACvCnC,IAAciB,EAAAA,EAAAA,KAAA,KAAAD,SAAG,8BAEvBC,EAAAA,EAAAA,KAACmB,EAAAA,EAAM,CAACN,KAAK,SAASO,QAZT,WACrB/B,EAAcgC,QAAQC,OAC1B,EAU4DvB,SAAC,mBAInDZ,IAAWa,EAAAA,EAAAA,KAAA,KAAAD,SAAIzB,EAAMiD,cAGnC,C,4ECnDA,EARa,SAAAjD,GACX,OACE0B,EAAAA,EAAAA,KAAA,OAAKF,UAAS,QAAAiB,OAAUzC,EAAMwB,WAAaK,MAAO7B,EAAM6B,MAAMJ,SAC3DzB,EAAMyB,UAGb,C,qOCyIA,EArIa,WAET,IAAMyB,GAAOC,EAAAA,EAAAA,YAAWC,EAAAA,GAExBnD,GAAsCC,EAAAA,EAAAA,WAAS,GAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7CoD,EAAWlD,EAAA,GAAEmD,EAAcnD,EAAA,GAClCoD,GAAsDC,EAAAA,EAAAA,KAA9CC,EAASF,EAATE,UAAWC,EAAWH,EAAXG,YAAaC,EAAKJ,EAALI,MAAOC,EAAUL,EAAVK,WAEvCC,GAA+CC,EAAAA,EAAAA,GAC3C,CACIC,MAAO,CACHC,MAAO,GACPnD,SAAS,KAGjB,GACHoD,GAAA7D,EAAAA,EAAAA,GAAAyD,EAAA,GARMK,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAAEG,EAAWH,EAAA,GAUrCI,EAAkB,eAAAC,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,EAAM1C,GAAK,IAAA2C,EAAAC,EAAAC,EAAA,OAAAL,EAAAA,EAAAA,KAAAM,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACX,GAAvBjD,EAAMkD,kBAIF7B,EAAY,CAAD0B,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEoBvB,EAAYyB,+DAAoD,OACvFC,KAAKC,UAAU,CACXtB,MAAOG,EAAUoB,OAAOvB,MAAMC,MAC9BuB,SAAUrB,EAAUoB,OAAOC,SAASvB,QAExC,CAAE,eAAgB,qBACpB,KAAD,EANKW,EAAYI,EAAAS,KAQlBtC,EAAKuC,MAAMd,EAAae,OAAQf,EAAagB,OAAOZ,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAa,GAAAb,EAAA,iBAAAA,EAAAE,KAAA,iBAYG,OAZHF,EAAAC,KAAA,IAQ9CJ,EAAW,IAAIiB,UACZC,OAAO,QAAS5B,EAAUoB,OAAOvB,MAAMC,OAChDY,EAASkB,OAAO,OAAQ5B,EAAUoB,OAAOS,KAAK/B,OAC9CY,EAASkB,OAAO,WAAY5B,EAAUoB,OAAOC,SAASvB,OACtDY,EAASkB,OAAO,QAAS5B,EAAUoB,OAAOU,MAAMhC,OAAOe,EAAAE,KAAA,GAE5BvB,EACvByB,gEACA,OACAP,GAGF,KAAD,GANKD,EAAYI,EAAAS,KAOlBtC,EAAKuC,MAAMd,EAAae,OAAQf,EAAagB,OAAOZ,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAkB,GAAAlB,EAAA,mCAAAA,EAAAmB,OAAA,GAAAxB,EAAA,0BAG/D,gBAvCuByB,GAAA,OAAA7B,EAAA8B,MAAA,KAAAC,UAAA,KAoExB,OACI9E,EAAAA,EAAAA,MAAC+E,EAAAA,SAAc,CAAA7E,SAAA,EAEXC,EAAAA,EAAAA,KAAC6E,EAAAA,EAAU,CAAC5C,MAAOA,EAAO6C,QAAS5C,KACnCrC,EAAAA,EAAAA,MAACkF,EAAAA,EAAI,CAACjF,UAAU,iBAAgBC,SAAA,CAC3BgC,IAAa/B,EAAAA,EAAAA,KAACgF,EAAAA,EAAc,CAACC,WAAS,KACvCjF,EAAAA,EAAAA,KAAA,MAAAD,SAAI,oBACJC,EAAAA,EAAAA,KAAA,UACAH,EAAAA,EAAAA,MAAA,QAAMqF,SAAUvC,EAAmB5C,SAAA,EAC7B4B,IAAe3B,EAAAA,EAAAA,KAACmF,EAAAA,EAAK,CACnBjF,GAAG,OACHkF,QAAQ,QACRvE,KAAK,OACLwE,MAAM,YACNC,WAAY,EAACC,EAAAA,EAAAA,OACbhE,UAAU,uBACVX,QAAS6B,KAGXd,IAAe3B,EAAAA,EAAAA,KAACwF,EAAAA,EAAW,CAACxE,QAAM,EAACd,GAAG,QAAQU,QAAS6B,EAAclB,UAAU,8BACjFvB,EAAAA,EAAAA,KAACmF,EAAAA,EAAK,CACFjF,GAAG,QACHkF,QAAQ,QACRvE,KAAK,QACLwE,MAAM,SACNC,WAAY,EAACG,EAAAA,EAAAA,OACblE,UAAU,8BACVX,QAAS6B,KAEbzC,EAAAA,EAAAA,KAACmF,EAAAA,EAAK,CACFjF,GAAG,WACHkF,QAAQ,QACRvE,KAAK,WACLwE,MAAM,WACNC,WAAY,EAACI,EAAAA,EAAAA,IAAoB,IAAIC,EAAAA,EAAAA,IAAoB,IACzDpE,UAAU,6CACVX,QAAS6B,KAEbzC,EAAAA,EAAAA,KAACmB,EAAAA,EAAM,CAACN,KAAK,SAAS+E,UAAWpD,EAAUrD,QAAQY,SAC9C4B,EAAc,QAAU,eAGjC9B,EAAAA,EAAAA,MAACsB,EAAAA,EAAM,CAAC0E,SAAO,EAACzE,QArEF,WACjBO,EAWDe,GAAWoD,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EACNtD,EAAUoB,QAAM,IACnBS,KAAM,CACF/B,MAAO,GACPnD,SAAS,GAEbmF,MAAO,CACHhC,MAAO,KACPnD,SAAS,MAEd,GApBHuD,GAAWoD,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAD,EAEAtD,EAAUoB,QAAM,IACnBS,UAAM0B,EACNzB,WAAOyB,IAEXvD,EAAUoB,OAAOvB,MAAMlD,SAAWqD,EAAUoB,OAAOC,SAAS1E,SAgBpEyC,GAAe,SAAAoE,GAAQ,OAAKA,CAAQ,GACxC,EA4CuDjG,SAAA,CAAC,aAAY4B,EAAwB,SAAV,gBAItF,C","sources":["shared/components/FormElements/ImageUpload.js","shared/components/UIElements/Card.js","user/pages/Auth.js"],"sourcesContent":["import React, { useRef, useState, useEffect } from 'react'\r\nimport Button from './Button'\r\n\r\n\r\nimport './ImageUpload.css'\r\n\r\nconst ImageUpload = (props) => {\r\n\r\n    const [file, setFile] = useState();\r\n    const [previewUrl, setPreviewUrl] = useState();\r\n    const [isValid, setIsValid] = useState(false);\r\n    const filePickerRef = useRef();\r\n\r\n    useEffect(() => {\r\n\r\n        if (!file) {\r\n            return;\r\n        }\r\n\r\n        const fileReader = new FileReader();\r\n        fileReader.onload = () => {\r\n            setPreviewUrl(fileReader.result);\r\n        };\r\n        fileReader.readAsDataURL(file);\r\n\r\n\r\n    }, [file]);\r\n\r\n    const pickedHandler = event => {\r\n        let pickedFile;\r\n        let fileIsValid;\r\n        if (event.target.files && event.target.files.length === 1) {\r\n            pickedFile = event.target.files[0];\r\n            setFile(pickedFile);\r\n            setIsValid(true);\r\n            fileIsValid = true;\r\n        } else {\r\n            //something is wrong\r\n            setIsValid(false);\r\n            fileIsValid = false;\r\n        }\r\n        props.onInput(props.id, pickedFile, fileIsValid);\r\n    };\r\n\r\n    const pickImageHandler = () => {\r\n        filePickerRef.current.click();\r\n    };\r\n\r\n    return (\r\n        <div className='form-control'>\r\n            <input ref={filePickerRef} id={props.id} style={{ display: 'none' }} onChange={pickedHandler} type=\"file\" accept=\".jpg,.png,.jpeg\" />\r\n            <div className={`image-upload ${props.center && 'center'}`}>\r\n                <div className='image-upload__preview'>\r\n                    {previewUrl && <img src={previewUrl} alt=\"Preview\" />}\r\n                    {!previewUrl && <p>Please pick an image.</p>}\r\n                </div>\r\n                <Button type='button' onClick={pickImageHandler}>PICK IMAGE</Button>\r\n            </div>\r\n\r\n\r\n            {!isValid && <p>{props.errorText}</p>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ImageUpload","import React from 'react';\n\nimport './Card.css';\n\nconst Card = props => {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","import React, { useState, useContext } from 'react'\r\nimport Input from '../../shared/components/FormElements/Input'\r\nimport { VALIDATOR_EMAIL, VALIDATOR_MAXLENGTH, VALIDATOR_MINLENGTH, VALIDATOR_REQUIRE } from '../../shared/util/validators'\r\nimport { useForm } from '../../shared/hooks/form-hook';\r\nimport Button from '../../shared/components/FormElements/Button';\r\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\r\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner'\r\nimport Card from '../../shared/components/UIElements/Card';\r\nimport { AuthContext } from '../../shared/context/auth-context';\r\nimport ImageUpload from '../../shared/components/FormElements/ImageUpload';\r\nimport { useHttpClient } from '../../shared/hooks/http-hook';\r\n\r\nimport './Auth.css'\r\n\r\nconst Auth = () => {\r\n\r\n    const auth = useContext(AuthContext);\r\n\r\n    const [isLoginMode, setIsLoginMode] = useState(true);\r\n    const { isLoading, sendRequest, error, clearError } = useHttpClient();\r\n\r\n    const [formState, inputHandler, setFormData] = useForm(\r\n        {\r\n            email: {\r\n                value: '',\r\n                isValid: false\r\n            }\r\n        },\r\n        false\r\n    );\r\n\r\n    const loginSubmitHandler = async event => {\r\n        event.preventDefault();\r\n\r\n\r\n\r\n        if (isLoginMode) {\r\n            try {\r\n                const responseData = await sendRequest(process.env.REACT_APP_BACKEND_URL + '/users/login', 'POST',\r\n                    JSON.stringify({\r\n                        email: formState.inputs.email.value,\r\n                        password: formState.inputs.password.value\r\n                    }),\r\n                    { 'Content-Type': 'application/json' }\r\n                );\r\n\r\n                auth.login(responseData.userId, responseData.token);\r\n            } catch (err) {\r\n\r\n            }\r\n\r\n        } else {\r\n            try {\r\n\r\n                const formData = new FormData();\r\n                formData.append('email', formState.inputs.email.value);\r\n                formData.append('name', formState.inputs.name.value);\r\n                formData.append('password', formState.inputs.password.value);\r\n                formData.append('image', formState.inputs.image.value);\r\n\r\n                const responseData = await sendRequest(\r\n                    process.env.REACT_APP_BACKEND_URL + '/users/signup',\r\n                    'POST',\r\n                    formData\r\n\r\n\r\n                );\r\n                auth.login(responseData.userId, responseData.token);\r\n            } catch (err) { }\r\n        }\r\n    };\r\n\r\n    const switchModeHandler = () => {\r\n        if (!isLoginMode) {\r\n            setFormData(\r\n                {\r\n                    ...formState.inputs,\r\n                    name: undefined,\r\n                    image: undefined\r\n                },\r\n                formState.inputs.email.isValid && formState.inputs.password.isValid\r\n            );\r\n        }\r\n        else {\r\n            setFormData({\r\n                ...formState.inputs,\r\n                name: {\r\n                    value: \"\",\r\n                    isValid: false\r\n                },\r\n                image: {\r\n                    value: null,\r\n                    isValid: false\r\n                }\r\n            }, false);\r\n        }\r\n        setIsLoginMode(prevMode => !prevMode);\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n\r\n            <ErrorModal error={error} onClear={clearError} />\r\n            <Card className=\"authentication\">\r\n                {isLoading && <LoadingSpinner asOverlay />}\r\n                <h2>Login Required</h2>\r\n                <hr />\r\n                <form onSubmit={loginSubmitHandler}>\r\n                    {!isLoginMode && <Input\r\n                        id=\"name\"\r\n                        element=\"input\"\r\n                        type=\"text\"\r\n                        label=\"Your Name\"\r\n                        validators={[VALIDATOR_REQUIRE()]}\r\n                        errorText=\"Please enter a name.\"\r\n                        onInput={inputHandler}\r\n\r\n                    />}\r\n                    {!isLoginMode && <ImageUpload center id=\"image\" onInput={inputHandler} errorText=\"Please provide an image.\" />}\r\n                    <Input\r\n                        id=\"email\"\r\n                        element=\"input\"\r\n                        type=\"email\"\r\n                        label=\"E-mail\"\r\n                        validators={[VALIDATOR_EMAIL()]}\r\n                        errorText=\"Please enter a valid Email.\"\r\n                        onInput={inputHandler}\r\n                    ></Input>\r\n                    <Input\r\n                        id=\"password\"\r\n                        element=\"input\"\r\n                        type=\"password\"\r\n                        label=\"Password\"\r\n                        validators={[VALIDATOR_MINLENGTH(6), VALIDATOR_MAXLENGTH(8)]}\r\n                        errorText=\"Password length must be in between 6 to 8.\"\r\n                        onInput={inputHandler}\r\n                    ></Input>\r\n                    <Button type=\"submit\" disabled={!formState.isValid}>\r\n                        {isLoginMode ? 'LOGIN' : 'SIGNUP'}\r\n                    </Button>\r\n                </form>\r\n                <Button inverse onClick={switchModeHandler}>SWITCH TO {!isLoginMode ? 'LOGIN' : 'SIGNUP'}</Button>\r\n            </Card>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Auth"],"names":["props","_useState","useState","_useState2","_slicedToArray","file","setFile","_useState3","_useState4","previewUrl","setPreviewUrl","_useState5","_useState6","isValid","setIsValid","filePickerRef","useRef","useEffect","fileReader","FileReader","onload","result","readAsDataURL","_jsxs","className","children","_jsx","ref","id","style","display","onChange","event","pickedFile","fileIsValid","target","files","length","onInput","type","accept","concat","center","src","alt","Button","onClick","current","click","errorText","auth","useContext","AuthContext","isLoginMode","setIsLoginMode","_useHttpClient","useHttpClient","isLoading","sendRequest","error","clearError","_useForm","useForm","email","value","_useForm2","formState","inputHandler","setFormData","loginSubmitHandler","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","responseData","formData","_responseData","wrap","_context","prev","next","preventDefault","process","JSON","stringify","inputs","password","sent","login","userId","token","t0","FormData","append","name","image","t1","stop","_x","apply","arguments","React","ErrorModal","onClear","Card","LoadingSpinner","asOverlay","onSubmit","Input","element","label","validators","VALIDATOR_REQUIRE","ImageUpload","VALIDATOR_EMAIL","VALIDATOR_MINLENGTH","VALIDATOR_MAXLENGTH","disabled","inverse","_objectSpread","undefined","prevMode"],"sourceRoot":""}