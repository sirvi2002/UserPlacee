{"version":3,"file":"static/js/915.a59636cb.chunk.js","mappings":"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","sources":["places/pages/UpdatePlace.js","shared/components/UIElements/Card.js"],"sourcesContent":["import React, { useEffect, useState, useContext } from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\n\nimport Input from '../../shared/components/FormElements/Input';\nimport Button from '../../shared/components/FormElements/Button';\nimport Card from '../../shared/components/UIElements/Card';\nimport {\n  VALIDATOR_REQUIRE,\n  VALIDATOR_MINLENGTH\n} from '../../shared/util/validators';\nimport { useForm } from '../../shared/hooks/form-hook';\nimport './PlaceForm.css';\n\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport { AuthContext } from '../../shared/context/auth-context';\nconst UpdatePlace = () => {\n\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n  const [loadedPlace, setLoadedPlace] = useState();\n\n  const placeId = useParams().placeId;\n  const history = useHistory();\n\n  const auth = useContext(AuthContext);\n\n  const [formState, inputHandler, setFormData] = useForm(\n    {\n      title: {\n        value: '',\n        isValid: false\n      },\n      description: {\n        value: '',\n        isValid: false\n      }\n    },\n    false\n  );\n\n  useEffect(() => {\n    const fetchPlace = async () => {\n      try {\n\n        console.log(\"Got here\");\n        console.log(\"Place Id : \" + placeId);\n\n        const responseData = await sendRequest(process.env.REACT_APP_BACKEND_URL + `/places/${placeId}`)\n\n        setLoadedPlace(responseData.place);\n\n        setFormData(\n          {\n            title: {\n              value: responseData.place.title,\n              isValid: true\n            },\n            description: {\n              value: responseData.place.description,\n              isValid: true\n            }\n          },\n          true\n        );\n\n      } catch (err) {\n\n      }\n    };\n    fetchPlace();\n  }, [sendRequest, placeId, setFormData]);\n\n\n  const placeUpdateSubmitHandler = async event => {\n    event.preventDefault();\n    try {\n\n      //console.log(placeId);\n\n      await sendRequest(process.env.REACT_APP_BACKEND_URL + `/places/${placeId}`,\n        'PATCH',\n        JSON.stringify({\n          title: formState.inputs.title.value,\n          description: formState.inputs.description.value\n        }), { 'Content-Type': 'application/json', Authorization: 'Bearer ' + auth.token });\n\n\n      history.push('/' + auth.userId + '/places');\n\n    } catch (err) {\n\n    }\n\n  };\n\n  if (isLoading) {\n    return (\n      <div className=\"center\">\n        <LoadingSpinner asOverlay />\n      </div>\n    );\n  }\n\n  if (!loadedPlace && !error) {\n    return (\n      <div className=\"center\">\n        <Card>\n          <h2>Could not find place!</h2>\n        </Card>\n      </div>\n    );\n  }\n\n\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      {!isLoading && loadedPlace && (<form className=\"place-form\" onSubmit={placeUpdateSubmitHandler}>\n        <Input\n          id=\"title\"\n          element=\"input\"\n          type=\"text\"\n          label=\"Title\"\n          validators={[VALIDATOR_REQUIRE()]}\n          errorText=\"Please enter a valid title.\"\n          onInput={inputHandler}\n          initialValue={loadedPlace.title}\n          initialValid={true}\n        />\n        <Input\n          id=\"description\"\n          element=\"textarea\"\n          label=\"Description\"\n          validators={[VALIDATOR_MINLENGTH(5)]}\n          errorText=\"Please enter a valid description (min. 5 characters).\"\n          onInput={inputHandler}\n          initialValue={loadedPlace.description}\n          initialValid={true}\n        />\n        <Button type=\"submit\" disabled={!formState.isValid}>\n          UPDATE PLACE\n        </Button>\n      </form>)\n      }\n    </React.Fragment>\n\n  );\n};\n\nexport default UpdatePlace;\n","import React from 'react';\n\nimport './Card.css';\n\nconst Card = props => {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n"],"names":["_useHttpClient","useHttpClient","isLoading","error","sendRequest","clearError","_useState","useState","_useState2","_slicedToArray","loadedPlace","setLoadedPlace","placeId","useParams","history","useHistory","auth","useContext","AuthContext","_useForm","useForm","title","value","isValid","description","_useForm2","formState","inputHandler","setFormData","useEffect","fetchPlace","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","responseData","wrap","_context","prev","next","console","log","process","concat","sent","place","t0","stop","apply","arguments","placeUpdateSubmitHandler","_ref2","_callee2","event","_context2","preventDefault","JSON","stringify","inputs","Authorization","token","push","userId","_x","_jsx","className","children","LoadingSpinner","asOverlay","_jsxs","React","ErrorModal","onClear","onSubmit","Input","id","element","type","label","validators","VALIDATOR_REQUIRE","errorText","onInput","initialValue","initialValid","VALIDATOR_MINLENGTH","Button","disabled","Card","props","style"],"sourceRoot":""}