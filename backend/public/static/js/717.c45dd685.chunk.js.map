{"version":3,"file":"static/js/717.c45dd685.chunk.js","mappings":"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","sources":["places/pages/NewPlace.js","shared/components/FormElements/ImageUpload.js"],"sourcesContent":["import React, { useContext } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Input from '../../shared/components/FormElements/Input';\r\nimport Button from '../../shared/components/FormElements/Button';\r\nimport {\r\n  VALIDATOR_REQUIRE,\r\n  VALIDATOR_MINLENGTH\r\n} from '../../shared/util/validators';\r\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\r\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\r\nimport { useHttpClient } from '../../shared/hooks/http-hook';\r\nimport { AuthContext } from '../../shared/context/auth-context';\r\n\r\nimport ImageUpload from '../../shared/components/FormElements/ImageUpload';\r\n\r\nimport { useForm } from '../../shared/hooks/form-hook';\r\nimport './PlaceForm.css';\r\n\r\nconst NewPlace = () => {\r\n\r\n  const auth = useContext(AuthContext);\r\n\r\n  const { isLoading, error, clearError, sendRequest } = useHttpClient();\r\n\r\n  const [formState, inputHandler] = useForm(\r\n    {\r\n      title: {\r\n        value: '',\r\n        isValid: false\r\n      },\r\n      description: {\r\n        value: '',\r\n        isValid: false\r\n      },\r\n      address: {\r\n        value: '',\r\n        isValid: false\r\n      },\r\n      image: {\r\n        value: null,\r\n        isValid: false\r\n      }\r\n    },\r\n    false\r\n  );\r\n\r\n  const history = useHistory();\r\n\r\n  const placeSubmitHandler = async event => {\r\n    event.preventDefault();\r\n\r\n    try {\r\n      const formData = new FormData();\r\n      formData.append('title', formState.inputs.title.value);\r\n      formData.append('description', formState.inputs.description.value);\r\n      formData.append('address', formState.inputs.address.value);\r\n      formData.append('coordinates', { lat: 0, lon: 0 });\r\n      formData.append('creator', auth.userId);\r\n      formData.append('image', formState.inputs.image.value);\r\n      await sendRequest(\r\n        process.env.REACT_APP_BACKEND_URL + '/places/',\r\n        'POST',\r\n        formData,\r\n        {\r\n          Authorization: 'Bearer ' + auth.token\r\n        }\r\n      );\r\n\r\n      //redirect to something\r\n      history.push('/');\r\n    } catch (err) {\r\n\r\n    }\r\n\r\n  };\r\n\r\n  return (\r\n\r\n    <React.Fragment>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      <form className=\"place-form\" onSubmit={placeSubmitHandler}>\r\n\r\n        {isLoading && <LoadingSpinner asOverlay />}\r\n        <Input\r\n          id=\"title\"\r\n          element=\"input\"\r\n          type=\"text\"\r\n          label=\"Title\"\r\n          validators={[VALIDATOR_REQUIRE()]}\r\n          errorText=\"Please enter a valid title.\"\r\n          onInput={inputHandler}\r\n        />\r\n        <Input\r\n          id=\"description\"\r\n          element=\"textarea\"\r\n          label=\"Description\"\r\n          validators={[VALIDATOR_MINLENGTH(5)]}\r\n          errorText=\"Please enter a valid description (at least 5 characters).\"\r\n          onInput={inputHandler}\r\n        />\r\n        <Input\r\n          id=\"address\"\r\n          element=\"input\"\r\n          label=\"Address\"\r\n          validators={[VALIDATOR_REQUIRE()]}\r\n          errorText=\"Please enter a valid address.\"\r\n          onInput={inputHandler}\r\n        />\r\n        <ImageUpload id='image' onInput={inputHandler} errorText=\"Please provide an image.\" />\r\n        <Button type=\"submit\" disabled={!formState.isValid}>\r\n          ADD PLACE\r\n        </Button>\r\n      </form>\r\n    </React.Fragment>\r\n\r\n  );\r\n};\r\n\r\nexport default NewPlace;\r\n","import React, { useRef, useState, useEffect } from 'react'\r\nimport Button from './Button'\r\n\r\n\r\nimport './ImageUpload.css'\r\n\r\nconst ImageUpload = (props) => {\r\n\r\n    const [file, setFile] = useState();\r\n    const [previewUrl, setPreviewUrl] = useState();\r\n    const [isValid, setIsValid] = useState(false);\r\n    const filePickerRef = useRef();\r\n\r\n    useEffect(() => {\r\n\r\n        if (!file) {\r\n            return;\r\n        }\r\n\r\n        const fileReader = new FileReader();\r\n        fileReader.onload = () => {\r\n            setPreviewUrl(fileReader.result);\r\n        };\r\n        fileReader.readAsDataURL(file);\r\n\r\n\r\n    }, [file]);\r\n\r\n    const pickedHandler = event => {\r\n        let pickedFile;\r\n        let fileIsValid;\r\n        if (event.target.files && event.target.files.length === 1) {\r\n            pickedFile = event.target.files[0];\r\n            setFile(pickedFile);\r\n            setIsValid(true);\r\n            fileIsValid = true;\r\n        } else {\r\n            //something is wrong\r\n            setIsValid(false);\r\n            fileIsValid = false;\r\n        }\r\n        props.onInput(props.id, pickedFile, fileIsValid);\r\n    };\r\n\r\n    const pickImageHandler = () => {\r\n        filePickerRef.current.click();\r\n    };\r\n\r\n    return (\r\n        <div className='form-control'>\r\n            <input ref={filePickerRef} id={props.id} style={{ display: 'none' }} onChange={pickedHandler} type=\"file\" accept=\".jpg,.png,.jpeg\" />\r\n            <div className={`image-upload ${props.center && 'center'}`}>\r\n                <div className='image-upload__preview'>\r\n                    {previewUrl && <img src={previewUrl} alt=\"Preview\" />}\r\n                    {!previewUrl && <p>Please pick an image.</p>}\r\n                </div>\r\n                <Button type='button' onClick={pickImageHandler}>PICK IMAGE</Button>\r\n            </div>\r\n\r\n\r\n            {!isValid && <p>{props.errorText}</p>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ImageUpload"],"names":["auth","useContext","AuthContext","_useHttpClient","useHttpClient","isLoading","error","clearError","sendRequest","_useForm","useForm","title","value","isValid","description","address","image","_useForm2","_slicedToArray","formState","inputHandler","history","useHistory","placeSubmitHandler","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","event","formData","wrap","_context","prev","next","preventDefault","FormData","append","inputs","lat","lon","userId","process","Authorization","token","push","t0","stop","_x","apply","arguments","_jsxs","React","children","_jsx","ErrorModal","onClear","className","onSubmit","LoadingSpinner","asOverlay","Input","id","element","type","label","validators","VALIDATOR_REQUIRE","errorText","onInput","VALIDATOR_MINLENGTH","ImageUpload","Button","disabled","props","_useState","useState","_useState2","file","setFile","_useState3","_useState4","previewUrl","setPreviewUrl","_useState5","_useState6","setIsValid","filePickerRef","useRef","useEffect","fileReader","FileReader","onload","result","readAsDataURL","ref","style","display","onChange","pickedFile","fileIsValid","target","files","length","accept","concat","center","src","alt","onClick","current","click"],"sourceRoot":""}