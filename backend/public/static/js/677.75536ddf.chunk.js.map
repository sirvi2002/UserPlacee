{"version":3,"file":"static/js/677.75536ddf.chunk.js","mappings":"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","sources":["../node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","../node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/@babel/runtime/helpers/esm/createClass.js","../node_modules/@babel/runtime/helpers/esm/createSuper.js","../node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/get.js","../node_modules/@babel/runtime/helpers/esm/superPropBase.js","../node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/inherits.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","../node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js","../node_modules/@babel/runtime/helpers/esm/toPropertyKey.js","../node_modules/@babel/runtime/helpers/esm/toPrimitive.js","../node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/ol/Disposable.js","../node_modules/ol/ImageTile.js","../node_modules/ol/Image.js","../node_modules/ol/CollectionEventType.js","../node_modules/ol/Collection.js","../node_modules/ol/style/IconImageCache.js","../node_modules/ol/renderer/Map.js","../node_modules/ol/render/canvas.js","../node_modules/ol/css.js","../node_modules/ol/renderer/Composite.js","../node_modules/ol/layer/Group.js","../node_modules/ol/MapEvent.js","../node_modules/ol/MapBrowserEvent.js","../node_modules/ol/MapBrowserEventType.js","../node_modules/ol/pointer/EventType.js","../node_modules/ol/MapBrowserEventHandler.js","../node_modules/ol/MapEventType.js","../node_modules/ol/MapProperty.js","../node_modules/ol/structs/PriorityQueue.js","../node_modules/ol/TileQueue.js","../node_modules/ol/control/Control.js","../node_modules/ol/control/Attribution.js","../node_modules/ol/control/Rotate.js","../node_modules/ol/control/Zoom.js","../node_modules/ol/interaction/Property.js","../node_modules/ol/interaction/Interaction.js","../node_modules/ol/interaction/DoubleClickZoom.js","../node_modules/ol/interaction/Pointer.js","../node_modules/ol/events/condition.js","../node_modules/ol/interaction/DragPan.js","../node_modules/ol/interaction/DragRotate.js","../node_modules/ol/render/Box.js","../node_modules/ol/interaction/DragBox.js","../node_modules/ol/interaction/DragZoom.js","../node_modules/ol/events/Key.js","../node_modules/ol/interaction/KeyboardPan.js","../node_modules/ol/interaction/KeyboardZoom.js","../node_modules/ol/Kinetic.js","../node_modules/ol/interaction/MouseWheelZoom.js","../node_modules/ol/interaction/PinchRotate.js","../node_modules/ol/interaction/PinchZoom.js","../node_modules/ol/Map.js","../node_modules/ol/control/defaults.js","../node_modules/ol/interaction/defaults.js","../node_modules/ol/Object.js","../node_modules/ol/ObjectEventType.js","../node_modules/ol/Observable.js","../node_modules/ol/Tile.js","../node_modules/ol/TileRange.js","../node_modules/ol/TileState.js","../node_modules/ol/ViewProperty.js","../node_modules/ol/centerconstraint.js","../node_modules/ol/resolutionconstraint.js","../node_modules/ol/View.js","../node_modules/ol/ViewHint.js","../node_modules/ol/array.js","../node_modules/ol/asserts.js","../node_modules/ol/color.js","../node_modules/ol/console.js","../node_modules/ol/coordinate.js","../node_modules/ol/dom.js","../node_modules/ol/easing.js","../node_modules/ol/events.js","../node_modules/ol/events/Event.js","../node_modules/ol/events/EventType.js","../node_modules/ol/events/Target.js","../node_modules/ol/extent/Relationship.js","../node_modules/ol/extent.js","../node_modules/ol/functions.js","../node_modules/ol/geom/Geometry.js","../node_modules/ol/geom/SimpleGeometry.js","../node_modules/ol/geom/flat/transform.js","../node_modules/ol/geom/flat/closest.js","../node_modules/ol/geom/flat/deflate.js","../node_modules/ol/geom/flat/simplify.js","../node_modules/ol/geom/flat/inflate.js","../node_modules/ol/geom/flat/area.js","../node_modules/ol/geom/LinearRing.js","../node_modules/ol/geom/Point.js","../node_modules/ol/geom/flat/interiorpoint.js","../node_modules/ol/geom/flat/reverse.js","../node_modules/ol/geom/flat/orient.js","../node_modules/ol/geom/Polygon.js","../node_modules/ol/geom/flat/contains.js","../node_modules/ol/geom/flat/intersectsextent.js","../node_modules/ol/geom/flat/segments.js","../node_modules/ol/has.js","../node_modules/ol/layer/Base.js","../node_modules/ol/layer/Layer.js","../node_modules/ol/layer/Property.js","../node_modules/ol/layer/TileProperty.js","../node_modules/ol/layer/BaseTile.js","../node_modules/ol/ImageState.js","../node_modules/ol/renderer/Layer.js","../node_modules/ol/renderer/canvas/Layer.js","../node_modules/ol/renderer/canvas/TileLayer.js","../node_modules/ol/layer/Tile.js","../node_modules/ol/math.js","../node_modules/ol/obj.js","../node_modules/ol/proj/Units.js","../node_modules/ol/proj/Projection.js","../node_modules/ol/proj/epsg3857.js","../node_modules/ol/proj/epsg4326.js","../node_modules/ol/proj/projections.js","../node_modules/ol/proj/transforms.js","../node_modules/ol/sphere.js","../node_modules/ol/proj.js","../node_modules/ol/render/Event.js","../node_modules/ol/render/EventType.js","../node_modules/ol/reproj.js","../node_modules/ol/reproj/Triangulation.js","../node_modules/ol/reproj/Tile.js","../node_modules/ol/reproj/common.js","../node_modules/ol/rotationconstraint.js","../node_modules/ol/size.js","../node_modules/ol/structs/LRUCache.js","../node_modules/ol/tilecoord.js","../node_modules/ol/TileCache.js","../node_modules/ol/source/TileEventType.js","../node_modules/ol/source/Source.js","../node_modules/ol/tilegrid/TileGrid.js","../node_modules/ol/tilegrid.js","../node_modules/ol/source/Tile.js","../node_modules/ol/tileurlfunction.js","../node_modules/ol/source/TileImage.js","../node_modules/ol/source/OSM.js","../node_modules/ol/source/XYZ.js","../node_modules/ol/source/UrlTile.js","../node_modules/ol/tilegrid/common.js","../node_modules/ol/transform.js","../node_modules/ol/util.js"],"sourcesContent":["export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","import toPropertyKey from \"./toPropertyKey.js\";\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, toPropertyKey(descriptor.key), descriptor);\n  }\n}\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct.js\";\nimport possibleConstructorReturn from \"./possibleConstructorReturn.js\";\nexport default function _createSuper(Derived) {\n  var hasNativeReflectConstruct = isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = getPrototypeOf(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return possibleConstructorReturn(this, result);\n  };\n}","export default function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}","import toPropertyKey from \"./toPropertyKey.js\";\nexport default function _defineProperty(obj, key, value) {\n  key = toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}","import superPropBase from \"./superPropBase.js\";\nexport default function _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get.bind();\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n      return desc.value;\n    };\n  }\n  return _get.apply(this, arguments);\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n  return object;\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","import defineProperty from \"./defineProperty.js\";\nfunction ownKeys(e, r) {\n  var t = Object.keys(e);\n  if (Object.getOwnPropertySymbols) {\n    var o = Object.getOwnPropertySymbols(e);\n    r && (o = o.filter(function (r) {\n      return Object.getOwnPropertyDescriptor(e, r).enumerable;\n    })), t.push.apply(t, o);\n  }\n  return t;\n}\nexport default function _objectSpread2(e) {\n  for (var r = 1; r < arguments.length; r++) {\n    var t = null != arguments[r] ? arguments[r] : {};\n    r % 2 ? ownKeys(Object(t), !0).forEach(function (r) {\n      defineProperty(e, r, t[r]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) {\n      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n    });\n  }\n  return e;\n}","import _typeof from \"./typeof.js\";\nimport assertThisInitialized from \"./assertThisInitialized.js\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n  return assertThisInitialized(self);\n}","import _typeof from \"./typeof.js\";\nexport default function _regeneratorRuntime() {\n  \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */\n  _regeneratorRuntime = function _regeneratorRuntime() {\n    return e;\n  };\n  var t,\n    e = {},\n    r = Object.prototype,\n    n = r.hasOwnProperty,\n    o = Object.defineProperty || function (t, e, r) {\n      t[e] = r.value;\n    },\n    i = \"function\" == typeof Symbol ? Symbol : {},\n    a = i.iterator || \"@@iterator\",\n    c = i.asyncIterator || \"@@asyncIterator\",\n    u = i.toStringTag || \"@@toStringTag\";\n  function define(t, e, r) {\n    return Object.defineProperty(t, e, {\n      value: r,\n      enumerable: !0,\n      configurable: !0,\n      writable: !0\n    }), t[e];\n  }\n  try {\n    define({}, \"\");\n  } catch (t) {\n    define = function define(t, e, r) {\n      return t[e] = r;\n    };\n  }\n  function wrap(t, e, r, n) {\n    var i = e && e.prototype instanceof Generator ? e : Generator,\n      a = Object.create(i.prototype),\n      c = new Context(n || []);\n    return o(a, \"_invoke\", {\n      value: makeInvokeMethod(t, r, c)\n    }), a;\n  }\n  function tryCatch(t, e, r) {\n    try {\n      return {\n        type: \"normal\",\n        arg: t.call(e, r)\n      };\n    } catch (t) {\n      return {\n        type: \"throw\",\n        arg: t\n      };\n    }\n  }\n  e.wrap = wrap;\n  var h = \"suspendedStart\",\n    l = \"suspendedYield\",\n    f = \"executing\",\n    s = \"completed\",\n    y = {};\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n  var p = {};\n  define(p, a, function () {\n    return this;\n  });\n  var d = Object.getPrototypeOf,\n    v = d && d(d(values([])));\n  v && v !== r && n.call(v, a) && (p = v);\n  var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p);\n  function defineIteratorMethods(t) {\n    [\"next\", \"throw\", \"return\"].forEach(function (e) {\n      define(t, e, function (t) {\n        return this._invoke(e, t);\n      });\n    });\n  }\n  function AsyncIterator(t, e) {\n    function invoke(r, o, i, a) {\n      var c = tryCatch(t[r], t, o);\n      if (\"throw\" !== c.type) {\n        var u = c.arg,\n          h = u.value;\n        return h && \"object\" == _typeof(h) && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) {\n          invoke(\"next\", t, i, a);\n        }, function (t) {\n          invoke(\"throw\", t, i, a);\n        }) : e.resolve(h).then(function (t) {\n          u.value = t, i(u);\n        }, function (t) {\n          return invoke(\"throw\", t, i, a);\n        });\n      }\n      a(c.arg);\n    }\n    var r;\n    o(this, \"_invoke\", {\n      value: function value(t, n) {\n        function callInvokeWithMethodAndArg() {\n          return new e(function (e, r) {\n            invoke(t, n, e, r);\n          });\n        }\n        return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n      }\n    });\n  }\n  function makeInvokeMethod(e, r, n) {\n    var o = h;\n    return function (i, a) {\n      if (o === f) throw new Error(\"Generator is already running\");\n      if (o === s) {\n        if (\"throw\" === i) throw a;\n        return {\n          value: t,\n          done: !0\n        };\n      }\n      for (n.method = i, n.arg = a;;) {\n        var c = n.delegate;\n        if (c) {\n          var u = maybeInvokeDelegate(c, n);\n          if (u) {\n            if (u === y) continue;\n            return u;\n          }\n        }\n        if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) {\n          if (o === h) throw o = s, n.arg;\n          n.dispatchException(n.arg);\n        } else \"return\" === n.method && n.abrupt(\"return\", n.arg);\n        o = f;\n        var p = tryCatch(e, r, n);\n        if (\"normal\" === p.type) {\n          if (o = n.done ? s : l, p.arg === y) continue;\n          return {\n            value: p.arg,\n            done: n.done\n          };\n        }\n        \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg);\n      }\n    };\n  }\n  function maybeInvokeDelegate(e, r) {\n    var n = r.method,\n      o = e.iterator[n];\n    if (o === t) return r.delegate = null, \"throw\" === n && e.iterator[\"return\"] && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y;\n    var i = tryCatch(o, e.iterator, r.arg);\n    if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y;\n    var a = i.arg;\n    return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y);\n  }\n  function pushTryEntry(t) {\n    var e = {\n      tryLoc: t[0]\n    };\n    1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e);\n  }\n  function resetTryEntry(t) {\n    var e = t.completion || {};\n    e.type = \"normal\", delete e.arg, t.completion = e;\n  }\n  function Context(t) {\n    this.tryEntries = [{\n      tryLoc: \"root\"\n    }], t.forEach(pushTryEntry, this), this.reset(!0);\n  }\n  function values(e) {\n    if (e || \"\" === e) {\n      var r = e[a];\n      if (r) return r.call(e);\n      if (\"function\" == typeof e.next) return e;\n      if (!isNaN(e.length)) {\n        var o = -1,\n          i = function next() {\n            for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next;\n            return next.value = t, next.done = !0, next;\n          };\n        return i.next = i;\n      }\n    }\n    throw new TypeError(_typeof(e) + \" is not iterable\");\n  }\n  return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", {\n    value: GeneratorFunctionPrototype,\n    configurable: !0\n  }), o(GeneratorFunctionPrototype, \"constructor\", {\n    value: GeneratorFunction,\n    configurable: !0\n  }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) {\n    var e = \"function\" == typeof t && t.constructor;\n    return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name));\n  }, e.mark = function (t) {\n    return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t;\n  }, e.awrap = function (t) {\n    return {\n      __await: t\n    };\n  }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () {\n    return this;\n  }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) {\n    void 0 === i && (i = Promise);\n    var a = new AsyncIterator(wrap(t, r, n, o), i);\n    return e.isGeneratorFunction(r) ? a : a.next().then(function (t) {\n      return t.done ? t.value : a.next();\n    });\n  }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () {\n    return this;\n  }), define(g, \"toString\", function () {\n    return \"[object Generator]\";\n  }), e.keys = function (t) {\n    var e = Object(t),\n      r = [];\n    for (var n in e) r.push(n);\n    return r.reverse(), function next() {\n      for (; r.length;) {\n        var t = r.pop();\n        if (t in e) return next.value = t, next.done = !1, next;\n      }\n      return next.done = !0, next;\n    };\n  }, e.values = values, Context.prototype = {\n    constructor: Context,\n    reset: function reset(e) {\n      if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t);\n    },\n    stop: function stop() {\n      this.done = !0;\n      var t = this.tryEntries[0].completion;\n      if (\"throw\" === t.type) throw t.arg;\n      return this.rval;\n    },\n    dispatchException: function dispatchException(e) {\n      if (this.done) throw e;\n      var r = this;\n      function handle(n, o) {\n        return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o;\n      }\n      for (var o = this.tryEntries.length - 1; o >= 0; --o) {\n        var i = this.tryEntries[o],\n          a = i.completion;\n        if (\"root\" === i.tryLoc) return handle(\"end\");\n        if (i.tryLoc <= this.prev) {\n          var c = n.call(i, \"catchLoc\"),\n            u = n.call(i, \"finallyLoc\");\n          if (c && u) {\n            if (this.prev < i.catchLoc) return handle(i.catchLoc, !0);\n            if (this.prev < i.finallyLoc) return handle(i.finallyLoc);\n          } else if (c) {\n            if (this.prev < i.catchLoc) return handle(i.catchLoc, !0);\n          } else {\n            if (!u) throw new Error(\"try statement without catch or finally\");\n            if (this.prev < i.finallyLoc) return handle(i.finallyLoc);\n          }\n        }\n      }\n    },\n    abrupt: function abrupt(t, e) {\n      for (var r = this.tryEntries.length - 1; r >= 0; --r) {\n        var o = this.tryEntries[r];\n        if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) {\n          var i = o;\n          break;\n        }\n      }\n      i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null);\n      var a = i ? i.completion : {};\n      return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a);\n    },\n    complete: function complete(t, e) {\n      if (\"throw\" === t.type) throw t.arg;\n      return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y;\n    },\n    finish: function finish(t) {\n      for (var e = this.tryEntries.length - 1; e >= 0; --e) {\n        var r = this.tryEntries[e];\n        if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y;\n      }\n    },\n    \"catch\": function _catch(t) {\n      for (var e = this.tryEntries.length - 1; e >= 0; --e) {\n        var r = this.tryEntries[e];\n        if (r.tryLoc === t) {\n          var n = r.completion;\n          if (\"throw\" === n.type) {\n            var o = n.arg;\n            resetTryEntry(r);\n          }\n          return o;\n        }\n      }\n      throw new Error(\"illegal catch attempt\");\n    },\n    delegateYield: function delegateYield(e, r, n) {\n      return this.delegate = {\n        iterator: values(e),\n        resultName: r,\n        nextLoc: n\n      }, \"next\" === this.method && (this.arg = t), y;\n    }\n  }, e;\n}","import _typeof from \"./typeof.js\";\nimport toPrimitive from \"./toPrimitive.js\";\nexport default function _toPropertyKey(arg) {\n  var key = toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}","import _typeof from \"./typeof.js\";\nexport default function _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}","export default function _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, _typeof(o);\n}","/**\n * @module ol/Disposable\n */\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nclass Disposable {\n  constructor() {\n    /**\n     * The object has already been disposed.\n     * @type {boolean}\n     * @protected\n     */\n    this.disposed = false;\n  }\n\n  /**\n   * Clean up.\n   */\n  dispose() {\n    if (!this.disposed) {\n      this.disposed = true;\n      this.disposeInternal();\n    }\n  }\n\n  /**\n   * Extension point for disposable objects.\n   * @protected\n   */\n  disposeInternal() {}\n}\n\nexport default Disposable;\n","/**\n * @module ol/ImageTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {listenImage} from './Image.js';\n\nclass ImageTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"./Tile.js\").Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, src, crossOrigin, tileLoadFunction, options) {\n    super(tileCoord, state, options);\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * Image URI\n     *\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    this.key = src;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n  }\n\n  /**\n   * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Sets an HTML image element for this tile (may be a Canvas or preloaded Image).\n   * @param {HTMLCanvasElement|HTMLImageElement} element Element.\n   */\n  setImage(element) {\n    this.image_ = element;\n    this.state = TileState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = TileState.ERROR;\n    this.unlistenImage_();\n    this.image_ = getBlankImage();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    const image = /** @type {HTMLImageElement} */ (this.image_);\n    if (image.naturalWidth && image.naturalHeight) {\n      this.state = TileState.LOADED;\n    } else {\n      this.state = TileState.EMPTY;\n    }\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   *\n   * To retry loading tiles on failed requests, use a custom `tileLoadFunction`\n   * that checks for error status codes and reloads only when the status code is\n   * 408, 429, 500, 502, 503 and 504, and only when not too many retries have been\n   * made already:\n   *\n   * ```js\n   * const retryCodes = [408, 429, 500, 502, 503, 504];\n   * const retries = {};\n   * source.setTileLoadFunction((tile, src) => {\n   *   const image = tile.getImage();\n   *   fetch(src)\n   *     .then((response) => {\n   *       if (retryCodes.includes(response.status)) {\n   *         retries[src] = (retries[src] || 0) + 1;\n   *         if (retries[src] <= 3) {\n   *           setTimeout(() => tile.load(), retries[src] * 1000);\n   *         }\n   *         return Promise.reject();\n   *       }\n   *       return response.blob();\n   *     })\n   *     .then((blob) => {\n   *       const imageUrl = URL.createObjectURL(blob);\n   *       image.src = imageUrl;\n   *       setTimeout(() => URL.revokeObjectURL(imageUrl), 5000);\n   *     })\n   *     .catch(() => tile.setState(3)); // error\n   * });\n   * ```\n   *\n   * @api\n   */\n  load() {\n    if (this.state == TileState.ERROR) {\n      this.state = TileState.IDLE;\n      this.image_ = new Image();\n      if (this.crossOrigin_ !== null) {\n        this.image_.crossOrigin = this.crossOrigin_;\n      }\n    }\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n      this.tileLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n  const ctx = createCanvasContext2D(1, 1);\n  ctx.fillStyle = 'rgba(0,0,0,0)';\n  ctx.fillRect(0, 0, 1, 1);\n  return ctx.canvas;\n}\n\nexport default ImageTile;\n","/**\n * @module ol/Image\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport ImageState from './ImageState.js';\nimport {CREATE_IMAGE_BITMAP, IMAGE_DECODE} from './has.js';\nimport {listenOnce, unlistenByKey} from './events.js';\nimport {toPromise} from './functions.js';\n\n/**\n * A function that takes an {@link module:ol/Image~ImageWrapper} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~ImageWrapper#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(import(\"./Image.js\").default, string): void} LoadFunction\n * @api\n */\n\n/**\n * @typedef {Object} ImageObject\n * @property {import(\"./extent.js\").Extent} [extent] Extent, if different from the requested one.\n * @property {import(\"./resolution.js\").ResolutionLike} [resolution] Resolution, if different from the requested one.\n * When x and y resolution are different, use the array type (`[xResolution, yResolution]`).\n * @property {number} [pixelRatio] Pixel ratio, if different from the requested one.\n * @property {import('./DataTile.js').ImageLike} image Image.\n */\n\n/**\n * Loader function used for image sources. Receives extent, resolution and pixel ratio as arguments.\n * For images that cover any extent and resolution (static images), the loader function should not accept\n * any arguments. The function returns an {@link import(\"./DataTile.js\").ImageLike image}, an\n * {@link import(\"./Image.js\").ImageObject image object}, or a promise for the same.\n * For loaders that generate images, the promise should not resolve until the image is loaded.\n * If the returned image does not match the extent, resolution or pixel ratio passed to the loader,\n * it has to return an {@link import(\"./Image.js\").ImageObject image object} with the `image` and the\n * correct `extent`, `resolution` and `pixelRatio`.\n *\n * @typedef {function(import(\"./extent.js\").Extent, number, number, (function(HTMLImageElement, string): void)=): import(\"./DataTile.js\").ImageLike|ImageObject|Promise<import(\"./DataTile.js\").ImageLike|ImageObject>} Loader\n * @api\n */\n\n/**\n * Loader function used for image sources. Receives extent, resolution and pixel ratio as arguments.\n * The function returns a promise for an  {@link import(\"./Image.js\").ImageObject image object}.\n *\n * @typedef {function(import(\"./extent.js\").Extent, number, number, (function(HTMLImageElement, string): void)=): import(\"./DataTile.js\").ImageLike|ImageObject|Promise<import(\"./DataTile.js\").ImageLike|ImageObject>} ImageObjectPromiseLoader\n */\n\nclass ImageWrapper extends EventTarget {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|Array<number>|undefined} resolution Resolution. If provided as array, x and y\n   * resolution will be assumed.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"./ImageState.js\").default|import(\"./Image.js\").Loader} stateOrLoader State.\n   */\n  constructor(extent, resolution, pixelRatio, stateOrLoader) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = extent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number|Array<number>|undefined}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state =\n      typeof stateOrLoader === 'function' ? ImageState.IDLE : stateOrLoader;\n\n    /**\n     * @private\n     * @type {import('./DataTile.js').ImageLike|null}\n     */\n    this.image_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"./Image.js\").Loader}\n     */\n    this.loader = typeof stateOrLoader === 'function' ? stateOrLoader : null;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  getExtent() {\n    return this.extent;\n  }\n\n  /**\n   * @return {import('./DataTile.js').ImageLike} Image.\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * @return {number} PixelRatio.\n   */\n  getPixelRatio() {\n    return this.pixelRatio_;\n  }\n\n  /**\n   * @return {number|Array<number>} Resolution.\n   */\n  getResolution() {\n    return /** @type {number} */ (this.resolution);\n  }\n\n  /**\n   * @return {import(\"./ImageState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == ImageState.IDLE) {\n      if (this.loader) {\n        this.state = ImageState.LOADING;\n        this.changed();\n        const resolution = this.getResolution();\n        const requestResolution = Array.isArray(resolution)\n          ? resolution[0]\n          : resolution;\n        toPromise(() =>\n          this.loader(this.getExtent(), requestResolution, this.getPixelRatio())\n        )\n          .then((image) => {\n            if ('image' in image) {\n              this.image_ = image.image;\n            }\n            if ('extent' in image) {\n              this.extent = image.extent;\n            }\n            if ('resolution' in image) {\n              this.resolution = image.resolution;\n            }\n            if ('pixelRatio' in image) {\n              this.pixelRatio_ = image.pixelRatio;\n            }\n            if (\n              image instanceof HTMLImageElement ||\n              image instanceof ImageBitmap ||\n              image instanceof HTMLCanvasElement ||\n              image instanceof HTMLVideoElement\n            ) {\n              this.image_ = image;\n            }\n            this.state = ImageState.LOADED;\n          })\n          .catch((error) => {\n            this.state = ImageState.ERROR;\n            console.error(error); // eslint-disable-line no-console\n          })\n          .finally(() => this.changed());\n      }\n    }\n  }\n\n  /**\n   * @param {import('./DataTile.js').ImageLike} image The image.\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * @param {number|Array<number>} resolution Resolution.\n   */\n  setResolution(resolution) {\n    this.resolution = resolution;\n  }\n}\n\n/**\n * @param {import('./DataTile.js').ImageLike} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\nexport function listenImage(image, loadHandler, errorHandler) {\n  const img = /** @type {HTMLImageElement} */ (image);\n  let listening = true;\n  let decoding = false;\n  let loaded = false;\n\n  const listenerKeys = [\n    listenOnce(img, EventType.LOAD, function () {\n      loaded = true;\n      if (!decoding) {\n        loadHandler();\n      }\n    }),\n  ];\n\n  if (img.src && IMAGE_DECODE) {\n    decoding = true;\n    img\n      .decode()\n      .then(function () {\n        if (listening) {\n          loadHandler();\n        }\n      })\n      .catch(function (error) {\n        if (listening) {\n          if (loaded) {\n            loadHandler();\n          } else {\n            errorHandler();\n          }\n        }\n      });\n  } else {\n    listenerKeys.push(listenOnce(img, EventType.ERROR, errorHandler));\n  }\n\n  return function unlisten() {\n    listening = false;\n    listenerKeys.forEach(unlistenByKey);\n  };\n}\n\n/**\n * Loads an image.\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<HTMLImageElement>} Promise resolving to an `HTMLImageElement`.\n * @api\n */\nexport function load(image, src) {\n  return new Promise((resolve, reject) => {\n    function handleLoad() {\n      unlisten();\n      resolve(image);\n    }\n    function handleError() {\n      unlisten();\n      reject(new Error('Image load error'));\n    }\n    function unlisten() {\n      image.removeEventListener('load', handleLoad);\n      image.removeEventListener('error', handleError);\n    }\n    image.addEventListener('load', handleLoad);\n    image.addEventListener('error', handleError);\n    if (src) {\n      image.src = src;\n    }\n  });\n}\n\n/**\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<HTMLImageElement>} Promise resolving to an `HTMLImageElement`.\n */\nexport function decodeFallback(image, src) {\n  if (src) {\n    image.src = src;\n  }\n  return IMAGE_DECODE\n    ? new Promise((resolve, reject) =>\n        image.decode().then(() => resolve(image), reject)\n      )\n    : load(image);\n}\n\n/**\n * Loads an image and decodes it to an `ImageBitmap` if `createImageBitmap()` is supported. Returns\n * the loaded image otherwise.\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<ImageBitmap|HTMLImageElement>} Promise resolving to an `ImageBitmap` or an\n * `HTMLImageElement` if `createImageBitmap()` is not supported.\n * @api\n */\nexport function decode(image, src) {\n  if (src) {\n    image.src = src;\n  }\n  return IMAGE_DECODE && CREATE_IMAGE_BITMAP\n    ? image.decode().then(() => createImageBitmap(image))\n    : decodeFallback(image);\n}\n\nexport default ImageWrapper;\n","/**\n * @module ol/CollectionEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when an item is added to the collection.\n   * @event module:ol/Collection.CollectionEvent#add\n   * @api\n   */\n  ADD: 'add',\n  /**\n   * Triggered when an item is removed from the collection.\n   * @event module:ol/Collection.CollectionEvent#remove\n   * @api\n   */\n  REMOVE: 'remove',\n};\n","/**\n * @module ol/Collection\n */\nimport BaseObject from './Object.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport Event from './events/Event.js';\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LENGTH: 'length',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n * @template T\n */\nexport class CollectionEvent extends Event {\n  /**\n   * @param {import(\"./CollectionEventType.js\").default} type Type.\n   * @param {T} element Element.\n   * @param {number} index The index of the added or removed element.\n   */\n  constructor(type, element, index) {\n    super(type);\n\n    /**\n     * The element that is added to or removed from the collection.\n     * @type {T}\n     * @api\n     */\n    this.element = element;\n\n    /**\n     * The index of the added or removed element.\n     * @type {number}\n     * @api\n     */\n    this.index = index;\n  }\n}\n\n/***\n * @template T\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:length', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").OnSignature<'add'|'remove', CollectionEvent<T>, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types|\n *     'change:length'|'add'|'remove',Return>} CollectionOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nclass Collection extends BaseObject {\n  /**\n   * @param {Array<T>} [array] Array.\n   * @param {Options} [options] Collection options.\n   */\n  constructor(array, options) {\n    super();\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {CollectionOnSignature<T, void>}\n     */\n    this.un;\n\n    options = options || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.unique_ = !!options.unique;\n\n    /**\n     * @private\n     * @type {!Array<T>}\n     */\n    this.array_ = array ? array : [];\n\n    if (this.unique_) {\n      for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n        this.assertUnique_(this.array_[i], i);\n      }\n    }\n\n    this.updateLength_();\n  }\n\n  /**\n   * Remove all elements from the collection.\n   * @api\n   */\n  clear() {\n    while (this.getLength() > 0) {\n      this.pop();\n    }\n  }\n\n  /**\n   * Add elements to the collection.  This pushes each item in the provided array\n   * to the end of the collection.\n   * @param {!Array<T>} arr Array.\n   * @return {Collection<T>} This collection.\n   * @api\n   */\n  extend(arr) {\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      this.push(arr[i]);\n    }\n    return this;\n  }\n\n  /**\n   * Iterate over each element, calling the provided callback.\n   * @param {function(T, number, Array<T>): *} f The function to call\n   *     for every element. This function takes 3 arguments (the element, the\n   *     index and the array). The return value is ignored.\n   * @api\n   */\n  forEach(f) {\n    const array = this.array_;\n    for (let i = 0, ii = array.length; i < ii; ++i) {\n      f(array[i], i, array);\n    }\n  }\n\n  /**\n   * Get a reference to the underlying Array object. Warning: if the array\n   * is mutated, no events will be dispatched by the collection, and the\n   * collection's \"length\" property won't be in sync with the actual length\n   * of the array.\n   * @return {!Array<T>} Array.\n   * @api\n   */\n  getArray() {\n    return this.array_;\n  }\n\n  /**\n   * Get the element at the provided index.\n   * @param {number} index Index.\n   * @return {T} Element.\n   * @api\n   */\n  item(index) {\n    return this.array_[index];\n  }\n\n  /**\n   * Get the length of this collection.\n   * @return {number} The length of the array.\n   * @observable\n   * @api\n   */\n  getLength() {\n    return this.get(Property.LENGTH);\n  }\n\n  /**\n   * Insert an element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  insertAt(index, elem) {\n    if (index < 0 || index > this.getLength()) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    this.array_.splice(index, 0, elem);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.ADD, elem, index)\n    );\n  }\n\n  /**\n   * Remove the last element of the collection and return it.\n   * Return `undefined` if the collection is empty.\n   * @return {T|undefined} Element.\n   * @api\n   */\n  pop() {\n    return this.removeAt(this.getLength() - 1);\n  }\n\n  /**\n   * Insert the provided element at the end of the collection.\n   * @param {T} elem Element.\n   * @return {number} New length of the collection.\n   * @api\n   */\n  push(elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    const n = this.getLength();\n    this.insertAt(n, elem);\n    return this.getLength();\n  }\n\n  /**\n   * Remove the first occurrence of an element from the collection.\n   * @param {T} elem Element.\n   * @return {T|undefined} The removed element or undefined if none found.\n   * @api\n   */\n  remove(elem) {\n    const arr = this.array_;\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      if (arr[i] === elem) {\n        return this.removeAt(i);\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Remove the element at the provided index and return it.\n   * Return `undefined` if the collection does not contain this index.\n   * @param {number} index Index.\n   * @return {T|undefined} Value.\n   * @api\n   */\n  removeAt(index) {\n    if (index < 0 || index >= this.getLength()) {\n      return undefined;\n    }\n    const prev = this.array_[index];\n    this.array_.splice(index, 1);\n    this.updateLength_();\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      )\n    );\n    return prev;\n  }\n\n  /**\n   * Set the element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  setAt(index, elem) {\n    const n = this.getLength();\n    if (index >= n) {\n      this.insertAt(index, elem);\n      return;\n    }\n    if (index < 0) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem, index);\n    }\n    const prev = this.array_[index];\n    this.array_[index] = elem;\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      )\n    );\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.ADD, elem, index)\n      )\n    );\n  }\n\n  /**\n   * @private\n   */\n  updateLength_() {\n    this.set(Property.LENGTH, this.array_.length);\n  }\n\n  /**\n   * @private\n   * @param {T} elem Element.\n   * @param {number} [except] Optional index to ignore.\n   */\n  assertUnique_(elem, except) {\n    for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n      if (this.array_[i] === elem && i !== except) {\n        throw new Error('Duplicate item added to a unique collection');\n      }\n    }\n  }\n}\n\nexport default Collection;\n","/**\n * @module ol/style/IconImageCache\n */\nimport {asString} from '../color.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache.shared}.\n */\nclass IconImageCache {\n  constructor() {\n    /**\n     * @type {!Object<string, import(\"./IconImage.js\").default>}\n     * @private\n     */\n    this.cache_ = {};\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.cacheSize_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxCacheSize_ = 32;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.cache_ = {};\n    this.cacheSize_ = 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.cacheSize_ > this.maxCacheSize_;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  expire() {\n    if (this.canExpireCache()) {\n      let i = 0;\n      for (const key in this.cache_) {\n        const iconImage = this.cache_[key];\n        if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n          delete this.cache_[key];\n          --this.cacheSize_;\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @return {import(\"./IconImage.js\").default} Icon image.\n   */\n  get(src, crossOrigin, color) {\n    const key = getKey(src, crossOrigin, color);\n    return key in this.cache_ ? this.cache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @param {import(\"./IconImage.js\").default} iconImage Icon image.\n   */\n  set(src, crossOrigin, color, iconImage) {\n    const key = getKey(src, crossOrigin, color);\n    this.cache_[key] = iconImage;\n    ++this.cacheSize_;\n  }\n\n  /**\n   * Set the cache size of the icon cache. Default is `32`. Change this value when\n   * your map uses more than 32 different icon images and you are not caching icon\n   * styles on the application level.\n   * @param {number} maxCacheSize Cache max size.\n   * @api\n   */\n  setSize(maxCacheSize) {\n    this.maxCacheSize_ = maxCacheSize;\n    this.expire();\n  }\n}\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n  const colorString = color ? asString(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\nexport default IconImageCache;\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport const shared = new IconImageCache();\n","/**\n * @module ol/renderer/Map\n */\nimport Disposable from '../Disposable.js';\nimport {TRUE} from '../functions.js';\nimport {abstract} from '../util.js';\nimport {compose as composeTransform, makeInverse} from '../transform.js';\nimport {getWidth} from '../extent.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\nimport {inView} from '../layer/Layer.js';\nimport {wrapX} from '../coordinate.js';\n\n/**\n * @template T\n * @typedef HitMatch\n * @property {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @property {import(\"../layer/Layer.js\").default} layer Layer.\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} distanceSq Squared distance.\n * @property {import(\"./vector.js\").FeatureCallback<T>} callback Callback.\n */\n\n/**\n * @abstract\n */\nclass MapRenderer extends Disposable {\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  constructor(map) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default}\n     */\n    this.map_ = map;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @protected\n   */\n  calculateMatrices2D(frameState) {\n    const viewState = frameState.viewState;\n    const coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n    const pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n\n    composeTransform(\n      coordinateToPixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / viewState.resolution,\n      -1 / viewState.resolution,\n      -viewState.rotation,\n      -viewState.center[0],\n      -viewState.center[1]\n    );\n\n    makeInverse(pixelToCoordinateTransform, coordinateToPixelTransform);\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    callback,\n    thisArg,\n    layerFilter,\n    thisArg2\n  ) {\n    let result;\n    const viewState = frameState.viewState;\n\n    /**\n     * @param {boolean} managed Managed layer.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function forEachFeatureAtCoordinate(managed, feature, layer, geometry) {\n      return callback.call(thisArg, feature, managed ? layer : null, geometry);\n    }\n\n    const projection = viewState.projection;\n\n    const translatedCoordinate = wrapX(coordinate.slice(), projection);\n    const offsets = [[0, 0]];\n    if (projection.canWrapX() && checkWrapped) {\n      const projectionExtent = projection.getExtent();\n      const worldWidth = getWidth(projectionExtent);\n      offsets.push([-worldWidth, 0], [worldWidth, 0]);\n    }\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    const matches = /** @type {Array<HitMatch<T>>} */ ([]);\n    const tmpCoord = [];\n    for (let i = 0; i < offsets.length; i++) {\n      for (let j = numLayers - 1; j >= 0; --j) {\n        const layerState = layerStates[j];\n        const layer = layerState.layer;\n        if (\n          layer.hasRenderer() &&\n          inView(layerState, viewState) &&\n          layerFilter.call(thisArg2, layer)\n        ) {\n          const layerRenderer = layer.getRenderer();\n          const source = layer.getSource();\n          if (layerRenderer && source) {\n            const coordinates = source.getWrapX()\n              ? translatedCoordinate\n              : coordinate;\n            const callback = forEachFeatureAtCoordinate.bind(\n              null,\n              layerState.managed\n            );\n            tmpCoord[0] = coordinates[0] + offsets[i][0];\n            tmpCoord[1] = coordinates[1] + offsets[i][1];\n            result = layerRenderer.forEachFeatureAtCoordinate(\n              tmpCoord,\n              frameState,\n              hitTolerance,\n              callback,\n              matches\n            );\n          }\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    if (matches.length === 0) {\n      return undefined;\n    }\n    const order = 1 / matches.length;\n    matches.forEach((m, i) => (m.distanceSq += i * order));\n    matches.sort((a, b) => a.distanceSq - b.distanceSq);\n    matches.some((m) => {\n      return (result = m.callback(m.feature, m.layer, m.geometry));\n    });\n    return result;\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n   * @return {boolean} Is there a feature at the given coordinate?\n   * @template U\n   */\n  hasFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    layerFilter,\n    thisArg\n  ) {\n    const hasFeature = this.forEachFeatureAtCoordinate(\n      coordinate,\n      frameState,\n      hitTolerance,\n      checkWrapped,\n      TRUE,\n      this,\n      layerFilter,\n      thisArg\n    );\n\n    return hasFeature !== undefined;\n  }\n\n  /**\n   * @return {import(\"../Map.js\").default} Map.\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Render.\n   * @abstract\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  flushDeclutterItems(frameState) {}\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  scheduleExpireIconCache(frameState) {\n    if (iconImageCache.canExpireCache()) {\n      frameState.postRenderFunctions.push(expireIconCache);\n    }\n  }\n}\n\n/**\n * @param {import(\"../Map.js\").default} map Map.\n * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n  iconImageCache.expire();\n}\n\nexport default MapRenderer;\n","/**\n * @module ol/render/canvas\n */\nimport BaseObject from '../Object.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../has.js';\nimport {clear} from '../obj.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {getFontParameters} from '../css.js';\n\n/**\n * @typedef {'Circle' | 'Image' | 'LineString' | 'Polygon' | 'Text' | 'Default'} BuilderType\n */\n\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle FillStyle.\n */\n\n/**\n * @typedef Label\n * @property {number} width Width.\n * @property {number} height Height.\n * @property {Array<string|number>} contextInstructions ContextInstructions.\n */\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle] Current FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle] Current StrokeStyle.\n * @property {CanvasLineCap} [currentLineCap] Current LineCap.\n * @property {Array<number>} currentLineDash Current LineDash.\n * @property {number} [currentLineDashOffset] Current LineDashOffset.\n * @property {CanvasLineJoin} [currentLineJoin] Current LineJoin.\n * @property {number} [currentLineWidth] Current LineWidth.\n * @property {number} [currentMiterLimit] Current MiterLimit.\n * @property {number} [lastStroke] Last stroke.\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle] FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {CanvasLineCap} [lineCap] LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} [lineDashOffset] LineDashOffset.\n * @property {CanvasLineJoin} [lineJoin] LineJoin.\n * @property {number} [lineWidth] LineWidth.\n * @property {number} [miterLimit] MiterLimit.\n */\n\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} lineWidth LineWidth.\n * @property {number} miterLimit MiterLimit.\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle StrokeStyle.\n */\n\n/**\n * @typedef {Object} TextState\n * @property {string} font Font.\n * @property {CanvasTextAlign} [textAlign] TextAlign.\n * @property {number} [repeat] Repeat.\n * @property {import(\"../style/Text.js\").TextJustify} [justify] Justify.\n * @property {CanvasTextBaseline} textBaseline TextBaseline.\n * @property {import(\"../style/Text.js\").TextPlacement} [placement] Placement.\n * @property {number} [maxAngle] MaxAngle.\n * @property {boolean} [overflow] Overflow.\n * @property {import(\"../style/Fill.js\").default} [backgroundFill] BackgroundFill.\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke] BackgroundStroke.\n * @property {import(\"../size.js\").Size} [scale] Scale.\n * @property {Array<number>} [padding] Padding.\n */\n\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, StrokeState>} [strokeStates] The stroke states (decluttering).\n */\n\n/**\n * @typedef {Object<number, import(\"./canvas/Executor.js\").ReplayImageOrLabelArgs>} DeclutterImageWithText\n */\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFont = '10px sans-serif';\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFillStyle = '#000';\n\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport const defaultLineCap = 'round';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultLineDash = [];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineDashOffset = 0;\n\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport const defaultLineJoin = 'round';\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultMiterLimit = 10;\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultStrokeStyle = '#000';\n\n/**\n * @const\n * @type {CanvasTextAlign}\n */\nexport const defaultTextAlign = 'center';\n\n/**\n * @const\n * @type {CanvasTextBaseline}\n */\nexport const defaultTextBaseline = 'middle';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultPadding = [0, 0, 0, 0];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineWidth = 1;\n\n/**\n * @type {BaseObject}\n */\nexport const checkedFonts = new BaseObject();\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet measureContext = null;\n\n/**\n * @type {string}\n */\nlet measureFont;\n\n/**\n * @type {!Object<string, number>}\n */\nexport const textHeights = {};\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport const registerFont = (function () {\n  const retries = 100;\n  const size = '32px ';\n  const referenceFonts = ['monospace', 'serif'];\n  const len = referenceFonts.length;\n  const text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  let interval, referenceWidth;\n\n  /**\n   * @param {string} fontStyle Css font-style\n   * @param {string} fontWeight Css font-weight\n   * @param {*} fontFamily Css font-family\n   * @return {boolean} Font with style and weight is available\n   */\n  function isAvailable(fontStyle, fontWeight, fontFamily) {\n    let available = true;\n    for (let i = 0; i < len; ++i) {\n      const referenceFont = referenceFonts[i];\n      referenceWidth = measureTextWidth(\n        fontStyle + ' ' + fontWeight + ' ' + size + referenceFont,\n        text\n      );\n      if (fontFamily != referenceFont) {\n        const width = measureTextWidth(\n          fontStyle +\n            ' ' +\n            fontWeight +\n            ' ' +\n            size +\n            fontFamily +\n            ',' +\n            referenceFont,\n          text\n        );\n        // If width and referenceWidth are the same, then the fallback was used\n        // instead of the font we wanted, so the font is not available.\n        available = available && width != referenceWidth;\n      }\n    }\n    if (available) {\n      return true;\n    }\n    return false;\n  }\n\n  function check() {\n    let done = true;\n    const fonts = checkedFonts.getKeys();\n    for (let i = 0, ii = fonts.length; i < ii; ++i) {\n      const font = fonts[i];\n      if (checkedFonts.get(font) < retries) {\n        if (isAvailable.apply(this, font.split('\\n'))) {\n          clear(textHeights);\n          // Make sure that loaded fonts are picked up by Safari\n          measureContext = null;\n          measureFont = undefined;\n          checkedFonts.set(font, retries);\n        } else {\n          checkedFonts.set(font, checkedFonts.get(font) + 1, true);\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function (fontSpec) {\n    const font = getFontParameters(fontSpec);\n    if (!font) {\n      return;\n    }\n    const families = font.families;\n    for (let i = 0, ii = families.length; i < ii; ++i) {\n      const family = families[i];\n      const key = font.style + '\\n' + font.weight + '\\n' + family;\n      if (checkedFonts.get(key) === undefined) {\n        checkedFonts.set(key, retries, true);\n        if (!isAvailable(font.style, font.weight, family)) {\n          checkedFonts.set(key, 0, true);\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n})();\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport const measureTextHeight = (function () {\n  /**\n   * @type {HTMLDivElement}\n   */\n  let measureElement;\n  return function (fontSpec) {\n    let height = textHeights[fontSpec];\n    if (height == undefined) {\n      if (WORKER_OFFSCREEN_CANVAS) {\n        const font = getFontParameters(fontSpec);\n        const metrics = measureText(fontSpec, 'Žg');\n        const lineHeight = isNaN(Number(font.lineHeight))\n          ? 1.2\n          : Number(font.lineHeight);\n        height =\n          lineHeight *\n          (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n      } else {\n        if (!measureElement) {\n          measureElement = document.createElement('div');\n          measureElement.innerHTML = 'M';\n          measureElement.style.minHeight = '0';\n          measureElement.style.maxHeight = 'none';\n          measureElement.style.height = 'auto';\n          measureElement.style.padding = '0';\n          measureElement.style.border = 'none';\n          measureElement.style.position = 'absolute';\n          measureElement.style.display = 'block';\n          measureElement.style.left = '-99999px';\n        }\n        measureElement.style.font = fontSpec;\n        document.body.appendChild(measureElement);\n        height = measureElement.offsetHeight;\n        document.body.removeChild(measureElement);\n      }\n      textHeights[fontSpec] = height;\n    }\n    return height;\n  };\n})();\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {TextMetrics} Text metrics.\n */\nfunction measureText(font, text) {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  if (font != measureFont) {\n    measureContext.font = font;\n    measureFont = measureContext.font;\n  }\n  return measureContext.measureText(text);\n}\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  return measureText(font, text).width;\n}\n\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @return {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n  if (text in cache) {\n    return cache[text];\n  }\n  const width = text\n    .split('\\n')\n    .reduce((prev, curr) => Math.max(prev, measureTextWidth(font, curr)), 0);\n  cache[text] = width;\n  return width;\n}\n\n/**\n * @param {TextState} baseStyle Base style.\n * @param {Array<string>} chunks Text chunks to measure.\n * @return {{width: number, height: number, widths: Array<number>, heights: Array<number>, lineWidths: Array<number>}}} Text metrics.\n */\nexport function getTextDimensions(baseStyle, chunks) {\n  const widths = [];\n  const heights = [];\n  const lineWidths = [];\n  let width = 0;\n  let lineWidth = 0;\n  let height = 0;\n  let lineHeight = 0;\n  for (let i = 0, ii = chunks.length; i <= ii; i += 2) {\n    const text = chunks[i];\n    if (text === '\\n' || i === ii) {\n      width = Math.max(width, lineWidth);\n      lineWidths.push(lineWidth);\n      lineWidth = 0;\n      height += lineHeight;\n      continue;\n    }\n    const font = chunks[i + 1] || baseStyle.font;\n    const currentWidth = measureTextWidth(font, text);\n    widths.push(currentWidth);\n    lineWidth += currentWidth;\n    const currentHeight = measureTextHeight(font);\n    heights.push(currentHeight);\n    lineHeight = Math.max(lineHeight, currentHeight);\n  }\n  return {width, height, widths, heights, lineWidths};\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {import(\"../size.js\").Size} scale Scale.\n */\nexport function drawImageOrLabel(\n  context,\n  transform,\n  opacity,\n  labelOrImage,\n  originX,\n  originY,\n  w,\n  h,\n  x,\n  y,\n  scale\n) {\n  context.save();\n\n  if (opacity !== 1) {\n    context.globalAlpha *= opacity;\n  }\n  if (transform) {\n    context.transform.apply(context, transform);\n  }\n\n  if (/** @type {*} */ (labelOrImage).contextInstructions) {\n    // label\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    executeLabelInstructions(/** @type {Label} */ (labelOrImage), context);\n  } else if (scale[0] < 0 || scale[1] < 0) {\n    // flipped image\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      0,\n      0,\n      w,\n      h\n    );\n  } else {\n    // if image not flipped translate and scale can be avoided\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      x,\n      y,\n      w * scale[0],\n      h * scale[1]\n    );\n  }\n\n  context.restore();\n}\n\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D} context Context.\n */\nfunction executeLabelInstructions(label, context) {\n  const contextInstructions = label.contextInstructions;\n  for (let i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n    if (Array.isArray(contextInstructions[i + 1])) {\n      context[contextInstructions[i]].apply(\n        context,\n        contextInstructions[i + 1]\n      );\n    } else {\n      context[contextInstructions[i]] = contextInstructions[i + 1];\n    }\n  }\n}\n","/**\n * @module ol/css\n */\n\n/**\n * @typedef {Object} FontParameters\n * @property {string} style Style.\n * @property {string} variant Variant.\n * @property {string} weight Weight.\n * @property {string} size Size.\n * @property {string} lineHeight LineHeight.\n * @property {string} family Family.\n * @property {Array<string>} families Families.\n */\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_HIDDEN = 'ol-hidden';\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_SELECTABLE = 'ol-selectable';\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSELECTABLE = 'ol-unselectable';\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSUPPORTED = 'ol-unsupported';\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_CONTROL = 'ol-control';\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_COLLAPSED = 'ol-collapsed';\n\n/**\n * From https://stackoverflow.com/questions/10135697/regex-to-parse-any-css-font\n * @type {RegExp}\n */\nconst fontRegEx = new RegExp(\n  [\n    '^\\\\s*(?=(?:(?:[-a-z]+\\\\s*){0,2}(italic|oblique))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(small-caps))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(bold(?:er)?|lighter|[1-9]00 ))?)',\n    '(?:(?:normal|\\\\1|\\\\2|\\\\3)\\\\s*){0,3}((?:xx?-)?',\n    '(?:small|large)|medium|smaller|larger|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx]))',\n    '(?:\\\\s*\\\\/\\\\s*(normal|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx])?))',\n    '?\\\\s*([-,\\\\\"\\\\\\'\\\\sa-z]+?)\\\\s*$',\n  ].join(''),\n  'i'\n);\nconst fontRegExMatchIndex = [\n  'style',\n  'variant',\n  'weight',\n  'size',\n  'lineHeight',\n  'family',\n];\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} fontSpec The CSS font property.\n * @return {FontParameters|null} The font parameters (or null if the input spec is invalid).\n */\nexport const getFontParameters = function (fontSpec) {\n  const match = fontSpec.match(fontRegEx);\n  if (!match) {\n    return null;\n  }\n  const style = /** @type {FontParameters} */ ({\n    lineHeight: 'normal',\n    size: '1.2em',\n    style: 'normal',\n    weight: 'normal',\n    variant: 'normal',\n  });\n  for (let i = 0, ii = fontRegExMatchIndex.length; i < ii; ++i) {\n    const value = match[i + 1];\n    if (value !== undefined) {\n      style[fontRegExMatchIndex[i]] = value;\n    }\n  }\n  style.families = style.family.split(/,\\s?/);\n  return style;\n};\n","/**\n * @module ol/renderer/Composite\n */\nimport MapRenderer from './Map.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RenderEvent from '../render/Event.js';\nimport RenderEventType from '../render/EventType.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {checkedFonts} from '../render/canvas.js';\nimport {inView} from '../layer/Layer.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {replaceChildren} from '../dom.js';\n\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nclass CompositeMapRenderer extends MapRenderer {\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  constructor(map) {\n    super(map);\n\n    /**\n     * @type {import(\"../events.js\").EventsKey}\n     */\n    this.fontChangeListenerKey_ = listen(\n      checkedFonts,\n      ObjectEventType.PROPERTYCHANGE,\n      map.redrawText.bind(map)\n    );\n\n    /**\n     * @private\n     * @type {HTMLDivElement}\n     */\n    this.element_ = document.createElement('div');\n    const style = this.element_.style;\n    style.position = 'absolute';\n    style.width = '100%';\n    style.height = '100%';\n    style.zIndex = '0';\n\n    this.element_.className = CLASS_UNSELECTABLE + ' ol-layers';\n\n    const container = map.getViewport();\n    container.insertBefore(this.element_, container.firstChild || null);\n\n    /**\n     * @private\n     * @type {Array<HTMLElement>}\n     */\n    this.children_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n\n    /**\n     * @type {Array<import(\"../layer/BaseVector.js\").default>}\n     */\n    this.declutterLayers_ = [];\n  }\n\n  /**\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    const map = this.getMap();\n    if (map.hasListener(type)) {\n      const event = new RenderEvent(type, undefined, frameState);\n      map.dispatchEvent(event);\n    }\n  }\n\n  disposeInternal() {\n    unlistenByKey(this.fontChangeListenerKey_);\n    this.element_.parentNode.removeChild(this.element_);\n    super.disposeInternal();\n  }\n\n  /**\n   * Render.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element_.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    this.calculateMatrices2D(frameState);\n    this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n\n    const layerStatesArray = frameState.layerStatesArray.sort(function (a, b) {\n      return a.zIndex - b.zIndex;\n    });\n    const viewState = frameState.viewState;\n\n    this.children_.length = 0;\n\n    const declutterLayers = this.declutterLayers_;\n    declutterLayers.length = 0;\n\n    let previousElement = null;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      frameState.layerIndex = i;\n\n      const layer = layerState.layer;\n      const sourceState = layer.getSourceState();\n      if (\n        !inView(layerState, viewState) ||\n        (sourceState != 'ready' && sourceState != 'undefined')\n      ) {\n        layer.unrender();\n        continue;\n      }\n\n      const element = layer.render(frameState, previousElement);\n      if (!element) {\n        continue;\n      }\n      if (element !== previousElement) {\n        this.children_.push(element);\n        previousElement = element;\n      }\n      if ('getDeclutter' in layer) {\n        declutterLayers.push(\n          /** @type {import(\"../layer/BaseVector.js\").default} */ (layer)\n        );\n      }\n    }\n    this.flushDeclutterItems(frameState);\n\n    replaceChildren(this.element_, this.children_);\n\n    this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n\n    if (!this.renderedVisible_) {\n      this.element_.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n    this.scheduleExpireIconCache(frameState);\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  flushDeclutterItems(frameState) {\n    const layers = this.declutterLayers_;\n    for (let i = layers.length - 1; i >= 0; --i) {\n      layers[i].renderDeclutter(frameState);\n    }\n    layers.length = 0;\n  }\n}\n\nexport default CompositeMapRenderer;\n","/**\n * @module ol/layer/Group\n */\nimport BaseLayer from './Base.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\nimport {getIntersection} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {'addlayer'|'removelayer'} EventType\n */\n\n/**\n * @classdesc\n * A layer group triggers 'addlayer' and 'removelayer' events when layers are added to or removed from\n * the group or one of its child groups.  When a layer group is added to or removed from another layer group,\n * a single event will be triggered (instead of one per layer in the group added or removed).\n */\nexport class GroupEvent extends Event {\n  /**\n   * @param {EventType} type The event type.\n   * @param {BaseLayer} layer The layer.\n   */\n  constructor(type, layer) {\n    super(type);\n\n    /**\n     * The added or removed layer.\n     * @type {BaseLayer}\n     * @api\n     */\n    this.layer = layer;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:layers', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|'change:layers', Return>} GroupOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|Collection<import(\"./Base.js\").default>} [layers] Child layers.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LAYERS: 'layers',\n};\n\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nclass LayerGroup extends BaseLayer {\n  /**\n   * @param {Options} [options] Layer options.\n   */\n  constructor(options) {\n    options = options || {};\n    const baseOptions = /** @type {Options} */ (Object.assign({}, options));\n    delete baseOptions.layers;\n\n    let layers = options.layers;\n\n    super(baseOptions);\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {GroupOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.layersListenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.listenerKeys_ = {};\n\n    this.addChangeListener(Property.LAYERS, this.handleLayersChanged_);\n\n    if (layers) {\n      if (Array.isArray(layers)) {\n        layers = new Collection(layers.slice(), {unique: true});\n      } else {\n        assert(\n          typeof (/** @type {?} */ (layers).getArray) === 'function',\n          'Expected `layers` to be an array or a `Collection`'\n        );\n      }\n    } else {\n      layers = new Collection(undefined, {unique: true});\n    }\n\n    this.setLayers(layers);\n  }\n\n  /**\n   * @private\n   */\n  handleLayerChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleLayersChanged_() {\n    this.layersListenerKeys_.forEach(unlistenByKey);\n    this.layersListenerKeys_.length = 0;\n\n    const layers = this.getLayers();\n    this.layersListenerKeys_.push(\n      listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\n      listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this)\n    );\n\n    for (const id in this.listenerKeys_) {\n      this.listenerKeys_[id].forEach(unlistenByKey);\n    }\n    clear(this.listenerKeys_);\n\n    const layersArray = layers.getArray();\n    for (let i = 0, ii = layersArray.length; i < ii; i++) {\n      const layer = layersArray[i];\n      this.registerLayerListeners_(layer);\n      this.dispatchEvent(new GroupEvent('addlayer', layer));\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {BaseLayer} layer The layer.\n   */\n  registerLayerListeners_(layer) {\n    const listenerKeys = [\n      listen(\n        layer,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleLayerChange_,\n        this\n      ),\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n    ];\n\n    if (layer instanceof LayerGroup) {\n      listenerKeys.push(\n        listen(layer, 'addlayer', this.handleLayerGroupAdd_, this),\n        listen(layer, 'removelayer', this.handleLayerGroupRemove_, this)\n      );\n    }\n\n    this.listenerKeys_[getUid(layer)] = listenerKeys;\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupAdd_(event) {\n    this.dispatchEvent(new GroupEvent('addlayer', event.layer));\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupRemove_(event) {\n    this.dispatchEvent(new GroupEvent('removelayer', event.layer));\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersAdd_(collectionEvent) {\n    const layer = collectionEvent.element;\n    this.registerLayerListeners_(layer);\n    this.dispatchEvent(new GroupEvent('addlayer', layer));\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersRemove_(collectionEvent) {\n    const layer = collectionEvent.element;\n    const key = getUid(layer);\n    this.listenerKeys_[key].forEach(unlistenByKey);\n    delete this.listenerKeys_[key];\n    this.dispatchEvent(new GroupEvent('removelayer', layer));\n    this.changed();\n  }\n\n  /**\n   * Returns the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @return {!Collection<import(\"./Base.js\").default>} Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  getLayers() {\n    return /** @type {!Collection<import(\"./Base.js\").default>} */ (\n      this.get(Property.LAYERS)\n    );\n  }\n\n  /**\n   * Set the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @param {!Collection<import(\"./Base.js\").default>} layers Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  setLayers(layers) {\n    const collection = this.getLayers();\n    if (collection) {\n      const currentLayers = collection.getArray();\n      for (let i = 0, ii = currentLayers.length; i < ii; ++i) {\n        this.dispatchEvent(new GroupEvent('removelayer', currentLayers[i]));\n      }\n    }\n\n    this.set(Property.LAYERS, layers);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    array = array !== undefined ? array : [];\n    this.getLayers().forEach(function (layer) {\n      layer.getLayersArray(array);\n    });\n    return array;\n  }\n\n  /**\n   * Get the layer states list and use this groups z-index as the default\n   * for all layers in this and nested groups, if it is unset at this point.\n   * If dest is not provided and this group's z-index is undefined\n   * 0 is used a the default z-index.\n   * @param {Array<import(\"./Layer.js\").State>} [dest] Optional list\n   * of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(dest) {\n    const states = dest !== undefined ? dest : [];\n    const pos = states.length;\n\n    this.getLayers().forEach(function (layer) {\n      layer.getLayerStatesArray(states);\n    });\n\n    const ownLayerState = this.getLayerState();\n    let defaultZIndex = ownLayerState.zIndex;\n    if (!dest && ownLayerState.zIndex === undefined) {\n      defaultZIndex = 0;\n    }\n    for (let i = pos, ii = states.length; i < ii; i++) {\n      const layerState = states[i];\n      layerState.opacity *= ownLayerState.opacity;\n      layerState.visible = layerState.visible && ownLayerState.visible;\n      layerState.maxResolution = Math.min(\n        layerState.maxResolution,\n        ownLayerState.maxResolution\n      );\n      layerState.minResolution = Math.max(\n        layerState.minResolution,\n        ownLayerState.minResolution\n      );\n      layerState.minZoom = Math.max(layerState.minZoom, ownLayerState.minZoom);\n      layerState.maxZoom = Math.min(layerState.maxZoom, ownLayerState.maxZoom);\n      if (ownLayerState.extent !== undefined) {\n        if (layerState.extent !== undefined) {\n          layerState.extent = getIntersection(\n            layerState.extent,\n            ownLayerState.extent\n          );\n        } else {\n          layerState.extent = ownLayerState.extent;\n        }\n      }\n      if (layerState.zIndex === undefined) {\n        layerState.zIndex = defaultZIndex;\n      }\n    }\n\n    return states;\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    return 'ready';\n  }\n}\n\nexport default LayerGroup;\n","/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map event.\n */\nclass MapEvent extends Event {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./Map.js\").default} map Map.\n   * @param {?import(\"./Map.js\").FrameState} [frameState] Frame state.\n   */\n  constructor(type, map, frameState) {\n    super(type);\n\n    /**\n     * The map where the event occurred.\n     * @type {import(\"./Map.js\").default}\n     * @api\n     */\n    this.map = map;\n\n    /**\n     * The frame state at the time of the event.\n     * @type {?import(\"./Map.js\").FrameState}\n     * @api\n     */\n    this.frameState = frameState !== undefined ? frameState : null;\n  }\n}\n\nexport default MapEvent;\n","/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map browser event.\n * @template {UIEvent} EVENT\n */\nclass MapBrowserEvent extends MapEvent {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./Map.js\").default} map Map.\n   * @param {EVENT} originalEvent Original event.\n   * @param {boolean} [dragging] Is the map currently being dragged?\n   * @param {import(\"./Map.js\").FrameState} [frameState] Frame state.\n   * @param {Array<PointerEvent>} [activePointers] Active pointers.\n   */\n  constructor(type, map, originalEvent, dragging, frameState, activePointers) {\n    super(type, map, frameState);\n\n    /**\n     * The original browser event.\n     * @const\n     * @type {EVENT}\n     * @api\n     */\n    this.originalEvent = originalEvent;\n\n    /**\n     * The map pixel relative to the viewport corresponding to the original browser event.\n     * @type {?import(\"./pixel.js\").Pixel}\n     */\n    this.pixel_ = null;\n\n    /**\n     * The coordinate in the user projection corresponding to the original browser event.\n     * @type {?import(\"./coordinate.js\").Coordinate}\n     */\n    this.coordinate_ = null;\n\n    /**\n     * Indicates if the map is currently being dragged. Only set for\n     * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n     *\n     * @type {boolean}\n     * @api\n     */\n    this.dragging = dragging !== undefined ? dragging : false;\n\n    /**\n     * @type {Array<PointerEvent>|undefined}\n     */\n    this.activePointers = activePointers;\n  }\n\n  /**\n   * The map pixel relative to the viewport corresponding to the original event.\n   * @type {import(\"./pixel.js\").Pixel}\n   * @api\n   */\n  get pixel() {\n    if (!this.pixel_) {\n      this.pixel_ = this.map.getEventPixel(this.originalEvent);\n    }\n    return this.pixel_;\n  }\n  set pixel(pixel) {\n    this.pixel_ = pixel;\n  }\n\n  /**\n   * The coordinate corresponding to the original browser event.  This will be in the user\n   * projection if one is set.  Otherwise it will be in the view projection.\n   * @type {import(\"./coordinate.js\").Coordinate}\n   * @api\n   */\n  get coordinate() {\n    if (!this.coordinate_) {\n      this.coordinate_ = this.map.getCoordinateFromPixel(this.pixel);\n    }\n    return this.coordinate_;\n  }\n  set coordinate(coordinate) {\n    this.coordinate_ = coordinate;\n  }\n\n  /**\n   * Prevents the default browser action.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n   * @api\n   */\n  preventDefault() {\n    super.preventDefault();\n    if ('preventDefault' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).preventDefault();\n    }\n  }\n\n  /**\n   * Prevents further propagation of the current event.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n   * @api\n   */\n  stopPropagation() {\n    super.stopPropagation();\n    if ('stopPropagation' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).stopPropagation();\n    }\n  }\n}\n\nexport default MapBrowserEvent;\n","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  /**\n   * A true single click with no dragging and no double click. Note that this\n   * event is delayed by 250 ms to ensure that it is not a double click.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n   * @api\n   */\n  SINGLECLICK: 'singleclick',\n\n  /**\n   * A click with no dragging. A double click will fire two of this.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n   * @api\n   */\n  CLICK: EventType.CLICK,\n\n  /**\n   * A true double click, with no dragging.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n   * @api\n   */\n  DBLCLICK: EventType.DBLCLICK,\n\n  /**\n   * Triggered when a pointer is dragged.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n   * @api\n   */\n  POINTERDRAG: 'pointerdrag',\n\n  /**\n   * Triggered when a pointer is moved. Note that on touch devices this is\n   * triggered when the map is panned, so is not the same as mousemove.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n   * @api\n   */\n  POINTERMOVE: 'pointermove',\n\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n\n/***\n * @typedef {'singleclick'|'click'|'dblclick'|'pointerdrag'|'pointermove'} Types\n */\n","/**\n * @module ol/pointer/EventType\n */\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  POINTERMOVE: 'pointermove',\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n","/**\n * @module ol/MapBrowserEventHandler\n */\n\nimport EventType from './events/EventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport Target from './events/Target.js';\nimport {PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {listen, unlistenByKey} from './events.js';\n\nclass MapBrowserEventHandler extends Target {\n  /**\n   * @param {import(\"./Map.js\").default} map The map with the viewport to listen to events on.\n   * @param {number} [moveTolerance] The minimal distance the pointer must travel to trigger a move.\n   */\n  constructor(map, moveTolerance) {\n    super(map);\n\n    /**\n     * This is the element that we will listen to the real events on.\n     * @type {import(\"./Map.js\").default}\n     * @private\n     */\n    this.map_ = map;\n\n    /**\n     * @type {ReturnType<typeof setTimeout>}\n     * @private\n     */\n    this.clickTimeoutId_;\n\n    /**\n     * Emulate dblclick and singleclick. Will be true when only one pointer is active.\n     * @type {boolean}\n     */\n    this.emulateClicks_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_ = false;\n\n    /**\n     * @type {!Array<import(\"./events.js\").EventsKey>}\n     * @private\n     */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.moveTolerance_ = moveTolerance === undefined ? 1 : moveTolerance;\n\n    /**\n     * The most recent \"down\" type event (or null if none have occurred).\n     * Set on pointerdown.\n     * @type {PointerEvent|null}\n     * @private\n     */\n    this.down_ = null;\n\n    const element = this.map_.getViewport();\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @private\n     */\n    this.activePointers_ = [];\n\n    /**\n     * @type {!Object<number, Event>}\n     * @private\n     */\n    this.trackedTouches_ = {};\n\n    this.element_ = element;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.pointerdownListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERDOWN,\n      this.handlePointerDown_,\n      this\n    );\n\n    /**\n     * @type {PointerEvent}\n     * @private\n     */\n    this.originalPointerMoveEvent_;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.relayedListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERMOVE,\n      this.relayMoveEvent_,\n      this\n    );\n\n    /**\n     * @private\n     */\n    this.boundHandleTouchMove_ = this.handleTouchMove_.bind(this);\n\n    this.element_.addEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_,\n      PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n    );\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  emulateClick_(pointerEvent) {\n    let newEvent = new MapBrowserEvent(\n      MapBrowserEventType.CLICK,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n    if (this.clickTimeoutId_ !== undefined) {\n      // double-click\n      clearTimeout(this.clickTimeoutId_);\n      this.clickTimeoutId_ = undefined;\n      newEvent = new MapBrowserEvent(\n        MapBrowserEventType.DBLCLICK,\n        this.map_,\n        pointerEvent\n      );\n      this.dispatchEvent(newEvent);\n    } else {\n      // click\n      this.clickTimeoutId_ = setTimeout(() => {\n        this.clickTimeoutId_ = undefined;\n        const newEvent = new MapBrowserEvent(\n          MapBrowserEventType.SINGLECLICK,\n          this.map_,\n          pointerEvent\n        );\n        this.dispatchEvent(newEvent);\n      }, 250);\n    }\n  }\n\n  /**\n   * Keeps track on how many pointers are currently active.\n   *\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  updateActivePointers_(pointerEvent) {\n    const event = pointerEvent;\n    const id = event.pointerId;\n\n    if (\n      event.type == MapBrowserEventType.POINTERUP ||\n      event.type == MapBrowserEventType.POINTERCANCEL\n    ) {\n      delete this.trackedTouches_[id];\n      for (const pointerId in this.trackedTouches_) {\n        if (this.trackedTouches_[pointerId].target !== event.target) {\n          // Some platforms assign a new pointerId when the target changes.\n          // If this happens, delete one tracked pointer. If there is more\n          // than one tracked pointer for the old target, it will be cleared\n          // by subsequent POINTERUP events from other pointers.\n          delete this.trackedTouches_[pointerId];\n          break;\n        }\n      }\n    } else if (\n      event.type == MapBrowserEventType.POINTERDOWN ||\n      event.type == MapBrowserEventType.POINTERMOVE\n    ) {\n      this.trackedTouches_[id] = event;\n    }\n    this.activePointers_ = Object.values(this.trackedTouches_);\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerUp_(pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERUP,\n      this.map_,\n      pointerEvent,\n      undefined,\n      undefined,\n      this.activePointers_\n    );\n    this.dispatchEvent(newEvent);\n\n    // We emulate click events on left mouse button click, touch contact, and pen\n    // contact. isMouseActionButton returns true in these cases (evt.button is set\n    // to 0).\n    // See http://www.w3.org/TR/pointerevents/#button-states\n    // We only fire click, singleclick, and doubleclick if nobody has called\n    // event.preventDefault().\n    if (\n      this.emulateClicks_ &&\n      !newEvent.defaultPrevented &&\n      !this.dragging_ &&\n      this.isMouseActionButton_(pointerEvent)\n    ) {\n      this.emulateClick_(this.down_);\n    }\n\n    if (this.activePointers_.length === 0) {\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n      this.dragging_ = false;\n      this.down_ = null;\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} If the left mouse button was pressed.\n   * @private\n   */\n  isMouseActionButton_(pointerEvent) {\n    return pointerEvent.button === 0;\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerDown_(pointerEvent) {\n    this.emulateClicks_ = this.activePointers_.length === 0;\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERDOWN,\n      this.map_,\n      pointerEvent,\n      undefined,\n      undefined,\n      this.activePointers_\n    );\n    this.dispatchEvent(newEvent);\n\n    this.down_ = new PointerEvent(pointerEvent.type, pointerEvent);\n    Object.defineProperty(this.down_, 'target', {\n      writable: false,\n      value: pointerEvent.target,\n    });\n\n    if (this.dragListenerKeys_.length === 0) {\n      const doc = this.map_.getOwnerDocument();\n      this.dragListenerKeys_.push(\n        listen(\n          doc,\n          MapBrowserEventType.POINTERMOVE,\n          this.handlePointerMove_,\n          this\n        ),\n        listen(doc, MapBrowserEventType.POINTERUP, this.handlePointerUp_, this),\n        /* Note that the listener for `pointercancel is set up on\n         * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n         * the `pointerup` and `pointermove` listeners.\n         *\n         * The reason for this is the following: `TouchSource.vacuumTouches_()`\n         * issues `pointercancel` events, when there was no `touchend` for a\n         * `touchstart`. Now, let's say a first `touchstart` is registered on\n         * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n         * But `documentPointerEventHandler_` doesn't know about the first\n         * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n         * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n         * only registered there.\n         */\n        listen(\n          this.element_,\n          MapBrowserEventType.POINTERCANCEL,\n          this.handlePointerUp_,\n          this\n        )\n      );\n      if (this.element_.getRootNode && this.element_.getRootNode() !== doc) {\n        this.dragListenerKeys_.push(\n          listen(\n            this.element_.getRootNode(),\n            MapBrowserEventType.POINTERUP,\n            this.handlePointerUp_,\n            this\n          )\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerMove_(pointerEvent) {\n    // Between pointerdown and pointerup, pointermove events are triggered.\n    // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n    // moved a significant distance.\n    if (this.isMoving_(pointerEvent)) {\n      this.updateActivePointers_(pointerEvent);\n      this.dragging_ = true;\n      const newEvent = new MapBrowserEvent(\n        MapBrowserEventType.POINTERDRAG,\n        this.map_,\n        pointerEvent,\n        this.dragging_,\n        undefined,\n        this.activePointers_\n      );\n      this.dispatchEvent(newEvent);\n    }\n  }\n\n  /**\n   * Wrap and relay a pointermove event.\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  relayMoveEvent_(pointerEvent) {\n    this.originalPointerMoveEvent_ = pointerEvent;\n    const dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n    this.dispatchEvent(\n      new MapBrowserEvent(\n        MapBrowserEventType.POINTERMOVE,\n        this.map_,\n        pointerEvent,\n        dragging\n      )\n    );\n  }\n\n  /**\n   * Flexible handling of a `touch-action: none` css equivalent: because calling\n   * `preventDefault()` on a `pointermove` event does not stop native page scrolling\n   * and zooming, we also listen for `touchmove` and call `preventDefault()` on it\n   * when an interaction (currently `DragPan` handles the event.\n   * @param {TouchEvent} event Event.\n   * @private\n   */\n  handleTouchMove_(event) {\n    // Due to https://github.com/mpizenberg/elm-pep/issues/2, `this.originalPointerMoveEvent_`\n    // may not be initialized yet when we get here on a platform without native pointer events,\n    // when elm-pep is used as pointer events polyfill.\n    const originalEvent = this.originalPointerMoveEvent_;\n    if (\n      (!originalEvent || originalEvent.defaultPrevented) &&\n      (typeof event.cancelable !== 'boolean' || event.cancelable === true)\n    ) {\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} Is moving.\n   * @private\n   */\n  isMoving_(pointerEvent) {\n    return (\n      this.dragging_ ||\n      Math.abs(pointerEvent.clientX - this.down_.clientX) >\n        this.moveTolerance_ ||\n      Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_\n    );\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.relayedListenerKey_) {\n      unlistenByKey(this.relayedListenerKey_);\n      this.relayedListenerKey_ = null;\n    }\n    this.element_.removeEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_\n    );\n\n    if (this.pointerdownListenerKey_) {\n      unlistenByKey(this.pointerdownListenerKey_);\n      this.pointerdownListenerKey_ = null;\n    }\n\n    this.dragListenerKeys_.forEach(unlistenByKey);\n    this.dragListenerKeys_.length = 0;\n\n    this.element_ = null;\n    super.disposeInternal();\n  }\n}\n\nexport default MapBrowserEventHandler;\n","/**\n * @module ol/MapEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered after a map frame is rendered.\n   * @event module:ol/MapEvent~MapEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered when the map starts moving.\n   * @event module:ol/MapEvent~MapEvent#movestart\n   * @api\n   */\n  MOVESTART: 'movestart',\n\n  /**\n   * Triggered after the map is moved.\n   * @event module:ol/MapEvent~MapEvent#moveend\n   * @api\n   */\n  MOVEEND: 'moveend',\n\n  /**\n   * Triggered when loading of additional map data (tiles, images, features) starts.\n   * @event module:ol/MapEvent~MapEvent#loadstart\n   * @api\n   */\n  LOADSTART: 'loadstart',\n\n  /**\n   * Triggered when loading of additional map data has completed.\n   * @event module:ol/MapEvent~MapEvent#loadend\n   * @api\n   */\n  LOADEND: 'loadend',\n};\n\n/***\n * @typedef {'postrender'|'movestart'|'moveend'|'loadstart'|'loadend'} Types\n */\n","/**\n * @module ol/MapProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LAYERGROUP: 'layergroup',\n  SIZE: 'size',\n  TARGET: 'target',\n  VIEW: 'view',\n};\n","/**\n * @module ol/structs/PriorityQueue\n */\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\n\n/**\n * @type {number}\n */\nexport const DROP = Infinity;\n\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See https://github.com/google/closure-library/blob/master/closure/goog/structs/heap.js\n * and https://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nclass PriorityQueue {\n  /**\n   * @param {function(T): number} priorityFunction Priority function.\n   * @param {function(T): string} keyFunction Key function.\n   */\n  constructor(priorityFunction, keyFunction) {\n    /**\n     * @type {function(T): number}\n     * @private\n     */\n    this.priorityFunction_ = priorityFunction;\n\n    /**\n     * @type {function(T): string}\n     * @private\n     */\n    this.keyFunction_ = keyFunction;\n\n    /**\n     * @type {Array<T>}\n     * @private\n     */\n    this.elements_ = [];\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.priorities_ = [];\n\n    /**\n     * @type {!Object<string, boolean>}\n     * @private\n     */\n    this.queuedElements_ = {};\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.elements_.length = 0;\n    this.priorities_.length = 0;\n    clear(this.queuedElements_);\n  }\n\n  /**\n   * Remove and return the highest-priority element. O(log N).\n   * @return {T} Element.\n   */\n  dequeue() {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[0];\n    if (elements.length == 1) {\n      elements.length = 0;\n      priorities.length = 0;\n    } else {\n      elements[0] = elements.pop();\n      priorities[0] = priorities.pop();\n      this.siftUp_(0);\n    }\n    const elementKey = this.keyFunction_(element);\n    delete this.queuedElements_[elementKey];\n    return element;\n  }\n\n  /**\n   * Enqueue an element. O(log N).\n   * @param {T} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    assert(\n      !(this.keyFunction_(element) in this.queuedElements_),\n      'Tried to enqueue an `element` that was already added to the queue'\n    );\n    const priority = this.priorityFunction_(element);\n    if (priority != DROP) {\n      this.elements_.push(element);\n      this.priorities_.push(priority);\n      this.queuedElements_[this.keyFunction_(element)] = true;\n      this.siftDown_(0, this.elements_.length - 1);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.elements_.length;\n  }\n\n  /**\n   * Gets the index of the left child of the node at the given index.\n   * @param {number} index The index of the node to get the left child for.\n   * @return {number} The index of the left child.\n   * @private\n   */\n  getLeftChildIndex_(index) {\n    return index * 2 + 1;\n  }\n\n  /**\n   * Gets the index of the right child of the node at the given index.\n   * @param {number} index The index of the node to get the right child for.\n   * @return {number} The index of the right child.\n   * @private\n   */\n  getRightChildIndex_(index) {\n    return index * 2 + 2;\n  }\n\n  /**\n   * Gets the index of the parent of the node at the given index.\n   * @param {number} index The index of the node to get the parent for.\n   * @return {number} The index of the parent.\n   * @private\n   */\n  getParentIndex_(index) {\n    return (index - 1) >> 1;\n  }\n\n  /**\n   * Make this a heap. O(N).\n   * @private\n   */\n  heapify_() {\n    let i;\n    for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n      this.siftUp_(i);\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.elements_.length === 0;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Is key queued.\n   */\n  isKeyQueued(key) {\n    return key in this.queuedElements_;\n  }\n\n  /**\n   * @param {T} element Element.\n   * @return {boolean} Is queued.\n   */\n  isQueued(element) {\n    return this.isKeyQueued(this.keyFunction_(element));\n  }\n\n  /**\n   * @param {number} index The index of the node to move down.\n   * @private\n   */\n  siftUp_(index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const count = elements.length;\n    const element = elements[index];\n    const priority = priorities[index];\n    const startIndex = index;\n\n    while (index < count >> 1) {\n      const lIndex = this.getLeftChildIndex_(index);\n      const rIndex = this.getRightChildIndex_(index);\n\n      const smallerChildIndex =\n        rIndex < count && priorities[rIndex] < priorities[lIndex]\n          ? rIndex\n          : lIndex;\n\n      elements[index] = elements[smallerChildIndex];\n      priorities[index] = priorities[smallerChildIndex];\n      index = smallerChildIndex;\n    }\n\n    elements[index] = element;\n    priorities[index] = priority;\n    this.siftDown_(startIndex, index);\n  }\n\n  /**\n   * @param {number} startIndex The index of the root.\n   * @param {number} index The index of the node to move up.\n   * @private\n   */\n  siftDown_(startIndex, index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[index];\n    const priority = priorities[index];\n\n    while (index > startIndex) {\n      const parentIndex = this.getParentIndex_(index);\n      if (priorities[parentIndex] > priority) {\n        elements[index] = elements[parentIndex];\n        priorities[index] = priorities[parentIndex];\n        index = parentIndex;\n      } else {\n        break;\n      }\n    }\n    elements[index] = element;\n    priorities[index] = priority;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  reprioritize() {\n    const priorityFunction = this.priorityFunction_;\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    let index = 0;\n    const n = elements.length;\n    let element, i, priority;\n    for (i = 0; i < n; ++i) {\n      element = elements[i];\n      priority = priorityFunction(element);\n      if (priority == DROP) {\n        delete this.queuedElements_[this.keyFunction_(element)];\n      } else {\n        priorities[index] = priority;\n        elements[index++] = element;\n      }\n    }\n    elements.length = index;\n    priorities.length = index;\n    this.heapify_();\n  }\n}\n\nexport default PriorityQueue;\n","/**\n * @module ol/TileQueue\n */\nimport EventType from './events/EventType.js';\nimport PriorityQueue, {DROP} from './structs/PriorityQueue.js';\nimport TileState from './TileState.js';\n\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\n\nclass TileQueue extends PriorityQueue {\n  /**\n   * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n   * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n   */\n  constructor(tilePriorityFunction, tileChangeCallback) {\n    super(\n      /**\n       * @param {Array} element Element.\n       * @return {number} Priority.\n       */\n      function (element) {\n        return tilePriorityFunction.apply(null, element);\n      },\n      /**\n       * @param {Array} element Element.\n       * @return {string} Key.\n       */\n      function (element) {\n        return /** @type {import(\"./Tile.js\").default} */ (element[0]).getKey();\n      }\n    );\n\n    /** @private */\n    this.boundHandleTileChange_ = this.handleTileChange.bind(this);\n\n    /**\n     * @private\n     * @type {function(): ?}\n     */\n    this.tileChangeCallback_ = tileChangeCallback;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilesLoading_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string,boolean>}\n     */\n    this.tilesLoadingKeys_ = {};\n  }\n\n  /**\n   * @param {Array} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    const added = super.enqueue(element);\n    if (added) {\n      const tile = element[0];\n      tile.addEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n    }\n    return added;\n  }\n\n  /**\n   * @return {number} Number of tiles loading.\n   */\n  getTilesLoading() {\n    return this.tilesLoading_;\n  }\n\n  /**\n   * @param {import(\"./events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n    const state = tile.getState();\n    if (\n      state === TileState.LOADED ||\n      state === TileState.ERROR ||\n      state === TileState.EMPTY\n    ) {\n      if (state !== TileState.ERROR) {\n        tile.removeEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n      }\n      const tileKey = tile.getKey();\n      if (tileKey in this.tilesLoadingKeys_) {\n        delete this.tilesLoadingKeys_[tileKey];\n        --this.tilesLoading_;\n      }\n      this.tileChangeCallback_();\n    }\n  }\n\n  /**\n   * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n   * @param {number} maxNewLoads Maximum number of new tiles to load.\n   */\n  loadMoreTiles(maxTotalLoading, maxNewLoads) {\n    let newLoads = 0;\n    let state, tile, tileKey;\n    while (\n      this.tilesLoading_ < maxTotalLoading &&\n      newLoads < maxNewLoads &&\n      this.getCount() > 0\n    ) {\n      tile = /** @type {import(\"./Tile.js\").default} */ (this.dequeue()[0]);\n      tileKey = tile.getKey();\n      state = tile.getState();\n      if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n        this.tilesLoadingKeys_[tileKey] = true;\n        ++this.tilesLoading_;\n        ++newLoads;\n        tile.load();\n      }\n    }\n  }\n}\n\nexport default TileQueue;\n\n/**\n * @param {import('./Map.js').FrameState} frameState Frame state.\n * @param {import(\"./Tile.js\").default} tile Tile.\n * @param {string} tileSourceKey Tile source key.\n * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n * @param {number} tileResolution Tile resolution.\n * @return {number} Tile priority.\n */\nexport function getTilePriority(\n  frameState,\n  tile,\n  tileSourceKey,\n  tileCenter,\n  tileResolution\n) {\n  // Filter out tiles at higher zoom levels than the current zoom level, or that\n  // are outside the visible extent.\n  if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n    return DROP;\n  }\n  if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n    return DROP;\n  }\n  // Prioritize the highest zoom level tiles closest to the focus.\n  // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n  // Within a zoom level, tiles are prioritized by the distance in pixels between\n  // the center of the tile and the center of the viewport.  The factor of 65536\n  // means that the prioritization should behave as desired for tiles up to\n  // 65536 * Math.log(2) = 45426 pixels from the focus.\n  const center = frameState.viewState.center;\n  const deltaX = tileCenter[0] - center[0];\n  const deltaY = tileCenter[1] - center[1];\n  return (\n    65536 * Math.log(tileResolution) +\n    Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution\n  );\n}\n","/**\n * @module ol/control/Control\n */\nimport BaseObject from '../Object.js';\nimport MapEventType from '../MapEventType.js';\nimport {VOID} from '../functions.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {removeNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * const myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nclass Control extends BaseObject {\n  /**\n   * @param {Options} options Control options.\n   */\n  constructor(options) {\n    super();\n\n    const element = options.element;\n    if (element && !options.target && !element.style.pointerEvents) {\n      element.style.pointerEvents = 'auto';\n    }\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = element ? element : null;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.target_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     */\n    this.listenerKeys = [];\n\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.target) {\n      this.setTarget(options.target);\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    removeNode(this.element);\n    super.disposeInternal();\n  }\n\n  /**\n   * Get the map associated with this control.\n   * @return {import(\"../Map.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Pass `null` to just remove the control from the current map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.map_) {\n      removeNode(this.element);\n    }\n    for (let i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n      unlistenByKey(this.listenerKeys[i]);\n    }\n    this.listenerKeys.length = 0;\n    this.map_ = map;\n    if (map) {\n      const target = this.target_\n        ? this.target_\n        : map.getOverlayContainerStopEvent();\n      target.appendChild(this.element);\n      if (this.render !== VOID) {\n        this.listenerKeys.push(\n          listen(map, MapEventType.POSTRENDER, this.render, this)\n        );\n      }\n      map.render();\n    }\n  }\n\n  /**\n   * Renders the control.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @api\n   */\n  render(mapEvent) {}\n\n  /**\n   * This function is used to set a target element for the control. It has no\n   * effect if it is called after the control has been added to the map (i.e.\n   * after `setMap` is called on the control). If no `target` is set in the\n   * options passed to the control constructor and if `setTarget` is not called\n   * then the control is added to the map's overlay container.\n   * @param {HTMLElement|string} target Target.\n   * @api\n   */\n  setTarget(target) {\n    this.target_ =\n      typeof target === 'string' ? document.getElementById(target) : target;\n  }\n}\n\nexport default Control;\n","/**\n * @module ol/control/Attribution\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_COLLAPSED, CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {equals} from '../array.js';\nimport {removeChildren, replaceNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string|HTMLElement} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [expandClassName=className + '-expand'] CSS class name for the\n * collapsed attributions button.\n * @property {string|HTMLElement} [collapseLabel='›'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [collapseClassName=className + '-collapse'] CSS class name for the\n * expanded attributions button.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nclass Attribution extends Control {\n  /**\n   * @param {Options} [options] Attribution options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.ulElement_ = document.createElement('ul');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsed_ =\n      options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.userCollapsed_ = this.collapsed_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overrideCollapsible_ = options.collapsible !== undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ =\n      options.collapsible !== undefined ? options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-attribution';\n\n    const tipLabel =\n      options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n\n    const expandClassName =\n      options.expandClassName !== undefined\n        ? options.expandClassName\n        : className + '-expand';\n\n    const collapseLabel =\n      options.collapseLabel !== undefined ? options.collapseLabel : '\\u203A';\n\n    const collapseClassName =\n      options.collapseClassName !== undefined\n        ? options.collapseClassName\n        : className + '-collapse';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n      this.collapseLabel_.className = collapseClassName;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    const label = options.label !== undefined ? options.label : 'i';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n      this.label_.className = expandClassName;\n    } else {\n      this.label_ = label;\n    }\n\n    const activeLabel =\n      this.collapsible_ && !this.collapsed_ ? this.collapseLabel_ : this.label_;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.toggleButton_ = document.createElement('button');\n    this.toggleButton_.setAttribute('type', 'button');\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n    this.toggleButton_.title = tipLabel;\n    this.toggleButton_.appendChild(activeLabel);\n\n    this.toggleButton_.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className +\n      ' ' +\n      CLASS_UNSELECTABLE +\n      ' ' +\n      CLASS_CONTROL +\n      (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n      (this.collapsible_ ? '' : ' ol-uncollapsible');\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.toggleButton_);\n    element.appendChild(this.ulElement_);\n\n    /**\n     * A list of currently rendered resolutions.\n     * @type {Array<string>}\n     * @private\n     */\n    this.renderedAttributions_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * Collect a list of visible attributions and set the collapsible state.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {Array<string>} Attributions.\n   * @private\n   */\n  collectSourceAttributions_(frameState) {\n    const visibleAttributions = Array.from(\n      new Set(\n        this.getMap()\n          .getAllLayers()\n          .flatMap((layer) => layer.getAttributions(frameState))\n      )\n    );\n\n    const collapsible = !this.getMap()\n      .getAllLayers()\n      .some(\n        (layer) =>\n          layer.getSource() &&\n          layer.getSource().getAttributionsCollapsible() === false\n      );\n    if (!this.overrideCollapsible_) {\n      this.setCollapsible(collapsible);\n    }\n    return visibleAttributions;\n  }\n\n  /**\n   * @private\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  updateElement_(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    const attributions = this.collectSourceAttributions_(frameState);\n\n    const visible = attributions.length > 0;\n    if (this.renderedVisible_ != visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.renderedVisible_ = visible;\n    }\n\n    if (equals(attributions, this.renderedAttributions_)) {\n      return;\n    }\n\n    removeChildren(this.ulElement_);\n\n    // append the attributions\n    for (let i = 0, ii = attributions.length; i < ii; ++i) {\n      const element = document.createElement('li');\n      element.innerHTML = attributions[i];\n      this.ulElement_.appendChild(element);\n    }\n\n    this.renderedAttributions_ = attributions;\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleToggle_();\n    this.userCollapsed_ = this.collapsed_;\n  }\n\n  /**\n   * @private\n   */\n  handleToggle_() {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n  }\n\n  /**\n   * Return `true` if the attribution is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  getCollapsible() {\n    return this.collapsible_;\n  }\n\n  /**\n   * Set whether the attribution should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  setCollapsible(collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (this.userCollapsed_) {\n      this.handleToggle_();\n    }\n  }\n\n  /**\n   * Collapse or expand the attribution according to the passed parameter. Will\n   * not do anything if the attribution isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  setCollapsed(collapsed) {\n    this.userCollapsed_ = collapsed;\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  }\n\n  /**\n   * Return `true` when the attribution is currently collapsed or `false`\n   * otherwise.\n   * @return {boolean} True if the widget is collapsed.\n   * @api\n   */\n  getCollapsed() {\n    return this.collapsed_;\n  }\n\n  /**\n   * Update the attribution element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    this.updateElement_(mapEvent.frameState);\n  }\n}\n\nexport default Attribution;\n","/**\n * @module ol/control/Rotate\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {string} [compassClassName='ol-compass'] CSS class name for the compass.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function():void} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nclass Rotate extends Control {\n  /**\n   * @param {Options} [options] Rotate options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-rotate';\n\n    const label = options.label !== undefined ? options.label : '\\u21E7';\n\n    const compassClassName =\n      options.compassClassName !== undefined\n        ? options.compassClassName\n        : 'ol-compass';\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.label_ = null;\n\n    if (typeof label === 'string') {\n      this.label_ = document.createElement('span');\n      this.label_.className = compassClassName;\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n      this.label_.classList.add(compassClassName);\n    }\n\n    const tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n\n    const button = document.createElement('button');\n    button.className = className + '-reset';\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(this.label_);\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n\n    this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    if (this.autoHide_) {\n      this.element.classList.add(CLASS_HIDDEN);\n    }\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    if (this.callResetNorth_ !== undefined) {\n      this.callResetNorth_();\n    } else {\n      this.resetNorth_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  resetNorth_() {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const rotation = view.getRotation();\n    if (rotation !== undefined) {\n      if (this.duration_ > 0 && rotation % (2 * Math.PI) !== 0) {\n        view.animate({\n          rotation: 0,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setRotation(0);\n      }\n    }\n  }\n\n  /**\n   * Update the rotate control element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      return;\n    }\n    const rotation = frameState.viewState.rotation;\n    if (rotation != this.rotation_) {\n      const transform = 'rotate(' + rotation + 'rad)';\n      if (this.autoHide_) {\n        const contains = this.element.classList.contains(CLASS_HIDDEN);\n        if (!contains && rotation === 0) {\n          this.element.classList.add(CLASS_HIDDEN);\n        } else if (contains && rotation !== 0) {\n          this.element.classList.remove(CLASS_HIDDEN);\n        }\n      }\n      this.label_.style.transform = transform;\n    }\n    this.rotation_ = rotation;\n  }\n}\n\nexport default Rotate;\n","/**\n * @module ol/control/Zoom\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string} [zoomInClassName=className + '-in'] CSS class name for the zoom-in button.\n * @property {string} [zoomOutClassName=className + '-out'] CSS class name for the zoom-out button.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='–'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nclass Zoom extends Control {\n  /**\n   * @param {Options} [options] Zoom options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-zoom';\n\n    const delta = options.delta !== undefined ? options.delta : 1;\n\n    const zoomInClassName =\n      options.zoomInClassName !== undefined\n        ? options.zoomInClassName\n        : className + '-in';\n\n    const zoomOutClassName =\n      options.zoomOutClassName !== undefined\n        ? options.zoomOutClassName\n        : className + '-out';\n\n    const zoomInLabel =\n      options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n    const zoomOutLabel =\n      options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2013';\n\n    const zoomInTipLabel =\n      options.zoomInTipLabel !== undefined ? options.zoomInTipLabel : 'Zoom in';\n    const zoomOutTipLabel =\n      options.zoomOutTipLabel !== undefined\n        ? options.zoomOutTipLabel\n        : 'Zoom out';\n\n    const inElement = document.createElement('button');\n    inElement.className = zoomInClassName;\n    inElement.setAttribute('type', 'button');\n    inElement.title = zoomInTipLabel;\n    inElement.appendChild(\n      typeof zoomInLabel === 'string'\n        ? document.createTextNode(zoomInLabel)\n        : zoomInLabel\n    );\n\n    inElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, delta),\n      false\n    );\n\n    const outElement = document.createElement('button');\n    outElement.className = zoomOutClassName;\n    outElement.setAttribute('type', 'button');\n    outElement.title = zoomOutTipLabel;\n    outElement.appendChild(\n      typeof zoomOutLabel === 'string'\n        ? document.createTextNode(zoomOutLabel)\n        : zoomOutLabel\n    );\n\n    outElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, -delta),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(inElement);\n    element.appendChild(outElement);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(delta, event) {\n    event.preventDefault();\n    this.zoomByDelta_(delta);\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @private\n   */\n  zoomByDelta_(delta) {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const currentZoom = view.getZoom();\n    if (currentZoom !== undefined) {\n      const newZoom = view.getConstrainedZoom(currentZoom + delta);\n      if (this.duration_ > 0) {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.animate({\n          zoom: newZoom,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setZoom(newZoom);\n      }\n    }\n  }\n}\n\nexport default Zoom;\n","/**\n * @module ol/interaction/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACTIVE: 'active',\n};\n","/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport InteractionProperty from './Property.js';\nimport {easeOut, linear} from '../easing.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active', Return>} InteractionOnSignature\n */\n\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return). The interactions\n * are traversed in reverse order of the interactions collection of the map.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nclass Interaction extends BaseObject {\n  /**\n   * @param {InteractionOptions} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {InteractionOnSignature<void>}\n     */\n    this.un;\n\n    if (options && options.handleEvent) {\n      this.handleEvent = options.handleEvent;\n    }\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    this.setActive(true);\n  }\n\n  /**\n   * Return whether the interaction is currently active.\n   * @return {boolean} `true` if the interaction is active, `false` otherwise.\n   * @observable\n   * @api\n   */\n  getActive() {\n    return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n  }\n\n  /**\n   * Get the map associated with this interaction.\n   * @return {import(\"../Map.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event}.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    return true;\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    this.set(InteractionProperty.ACTIVE, active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    this.map_ = map;\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number} [duration] Duration.\n */\nexport function pan(view, delta, duration) {\n  const currentCenter = view.getCenterInternal();\n  if (currentCenter) {\n    const center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];\n    view.animateInternal({\n      duration: duration !== undefined ? duration : 250,\n      easing: linear,\n      center: view.getConstrainedCenter(center),\n    });\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate} [anchor] Anchor coordinate in the user projection.\n * @param {number} [duration] Duration.\n */\nexport function zoomByDelta(view, delta, anchor, duration) {\n  const currentZoom = view.getZoom();\n\n  if (currentZoom === undefined) {\n    return;\n  }\n\n  const newZoom = view.getConstrainedZoom(currentZoom + delta);\n  const newResolution = view.getResolutionForZoom(newZoom);\n\n  if (view.getAnimating()) {\n    view.cancelAnimations();\n  }\n  view.animate({\n    resolution: newResolution,\n    anchor: anchor,\n    duration: duration !== undefined ? duration : 250,\n    easing: easeOut,\n  });\n}\n\nexport default Interaction;\n","/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nclass DoubleClickZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a\n   * doubleclick) and eventually zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n      const browserEvent = /** @type {MouseEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const map = mapBrowserEvent.map;\n      const anchor = mapBrowserEvent.coordinate;\n      const delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n      const view = map.getView();\n      zoomByDelta(view, delta, anchor, this.duration_);\n      browserEvent.preventDefault();\n      stopEvent = true;\n    }\n    return !stopEvent;\n  }\n}\n\nexport default DoubleClickZoom;\n","/**\n * @module ol/interaction/Pointer\n */\nimport Interaction from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events.\n * This functions is also called during a drag sequence, so during a drag\n * sequence both the `handleDragEvent` function and this function are called.\n * If `handleDownEvent` is defined and it returns true this function will not\n * be called during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nclass PointerInteraction extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    if (options.handleDownEvent) {\n      this.handleDownEvent = options.handleDownEvent;\n    }\n\n    if (options.handleDragEvent) {\n      this.handleDragEvent = options.handleDragEvent;\n    }\n\n    if (options.handleMoveEvent) {\n      this.handleMoveEvent = options.handleMoveEvent;\n    }\n\n    if (options.handleUpEvent) {\n      this.handleUpEvent = options.handleUpEvent;\n    }\n\n    if (options.stopDown) {\n      this.stopDown = options.stopDown;\n    }\n\n    /**\n     * @type {boolean}\n     * @protected\n     */\n    this.handlingDownUpSequence = false;\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @protected\n     */\n    this.targetPointers = [];\n  }\n\n  /**\n   * Returns the current number of pointers involved in the interaction,\n   * e.g. `2` when two fingers are used.\n   * @return {number} The number of pointers.\n   * @api\n   */\n  getPointerCount() {\n    return this.targetPointers.length;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleDownEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleDragEvent(mapBrowserEvent) {}\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} and may call into\n   * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n   * detected.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent) {\n      return true;\n    }\n\n    let stopEvent = false;\n    this.updateTrackedPointers_(mapBrowserEvent);\n    if (this.handlingDownUpSequence) {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n        this.handleDragEvent(mapBrowserEvent);\n        // prevent page scrolling during dragging\n        mapBrowserEvent.originalEvent.preventDefault();\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        const handledUp = this.handleUpEvent(mapBrowserEvent);\n        this.handlingDownUpSequence =\n          handledUp && this.targetPointers.length > 0;\n      }\n    } else {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        const handled = this.handleDownEvent(mapBrowserEvent);\n        this.handlingDownUpSequence = handled;\n        stopEvent = this.stopDown(handled);\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n        this.handleMoveEvent(mapBrowserEvent);\n      }\n    }\n    return !stopEvent;\n  }\n\n  /**\n   * Handle pointer move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleMoveEvent(mapBrowserEvent) {}\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleUpEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * This function is used to determine if \"down\" events should be propagated\n   * to other interactions or should be stopped.\n   * @param {boolean} handled Was the event handled by the interaction?\n   * @return {boolean} Should the `down` event be stopped?\n   */\n  stopDown(handled) {\n    return handled;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @private\n   */\n  updateTrackedPointers_(mapBrowserEvent) {\n    if (mapBrowserEvent.activePointers) {\n      this.targetPointers = mapBrowserEvent.activePointers;\n    }\n  }\n}\n\n/**\n * @param {Array<PointerEvent>} pointerEvents List of events.\n * @return {{clientX: number, clientY: number}} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n  const length = pointerEvents.length;\n  let clientX = 0;\n  let clientY = 0;\n  for (let i = 0; i < length; i++) {\n    clientX += pointerEvents[i].clientX;\n    clientY += pointerEvents[i].clientY;\n  }\n  return {clientX: clientX / length, clientY: clientY / length};\n}\n\nexport default PointerInteraction;\n","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {MAC, WEBKIT} from '../has.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n\n/**\n * Creates a condition function that passes when all provided conditions pass.\n * @param {...Condition} var_args Conditions to check.\n * @return {Condition} Condition function.\n */\nexport function all(var_args) {\n  const conditions = arguments;\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} All conditions passed.\n   */\n  return function (event) {\n    let pass = true;\n    for (let i = 0, ii = conditions.length; i < ii; ++i) {\n      pass = pass && conditions[i](event);\n      if (!pass) {\n        break;\n      }\n    }\n    return pass;\n  };\n}\n\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport const altKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport const altShiftKeysOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport const focus = function (event) {\n  const targetElement = event.map.getTargetElement();\n  const activeElement = event.map.getOwnerDocument().activeElement;\n  return targetElement.contains(activeElement);\n};\n\n/**\n * Return `true` if the map has the focus or no 'tabindex' attribute set.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map container has the focus or no 'tabindex' attribute.\n */\nexport const focusWithTabindex = function (event) {\n  return event.map.getTargetElement().hasAttribute('tabindex')\n    ? focus(event)\n    : true;\n};\n\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport const always = TRUE;\n\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport const click = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport const mouseActionButton = function (mapBrowserEvent) {\n  const originalEvent = /** @type {MouseEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return originalEvent.button == 0 && !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport const never = FALSE;\n\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport const pointerMove = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == 'pointermove';\n};\n\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport const singleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport const doubleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport const noModifierKeys = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKey = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return MAC ? originalEvent.metaKey : originalEvent.ctrlKey;\n};\n\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport const shiftKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the target element is not editable, i.e. not an `input`,\n * `select`, or `textarea` element and no `contenteditable` attribute is\n * set or inherited, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport const targetNotEditable = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  const tagName = /** @type {Element} */ (originalEvent.target).tagName;\n  return (\n    tagName !== 'INPUT' &&\n    tagName !== 'SELECT' &&\n    tagName !== 'TEXTAREA' &&\n    // `isContentEditable` is only available on `HTMLElement`, but it may also be a\n    // different type like `SVGElement`.\n    // @ts-ignore\n    !originalEvent.target.isContentEditable\n  );\n};\n\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport const mouseOnly = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvent !== undefined,\n    'mapBrowserEvent must originate from a pointer event'\n  );\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvent.pointerType == 'mouse';\n};\n\n/**\n * Return `true` if the event originates from a touchable device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a touchable device.\n * @api\n */\nexport const touchOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvt !== undefined,\n    'mapBrowserEvent must originate from a pointer event'\n  );\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'touch';\n};\n\n/**\n * Return `true` if the event originates from a digital pen.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a digital pen.\n * @api\n */\nexport const penOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvt !== undefined,\n    'mapBrowserEvent must originate from a pointer event'\n  );\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'pen';\n};\n\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See https://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport const primaryAction = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvent !== undefined,\n    'mapBrowserEvent must originate from a pointer event'\n  );\n  return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n","/**\n * @module ol/interaction/DragPan\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  all,\n  focusWithTabindex,\n  noModifierKeys,\n  primaryAction,\n} from '../events/condition.js';\nimport {easeOut} from '../easing.js';\nimport {\n  rotate as rotateCoordinate,\n  scale as scaleCoordinate,\n} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.noModifierKeys} and {@link module:ol/events/condition.primaryAction}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nclass DragPan extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super({\n      stopDown: FALSE,\n    });\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {import(\"../Kinetic.js\").default|undefined}\n     */\n    this.kinetic_ = options.kinetic;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.lastCentroid = null;\n\n    /**\n     * @type {number}\n     */\n    this.lastPointersCount_;\n\n    /**\n     * @type {boolean}\n     */\n    this.panning_ = false;\n\n    const condition = options.condition\n      ? options.condition\n      : all(noModifierKeys, primaryAction);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.noKinetic_ = false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    if (!this.panning_) {\n      this.panning_ = true;\n      map.getView().beginInteraction();\n    }\n    const targetPointers = this.targetPointers;\n    const centroid = map.getEventPixel(centroidFromPointers(targetPointers));\n    if (targetPointers.length == this.lastPointersCount_) {\n      if (this.kinetic_) {\n        this.kinetic_.update(centroid[0], centroid[1]);\n      }\n      if (this.lastCentroid) {\n        const delta = [\n          this.lastCentroid[0] - centroid[0],\n          centroid[1] - this.lastCentroid[1],\n        ];\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        scaleCoordinate(delta, view.getResolution());\n        rotateCoordinate(delta, view.getRotation());\n        view.adjustCenterInternal(delta);\n      }\n    } else if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger down, tiny drag, second finger down\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = centroid;\n    this.lastPointersCount_ = targetPointers.length;\n    mapBrowserEvent.originalEvent.preventDefault();\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (this.targetPointers.length === 0) {\n      if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n        const distance = this.kinetic_.getDistance();\n        const angle = this.kinetic_.getAngle();\n        const center = view.getCenterInternal();\n        const centerpx = map.getPixelFromCoordinateInternal(center);\n        const dest = map.getCoordinateFromPixelInternal([\n          centerpx[0] - distance * Math.cos(angle),\n          centerpx[1] - distance * Math.sin(angle),\n        ]);\n        view.animateInternal({\n          center: view.getConstrainedCenter(dest),\n          duration: 500,\n          easing: easeOut,\n        });\n      }\n      if (this.panning_) {\n        this.panning_ = false;\n        view.endInteraction();\n      }\n      return false;\n    }\n    if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger up, tiny drag, second finger up\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = null;\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      this.lastCentroid = null;\n      // stop any current animation\n      if (view.getAnimating()) {\n        view.cancelAnimations();\n      }\n      if (this.kinetic_) {\n        this.kinetic_.begin();\n      }\n      // No kinetic as soon as more than one pointer on the screen is\n      // detected. This is to prevent nasty pans after pinch.\n      this.noKinetic_ = this.targetPointers.length > 1;\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default DragPan;\n","/**\n * @module ol/interaction/DragRotate\n */\nimport PointerInteraction from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  altShiftKeysOnly,\n  mouseActionButton,\n  mouseOnly,\n} from '../events/condition.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nclass DragRotate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      stopDown: FALSE,\n    });\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n    const size = map.getSize();\n    const offset = mapBrowserEvent.pixel;\n    const theta = Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n    if (this.lastAngle_ !== undefined) {\n      const delta = theta - this.lastAngle_;\n      view.adjustRotationInternal(-delta);\n    }\n    this.lastAngle_ = theta;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    view.endInteraction(this.duration_);\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (\n      mouseActionButton(mapBrowserEvent) &&\n      this.condition_(mapBrowserEvent)\n    ) {\n      const map = mapBrowserEvent.map;\n      map.getView().beginInteraction();\n      this.lastAngle_ = undefined;\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default DragRotate;\n","/**\n * @module ol/render/Box\n */\n\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\n\nclass RenderBox extends Disposable {\n  /**\n   * @param {string} className CSS class name.\n   */\n  constructor(className) {\n    super();\n\n    /**\n     * @type {import(\"../geom/Polygon.js\").default}\n     * @private\n     */\n    this.geometry_ = null;\n\n    /**\n     * @type {HTMLDivElement}\n     * @private\n     */\n    this.element_ = document.createElement('div');\n    this.element_.style.position = 'absolute';\n    this.element_.style.pointerEvents = 'auto';\n    this.element_.className = 'ol-box ' + className;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.endPixel_ = null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setMap(null);\n  }\n\n  /**\n   * @private\n   */\n  render_() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const px = 'px';\n    const style = this.element_.style;\n    style.left = Math.min(startPixel[0], endPixel[0]) + px;\n    style.top = Math.min(startPixel[1], endPixel[1]) + px;\n    style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n    style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n  }\n\n  /**\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    if (this.map_) {\n      this.map_.getOverlayContainer().removeChild(this.element_);\n      const style = this.element_.style;\n      style.left = 'inherit';\n      style.top = 'inherit';\n      style.width = 'inherit';\n      style.height = 'inherit';\n    }\n    this.map_ = map;\n    if (this.map_) {\n      this.map_.getOverlayContainer().appendChild(this.element_);\n    }\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n   * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n   */\n  setPixels(startPixel, endPixel) {\n    this.startPixel_ = startPixel;\n    this.endPixel_ = endPixel;\n    this.createOrUpdateGeometry();\n    this.render_();\n  }\n\n  /**\n   * Creates or updates the cached geometry.\n   */\n  createOrUpdateGeometry() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const pixels = [\n      startPixel,\n      [startPixel[0], endPixel[1]],\n      endPixel,\n      [endPixel[0], startPixel[1]],\n    ];\n    const coordinates = pixels.map(\n      this.map_.getCoordinateFromPixelInternal,\n      this.map_\n    );\n    // close the polygon\n    coordinates[4] = coordinates[0].slice();\n    if (!this.geometry_) {\n      this.geometry_ = new Polygon([coordinates]);\n    } else {\n      this.geometry_.setCoordinates([coordinates]);\n    }\n  }\n\n  /**\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n}\n\nexport default RenderBox;\n","/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport PointerInteraction from './Pointer.js';\nimport RenderBox from '../render/Box.js';\nimport {mouseActionButton} from '../events/condition.js';\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~mouseActionButton}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default):void} [onBoxEnd] Code to execute just\n * before `boxend` is fired.\n */\n\n/**\n * @enum {string}\n */\nconst DragBoxEventType = {\n  /**\n   * Triggered upon drag box start.\n   * @event DragBoxEvent#boxstart\n   * @api\n   */\n  BOXSTART: 'boxstart',\n\n  /**\n   * Triggered on drag when box is active.\n   * @event DragBoxEvent#boxdrag\n   * @api\n   */\n  BOXDRAG: 'boxdrag',\n\n  /**\n   * Triggered upon drag box end.\n   * @event DragBoxEvent#boxend\n   * @api\n   */\n  BOXEND: 'boxend',\n\n  /**\n   * Triggered upon drag box canceled.\n   * @event DragBoxEvent#boxcancel\n   * @api\n   */\n  BOXCANCEL: 'boxcancel',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nexport class DragBoxEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Originating event.\n   */\n  constructor(type, coordinate, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n    /**\n     * @const\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'boxcancel'|'boxdrag'|'boxend'|'boxstart', DragBoxEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'boxcancel'|'boxdrag'|'boxend', Return>} DragBoxOnSignature\n */\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom~DragRotateAndZoom}).\n *\n * @fires DragBoxEvent\n * @api\n */\nclass DragBox extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {DragBoxOnSignature<void>}\n     */\n    this.un;\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"../render/Box.js\").default}\n     * @private\n     */\n    this.box_ = new RenderBox(options.className || 'ol-dragbox');\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n\n    if (options.onBoxEnd) {\n      this.onBoxEnd = options.onBoxEnd;\n    }\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : mouseActionButton;\n\n    /**\n     * @private\n     * @type {EndCondition}\n     */\n    this.boxEndCondition_ = options.boxEndCondition\n      ? options.boxEndCondition\n      : this.defaultBoxEndCondition;\n  }\n\n  /**\n   * The default condition for determining whether the boxend event\n   * should fire.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n   *     leading to the box end.\n   * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n   * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n   * @return {boolean} Whether or not the boxend condition should be fired.\n   */\n  defaultBoxEndCondition(mapBrowserEvent, startPixel, endPixel) {\n    const width = endPixel[0] - startPixel[0];\n    const height = endPixel[1] - startPixel[1];\n    return width * width + height * height >= this.minArea_;\n  }\n\n  /**\n   * Returns geometry of last drawn box.\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   * @api\n   */\n  getGeometry() {\n    return this.box_.getGeometry();\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n\n    this.dispatchEvent(\n      new DragBoxEvent(\n        DragBoxEventType.BOXDRAG,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    this.box_.setMap(null);\n\n    const completeBox = this.boxEndCondition_(\n      mapBrowserEvent,\n      this.startPixel_,\n      mapBrowserEvent.pixel\n    );\n    if (completeBox) {\n      this.onBoxEnd(mapBrowserEvent);\n    }\n    this.dispatchEvent(\n      new DragBoxEvent(\n        completeBox ? DragBoxEventType.BOXEND : DragBoxEventType.BOXCANCEL,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.condition_(mapBrowserEvent)) {\n      this.startPixel_ = mapBrowserEvent.pixel;\n      this.box_.setMap(mapBrowserEvent.map);\n      this.box_.setPixels(this.startPixel_, this.startPixel_);\n      this.dispatchEvent(\n        new DragBoxEvent(\n          DragBoxEventType.BOXSTART,\n          mapBrowserEvent.coordinate,\n          mapBrowserEvent\n        )\n      );\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {}\n}\n\nexport default DragBox;\n","/**\n * @module ol/interaction/DragZoom\n */\nimport DragBox from './DragBox.js';\nimport {easeOut} from '../easing.js';\nimport {shiftKeyOnly} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the parent default\n * `boxEndCondition` function.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nclass DragZoom extends DragBox {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const condition = options.condition ? options.condition : shiftKeyOnly;\n\n    super({\n      condition: condition,\n      className: options.className || 'ol-dragzoom',\n      minArea: options.minArea,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.out_ = options.out !== undefined ? options.out : false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {\n    const map = this.getMap();\n    const view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n    let geometry = this.getGeometry();\n\n    if (this.out_) {\n      const rotatedExtent = view.rotatedExtentForGeometry(geometry);\n      const resolution = view.getResolutionForExtentInternal(rotatedExtent);\n      const factor = view.getResolution() / resolution;\n      geometry = geometry.clone();\n      geometry.scale(factor * factor);\n    }\n\n    view.fitInternal(geometry, {\n      duration: this.duration_,\n      easing: easeOut,\n    });\n  }\n}\n\nexport default DragZoom;\n","/**\n * @module ol/events/Key\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  LEFT: 'ArrowLeft',\n  UP: 'ArrowUp',\n  RIGHT: 'ArrowRight',\n  DOWN: 'ArrowDown',\n};\n","/**\n * @module ol/interaction/KeyboardPan\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {pan} from './Interaction.js';\nimport Key from '../events/Key.js';\nimport {noModifierKeys, targetNotEditable} from '../events/condition.js';\nimport {rotate as rotateCoordinate} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.noModifierKeys} and\n * {@link module:ol/events/condition.targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nclass KeyboardPan extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options || {};\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultCondition_ = function (mapBrowserEvent) {\n      return (\n        noModifierKeys(mapBrowserEvent) && targetNotEditable(mapBrowserEvent)\n      );\n    };\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ =\n      options.condition !== undefined\n        ? options.condition\n        : this.defaultCondition_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelDelta_ =\n      options.pixelDelta !== undefined ? options.pixelDelta : 128;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n   * pressed).\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == EventType.KEYDOWN) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const key = keyEvent.key;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (key == Key.DOWN ||\n          key == Key.LEFT ||\n          key == Key.RIGHT ||\n          key == Key.UP)\n      ) {\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        const mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n        let deltaX = 0,\n          deltaY = 0;\n        if (key == Key.DOWN) {\n          deltaY = -mapUnitsDelta;\n        } else if (key == Key.LEFT) {\n          deltaX = -mapUnitsDelta;\n        } else if (key == Key.RIGHT) {\n          deltaX = mapUnitsDelta;\n        } else {\n          deltaY = mapUnitsDelta;\n        }\n        const delta = [deltaX, deltaY];\n        rotateCoordinate(delta, view.getRotation());\n        pan(view, delta, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardPan;\n","/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {platformModifierKey, targetNotEditable} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. The default condition is\n * that {@link module:ol/events/condition.targetNotEditable} is fulfilled and that\n * the platform modifier key isn't pressed\n * (!{@link module:ol/events/condition.platformModifierKey}).\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nclass KeyboardZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition\n      ? options.condition\n      : function (mapBrowserEvent) {\n          return (\n            !platformModifierKey(mapBrowserEvent) &&\n            targetNotEditable(mapBrowserEvent)\n          );\n        };\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n   * key pressed was '+' or '-').\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (\n      mapBrowserEvent.type == EventType.KEYDOWN ||\n      mapBrowserEvent.type == EventType.KEYPRESS\n    ) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const key = keyEvent.key;\n      if (this.condition_(mapBrowserEvent) && (key === '+' || key === '-')) {\n        const map = mapBrowserEvent.map;\n        const delta = key === '+' ? this.delta_ : -this.delta_;\n        const view = map.getView();\n        zoomByDelta(view, delta, undefined, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardZoom;\n","/**\n * @module ol/Kinetic\n */\n\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nclass Kinetic {\n  /**\n   * @param {number} decay Rate of decay (must be negative).\n   * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n   * @param {number} delay Delay to consider to calculate the kinetic\n   *     initial values (milliseconds).\n   */\n  constructor(decay, minVelocity, delay) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.decay_ = decay;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minVelocity_ = minVelocity;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delay_ = delay;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.points_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  begin() {\n    this.points_.length = 0;\n    this.angle_ = 0;\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   */\n  update(x, y) {\n    this.points_.push(x, y, Date.now());\n  }\n\n  /**\n   * @return {boolean} Whether we should do kinetic animation.\n   */\n  end() {\n    if (this.points_.length < 6) {\n      // at least 2 points are required (i.e. there must be at least 6 elements\n      // in the array)\n      return false;\n    }\n    const delay = Date.now() - this.delay_;\n    const lastIndex = this.points_.length - 3;\n    if (this.points_[lastIndex + 2] < delay) {\n      // the last tracked point is too old, which means that the user stopped\n      // panning before releasing the map\n      return false;\n    }\n\n    // get the first point which still falls into the delay time\n    let firstIndex = lastIndex - 3;\n    while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n      firstIndex -= 3;\n    }\n\n    const duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n    // we don't want a duration of 0 (divide by zero)\n    // we also make sure the user panned for a duration of at least one frame\n    // (1/60s) to compute sane displacement values\n    if (duration < 1000 / 60) {\n      return false;\n    }\n\n    const dx = this.points_[lastIndex] - this.points_[firstIndex];\n    const dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n    this.angle_ = Math.atan2(dy, dx);\n    this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n    return this.initialVelocity_ > this.minVelocity_;\n  }\n\n  /**\n   * @return {number} Total distance travelled (pixels).\n   */\n  getDistance() {\n    return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n  }\n\n  /**\n   * @return {number} Angle of the kinetic panning animation (radians).\n   */\n  getAngle() {\n    return this.angle_;\n  }\n}\n\nexport default Kinetic;\n","/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {DEVICE_PIXEL_RATIO, FIREFOX} from '../has.js';\nimport {all, always, focusWithTabindex} from '../events/condition.js';\nimport {clamp} from '../math.js';\n\n/**\n * @typedef {'trackpad' | 'wheel'} Mode\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.always}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {number} [maxDelta=1] Maximum mouse wheel delta.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n * @property {boolean} [constrainResolution=false] If true, the mouse wheel zoom\n * event will always animate to the closest zoom level after an interaction;\n * false means intermediary zoom levels are allowed.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nclass MouseWheelZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.totalDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = options.maxDelta !== undefined ? options.maxDelta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useAnchor_ =\n      options.useAnchor !== undefined ? options.useAnchor : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ =\n      options.constrainResolution !== undefined\n        ? options.constrainResolution\n        : false;\n\n    const condition = options.condition ? options.condition : always;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {?import(\"../coordinate.js\").Coordinate}\n     */\n    this.lastAnchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.startTime_ = undefined;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.timeoutId_;\n\n    /**\n     * @private\n     * @type {Mode|undefined}\n     */\n    this.mode_ = undefined;\n\n    /**\n     * Trackpad events separated by this delay will be considered separate\n     * interactions.\n     * @private\n     * @type {number}\n     */\n    this.trackpadEventGap_ = 400;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.trackpadTimeoutId_;\n\n    /**\n     * The number of delta values per zoom level\n     * @private\n     * @type {number}\n     */\n    this.deltaPerZoom_ = 300;\n  }\n\n  /**\n   * @private\n   */\n  endInteraction_() {\n    this.trackpadTimeoutId_ = undefined;\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    const view = map.getView();\n    view.endInteraction(\n      undefined,\n      this.lastDelta_ ? (this.lastDelta_ > 0 ? 1 : -1) : 0,\n      this.lastAnchor_\n    );\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n   * zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    const type = mapBrowserEvent.type;\n    if (type !== EventType.WHEEL) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const wheelEvent = /** @type {WheelEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    wheelEvent.preventDefault();\n\n    if (this.useAnchor_) {\n      this.lastAnchor_ = mapBrowserEvent.coordinate;\n    }\n\n    // Delta normalisation inspired by\n    // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n    let delta;\n    if (mapBrowserEvent.type == EventType.WHEEL) {\n      delta = wheelEvent.deltaY;\n      if (FIREFOX && wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n        delta /= DEVICE_PIXEL_RATIO;\n      }\n      if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n        delta *= 40;\n      }\n    }\n\n    if (delta === 0) {\n      return false;\n    }\n    this.lastDelta_ = delta;\n\n    const now = Date.now();\n\n    if (this.startTime_ === undefined) {\n      this.startTime_ = now;\n    }\n\n    if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n      this.mode_ = Math.abs(delta) < 4 ? 'trackpad' : 'wheel';\n    }\n\n    const view = map.getView();\n    if (\n      this.mode_ === 'trackpad' &&\n      !(view.getConstrainResolution() || this.constrainResolution_)\n    ) {\n      if (this.trackpadTimeoutId_) {\n        clearTimeout(this.trackpadTimeoutId_);\n      } else {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.beginInteraction();\n      }\n      this.trackpadTimeoutId_ = setTimeout(\n        this.endInteraction_.bind(this),\n        this.timeout_\n      );\n      view.adjustZoom(-delta / this.deltaPerZoom_, this.lastAnchor_);\n      this.startTime_ = now;\n      return false;\n    }\n\n    this.totalDelta_ += delta;\n\n    const timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n\n    clearTimeout(this.timeoutId_);\n    this.timeoutId_ = setTimeout(\n      this.handleWheelZoom_.bind(this, map),\n      timeLeft\n    );\n\n    return false;\n  }\n\n  /**\n   * @private\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  handleWheelZoom_(map) {\n    const view = map.getView();\n    if (view.getAnimating()) {\n      view.cancelAnimations();\n    }\n    let delta =\n      -clamp(\n        this.totalDelta_,\n        -this.maxDelta_ * this.deltaPerZoom_,\n        this.maxDelta_ * this.deltaPerZoom_\n      ) / this.deltaPerZoom_;\n    if (view.getConstrainResolution() || this.constrainResolution_) {\n      // view has a zoom constraint, zoom by 1\n      delta = delta ? (delta > 0 ? 1 : -1) : 0;\n    }\n    zoomByDelta(view, delta, this.lastAnchor_, this.duration_);\n\n    this.mode_ = undefined;\n    this.totalDelta_ = 0;\n    this.lastAnchor_ = null;\n    this.startTime_ = undefined;\n    this.timeoutId_ = undefined;\n  }\n\n  /**\n   * Enable or disable using the mouse's location as an anchor when zooming\n   * @param {boolean} useAnchor true to zoom to the mouse's location, false\n   * to zoom to the center of the map\n   * @api\n   */\n  setMouseAnchor(useAnchor) {\n    this.useAnchor_ = useAnchor;\n    if (!useAnchor) {\n      this.lastAnchor_ = null;\n    }\n  }\n}\n\nexport default MouseWheelZoom;\n","/**\n * @module ol/interaction/PinchRotate\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchRotate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotating_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotationDelta_ = 0.0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let rotationDelta = 0.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n\n    // angle between touches\n    const angle = Math.atan2(\n      touch1.clientY - touch0.clientY,\n      touch1.clientX - touch0.clientX\n    );\n\n    if (this.lastAngle_ !== undefined) {\n      const delta = angle - this.lastAngle_;\n      this.rotationDelta_ += delta;\n      if (!this.rotating_ && Math.abs(this.rotationDelta_) > this.threshold_) {\n        this.rotating_ = true;\n      }\n      rotationDelta = delta;\n    }\n    this.lastAngle_ = angle;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n\n    // rotate anchor point.\n    // FIXME: should be the intersection point between the lines:\n    //     touch0,touch1 and previousTouch0,previousTouch1\n    this.anchor_ = map.getCoordinateFromPixelInternal(\n      map.getEventPixel(centroidFromPointers(this.targetPointers))\n    );\n\n    // rotate\n    if (this.rotating_) {\n      map.render();\n      view.adjustRotationInternal(rotationDelta, this.anchor_);\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      view.endInteraction(this.duration_);\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastAngle_ = undefined;\n      this.rotating_ = false;\n      this.rotationDelta_ = 0.0;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default PinchRotate;\n","/**\n * @module ol/interaction/PinchZoom\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchZoom extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastDistance_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 1;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let scaleDelta = 1.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n    const dx = touch0.clientX - touch1.clientX;\n    const dy = touch0.clientY - touch1.clientY;\n\n    // distance between touches\n    const distance = Math.sqrt(dx * dx + dy * dy);\n\n    if (this.lastDistance_ !== undefined) {\n      scaleDelta = this.lastDistance_ / distance;\n    }\n    this.lastDistance_ = distance;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n\n    if (scaleDelta != 1.0) {\n      this.lastScaleDelta_ = scaleDelta;\n    }\n\n    // scale anchor point.\n    this.anchor_ = map.getCoordinateFromPixelInternal(\n      map.getEventPixel(centroidFromPointers(this.targetPointers))\n    );\n\n    // scale, bypass the resolution constraint\n    map.render();\n    view.adjustResolutionInternal(scaleDelta, this.anchor_);\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      const direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n      view.endInteraction(this.duration_, direction);\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastDistance_ = undefined;\n      this.lastScaleDelta_ = 1;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default PinchZoom;\n","/**\n * @module ol/Map\n */\nimport BaseObject from './Object.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport CompositeMapRenderer from './renderer/Composite.js';\nimport EventType from './events/EventType.js';\nimport Layer from './layer/Layer.js';\nimport LayerGroup, {GroupEvent} from './layer/Group.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport RenderEventType from './render/EventType.js';\nimport TileQueue, {getTilePriority} from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport {DEVICE_PIXEL_RATIO, PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {TRUE} from './functions.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n} from './transform.js';\nimport {assert} from './asserts.js';\nimport {\n  clone,\n  createOrUpdateEmpty,\n  equals as equalsExtent,\n  getForViewAndSize,\n  isEmpty,\n} from './extent.js';\nimport {defaults as defaultControls} from './control/defaults.js';\nimport {defaults as defaultInteractions} from './interaction/defaults.js';\nimport {equals} from './array.js';\nimport {fromUserCoordinate, toUserCoordinate} from './proj.js';\nimport {getUid} from './util.js';\nimport {hasArea} from './size.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {removeNode} from './dom.js';\nimport {warn} from './console.js';\n\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate Animate.\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform CoordinateToPixelTransform.\n * @property {import(\"rbush\").default} declutterTree DeclutterTree.\n * @property {null|import(\"./extent.js\").Extent} extent Extent (in view projection coordinates).\n * @property {import(\"./extent.js\").Extent} [nextExtent] Next extent during an animation series.\n * @property {number} index Index.\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray LayerStatesArray.\n * @property {number} layerIndex LayerIndex.\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform PixelToCoordinateTransform.\n * @property {Array<PostRenderFunction>} postRenderFunctions PostRenderFunctions.\n * @property {import(\"./size.js\").Size} size Size.\n * @property {TileQueue} tileQueue TileQueue.\n * @property {!Object<string, Object<string, boolean>>} usedTiles UsedTiles.\n * @property {Array<number>} viewHints ViewHints.\n * @property {!Object<string, Object<string, boolean>>} wantedTiles WantedTiles.\n * @property {string} mapId The id of the map.\n * @property {Object<string, boolean>} renderTargets Identifiers of previously rendered elements.\n */\n\n/**\n * @typedef {function(Map, ?FrameState): any} PostRenderFunction\n */\n\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>): boolean} [layerFilter] Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer~Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in css pixels. Pixels\n * inside the radius around the given position will be checked for features.\n * @property {boolean} [checkWrapped=true] Check-Wrapped Will check for wrapped geometries inside the range of\n *   +/- 1 world width. Works only if a projection is used that can be wrapped.\n */\n\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls] Controls.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions] Interactions.\n * @property {HTMLElement|Document} keyboardEventTarget KeyboardEventTarget.\n * @property {Collection<import(\"./Overlay.js\").default>} overlays Overlays.\n * @property {Object<string, *>} values Values.\n */\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:layergroup'|'change:size'|'change:target'|'change:view'} MapObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<MapObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapBrowserEventType\").Types, import(\"./MapBrowserEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapEventType\").Types, import(\"./MapEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./render/EventType\").MapRenderEventTypes, import(\"./render/Event\").default, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|MapObjectEventTypes|\n *      import(\"./MapBrowserEventType\").Types|import(\"./MapEventType\").Types|\n *      import(\"./render/EventType\").MapRenderEventTypes, Return>} MapEventHandler\n */\n\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control/defaults.defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction/defaults.defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered. If passed by element, the container can be in a secondary document.\n * **Note:** CSS `transform` support for the target element is limited to `scale`.\n * @property {View|Promise<import(\"./View.js\").ViewOptions>} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n */\nfunction removeLayerMapProperty(layer) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(null);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    layer.getLayers().forEach(removeLayerMapProperty);\n  }\n}\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n * @param {Map} map Map.\n */\nfunction setLayerMapProperty(layer, map) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(map);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    const layers = layer.getLayers().getArray();\n    for (let i = 0, ii = layers.length; i < ii; ++i) {\n      setLayerMapProperty(layers[i], map);\n    }\n  }\n}\n\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map.js';\n *     import View from 'ol/View.js';\n *     import TileLayer from 'ol/layer/Tile.js';\n *     import OSM from 'ol/source/OSM.js';\n *\n *     const map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1,\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM(),\n *         }),\n *       ],\n *       target: 'map',\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile~TileLayer} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~LayerGroup}\n * is a subclass of {@link module:ol/layer/Base~BaseLayer}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires import(\"./render/Event.js\").default#precompose\n * @fires import(\"./render/Event.js\").default#postcompose\n * @fires import(\"./render/Event.js\").default#rendercomplete\n * @api\n */\nclass Map extends BaseObject {\n  /**\n   * @param {MapOptions} [options] Map options.\n   */\n  constructor(options) {\n    super();\n\n    options = options || {};\n\n    /***\n     * @type {MapEventHandler<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {MapEventHandler<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {MapEventHandler<void>}\n     */\n    this.un;\n\n    const optionsInternal = createOptionsInternal(options);\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.renderComplete_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.loaded_ = true;\n\n    /** @private */\n    this.boundHandleBrowserEvent_ = this.handleBrowserEvent.bind(this);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxTilesLoading_ =\n      options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ =\n      options.pixelRatio !== undefined\n        ? options.pixelRatio\n        : DEVICE_PIXEL_RATIO;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.postRenderTimeoutHandle_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.animationDelayKey_;\n\n    /**\n     * @private\n     */\n    this.animationDelay_ = this.animationDelay_.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.coordinateToPixelTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.pixelToCoordinateTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.frameIndex_ = 0;\n\n    /**\n     * @private\n     * @type {?FrameState}\n     */\n    this.frameState_ = null;\n\n    /**\n     * The extent at the previous 'moveend' event.\n     * @private\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.previousExtent_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewPropertyListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewChangeListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.layerGroupPropertyListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.viewport_ = document.createElement('div');\n    this.viewport_.className =\n      'ol-viewport' + ('ontouchstart' in window ? ' ol-touch' : '');\n    this.viewport_.style.position = 'relative';\n    this.viewport_.style.overflow = 'hidden';\n    this.viewport_.style.width = '100%';\n    this.viewport_.style.height = '100%';\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainer_ = document.createElement('div');\n    this.overlayContainer_.style.position = 'absolute';\n    this.overlayContainer_.style.zIndex = '0';\n    this.overlayContainer_.style.width = '100%';\n    this.overlayContainer_.style.height = '100%';\n    this.overlayContainer_.style.pointerEvents = 'none';\n    this.overlayContainer_.className = 'ol-overlaycontainer';\n    this.viewport_.appendChild(this.overlayContainer_);\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainerStopEvent_ = document.createElement('div');\n    this.overlayContainerStopEvent_.style.position = 'absolute';\n    this.overlayContainerStopEvent_.style.zIndex = '0';\n    this.overlayContainerStopEvent_.style.width = '100%';\n    this.overlayContainerStopEvent_.style.height = '100%';\n    this.overlayContainerStopEvent_.style.pointerEvents = 'none';\n    this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n    this.viewport_.appendChild(this.overlayContainerStopEvent_);\n\n    /**\n     * @private\n     * @type {MapBrowserEventHandler}\n     */\n    this.mapBrowserEventHandler_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.moveTolerance_ = options.moveTolerance;\n\n    /**\n     * @private\n     * @type {HTMLElement|Document}\n     */\n    this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.targetChangeHandlerKeys_ = null;\n\n    /**\n     * @private\n     * @type {HTMLElement|null}\n     */\n    this.targetElement_ = null;\n\n    /**\n     * @type {ResizeObserver}\n     */\n    this.resizeObserver_ = new ResizeObserver(() => this.updateSize());\n\n    /**\n     * @type {Collection<import(\"./control/Control.js\").default>}\n     * @protected\n     */\n    this.controls = optionsInternal.controls || defaultControls();\n\n    /**\n     * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n     * @protected\n     */\n    this.interactions =\n      optionsInternal.interactions ||\n      defaultInteractions({\n        onFocusOnly: true,\n      });\n\n    /**\n     * @type {Collection<import(\"./Overlay.js\").default>}\n     * @private\n     */\n    this.overlays_ = optionsInternal.overlays;\n\n    /**\n     * A lookup of overlays by id.\n     * @private\n     * @type {Object<string, import(\"./Overlay.js\").default>}\n     */\n    this.overlayIdIndex_ = {};\n\n    /**\n     * @type {import(\"./renderer/Map.js\").default|null}\n     * @private\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {!Array<PostRenderFunction>}\n     */\n    this.postRenderFunctions_ = [];\n\n    /**\n     * @private\n     * @type {TileQueue}\n     */\n    this.tileQueue_ = new TileQueue(\n      this.getTilePriority.bind(this),\n      this.handleTileChange_.bind(this)\n    );\n\n    this.addChangeListener(\n      MapProperty.LAYERGROUP,\n      this.handleLayerGroupChanged_\n    );\n    this.addChangeListener(MapProperty.VIEW, this.handleViewChanged_);\n    this.addChangeListener(MapProperty.SIZE, this.handleSizeChanged_);\n    this.addChangeListener(MapProperty.TARGET, this.handleTargetChanged_);\n\n    // setProperties will trigger the rendering of the map if the map\n    // is \"defined\" already.\n    this.setProperties(optionsInternal.values);\n\n    const map = this;\n    if (options.view && !(options.view instanceof View)) {\n      options.view.then(function (viewOptions) {\n        map.setView(new View(viewOptions));\n      });\n    }\n\n    this.controls.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./control/Control.js\").default>} event CollectionEvent\n       */\n      (event) => {\n        event.element.setMap(this);\n      }\n    );\n\n    this.controls.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./control/Control.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(null);\n      }\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./interaction/Interaction.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(this);\n      }\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./interaction/Interaction.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(null);\n      }\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./Overlay.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        this.addOverlayInternal_(event.element);\n      }\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./Overlay.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        const id = event.element.getId();\n        if (id !== undefined) {\n          delete this.overlayIdIndex_[id.toString()];\n        }\n        event.element.setMap(null);\n      }\n    );\n\n    this.controls.forEach(\n      /**\n       * @param {import(\"./control/Control.js\").default} control Control.\n       */\n      (control) => {\n        control.setMap(this);\n      }\n    );\n\n    this.interactions.forEach(\n      /**\n       * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n       */\n      (interaction) => {\n        interaction.setMap(this);\n      }\n    );\n\n    this.overlays_.forEach(this.addOverlayInternal_.bind(this));\n  }\n\n  /**\n   * Add the given control to the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @api\n   */\n  addControl(control) {\n    this.getControls().push(control);\n  }\n\n  /**\n   * Add the given interaction to the map. If you want to add an interaction\n   * at another point of the collection use `getInteractions()` and the methods\n   * available on {@link module:ol/Collection~Collection}. This can be used to\n   * stop the event propagation from the handleEvent function. The interactions\n   * get to handle the events in the reverse order of this collection.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n   * @api\n   */\n  addInteraction(interaction) {\n    this.getInteractions().push(interaction);\n  }\n\n  /**\n   * Adds the given layer to the top of this map. If you want to add a layer\n   * elsewhere in the stack, use `getLayers()` and the methods available on\n   * {@link module:ol/Collection~Collection}.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @api\n   */\n  addLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    layers.push(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer add event.\n   * @private\n   */\n  handleLayerAdd_(event) {\n    setLayerMapProperty(event.layer, this);\n  }\n\n  /**\n   * Add the given overlay to the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @api\n   */\n  addOverlay(overlay) {\n    this.getOverlays().push(overlay);\n  }\n\n  /**\n   * This deals with map's overlay collection changes.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @private\n   */\n  addOverlayInternal_(overlay) {\n    const id = overlay.getId();\n    if (id !== undefined) {\n      this.overlayIdIndex_[id.toString()] = overlay;\n    }\n    overlay.setMap(this);\n  }\n\n  /**\n   *\n   * Clean up.\n   */\n  disposeInternal() {\n    this.controls.clear();\n    this.interactions.clear();\n    this.overlays_.clear();\n    this.resizeObserver_.disconnect();\n    this.setTarget(null);\n    super.disposeInternal();\n  }\n\n  /**\n   * Detect features that intersect a pixel on the viewport, and execute a\n   * callback with each intersecting feature. Layers included in the detection can\n   * be configured through the `layerFilter` option in `options`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(import(\"./Feature.js\").FeatureLike, import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>, import(\"./geom/SimpleGeometry.js\").default): T} callback Feature callback. The callback will be\n   *     called with two arguments. The first argument is one\n   *     {@link module:ol/Feature~Feature feature} or\n   *     {@link module:ol/render/Feature~RenderFeature render feature} at the pixel, the second is\n   *     the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n   *     unmanaged layers. To stop detection, callback functions can return a\n   *     truthy value.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template T\n   * @api\n   */\n  forEachFeatureAtPixel(pixel, callback, options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    options = options !== undefined ? options : {};\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const layerFilter =\n      options.layerFilter !== undefined ? options.layerFilter : TRUE;\n    const checkWrapped = options.checkWrapped !== false;\n    return this.renderer_.forEachFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      callback,\n      null,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Get all features that intersect a pixel on the viewport.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n   * an empty array if none were found.\n   * @api\n   */\n  getFeaturesAtPixel(pixel, options) {\n    const features = [];\n    this.forEachFeatureAtPixel(\n      pixel,\n      function (feature) {\n        features.push(feature);\n      },\n      options\n    );\n    return features;\n  }\n\n  /**\n   * Get all layers from all layer groups.\n   * @return {Array<import(\"./layer/Layer.js\").default>} Layers.\n   * @api\n   */\n  getAllLayers() {\n    const layers = [];\n    function addLayersFrom(layerGroup) {\n      layerGroup.forEach(function (layer) {\n        if (layer instanceof LayerGroup) {\n          addLayersFrom(layer.getLayers());\n        } else {\n          layers.push(layer);\n        }\n      });\n    }\n    addLayersFrom(this.getLayers());\n    return layers;\n  }\n\n  /**\n   * Detect if features intersect a pixel on the viewport. Layers included in the\n   * detection can be configured through the `layerFilter` option.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {boolean} Is there a feature at the given pixel?\n   * @api\n   */\n  hasFeatureAtPixel(pixel, options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return false;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    options = options !== undefined ? options : {};\n    const layerFilter =\n      options.layerFilter !== undefined ? options.layerFilter : TRUE;\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const checkWrapped = options.checkWrapped !== false;\n    return this.renderer_.hasFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Returns the coordinate in user projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getEventCoordinate(event) {\n    return this.getCoordinateFromPixel(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the coordinate in view projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   */\n  getEventCoordinateInternal(event) {\n    return this.getCoordinateFromPixelInternal(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the map pixel position for a browser event relative to the viewport.\n   * @param {UIEvent|{clientX: number, clientY: number}} event Event.\n   * @return {import(\"./pixel.js\").Pixel} Pixel.\n   * @api\n   */\n  getEventPixel(event) {\n    const viewport = this.viewport_;\n    const viewportPosition = viewport.getBoundingClientRect();\n    const viewportSize = this.getSize();\n    const scaleX = viewportPosition.width / viewportSize[0];\n    const scaleY = viewportPosition.height / viewportSize[1];\n    const eventPosition =\n      //FIXME Are we really calling this with a TouchEvent anywhere?\n      'changedTouches' in event\n        ? /** @type {TouchEvent} */ (event).changedTouches[0]\n        : /** @type {MouseEvent} */ (event);\n\n    return [\n      (eventPosition.clientX - viewportPosition.left) / scaleX,\n      (eventPosition.clientY - viewportPosition.top) / scaleY,\n    ];\n  }\n\n  /**\n   * Get the target in which this map is rendered.\n   * Note that this returns what is entered as an option or in setTarget:\n   * if that was an element, it returns an element; if a string, it returns that.\n   * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n   *     map is rendered in.\n   * @observable\n   * @api\n   */\n  getTarget() {\n    return /** @type {HTMLElement|string|undefined} */ (\n      this.get(MapProperty.TARGET)\n    );\n  }\n\n  /**\n   * Get the DOM element into which this map is rendered. In contrast to\n   * `getTarget` this method always return an `Element`, or `null` if the\n   * map has no target.\n   * @return {HTMLElement} The element that the map is rendered in.\n   * @api\n   */\n  getTargetElement() {\n    return this.targetElement_;\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * user projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   * @api\n   */\n  getCoordinateFromPixel(pixel) {\n    return toUserCoordinate(\n      this.getCoordinateFromPixelInternal(pixel),\n      this.getView().getProjection()\n    );\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * map view projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   */\n  getCoordinateFromPixelInternal(pixel) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    }\n    return applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\n  }\n\n  /**\n   * Get the map controls. Modifying this collection changes the controls\n   * associated with the map.\n   * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n   * @api\n   */\n  getControls() {\n    return this.controls;\n  }\n\n  /**\n   * Get the map overlays. Modifying this collection changes the overlays\n   * associated with the map.\n   * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n   * @api\n   */\n  getOverlays() {\n    return this.overlays_;\n  }\n\n  /**\n   * Get an overlay by its identifier (the value returned by overlay.getId()).\n   * Note that the index treats string and numeric identifiers as the same. So\n   * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n   * @param {string|number} id Overlay identifier.\n   * @return {import(\"./Overlay.js\").default} Overlay.\n   * @api\n   */\n  getOverlayById(id) {\n    const overlay = this.overlayIdIndex_[id.toString()];\n    return overlay !== undefined ? overlay : null;\n  }\n\n  /**\n   * Get the map interactions. Modifying this collection changes the interactions\n   * associated with the map.\n   *\n   * Interactions are used for e.g. pan, zoom and rotate.\n   * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n   * @api\n   */\n  getInteractions() {\n    return this.interactions;\n  }\n\n  /**\n   * Get the layergroup associated with this map.\n   * @return {LayerGroup} A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  getLayerGroup() {\n    return /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP));\n  }\n\n  /**\n   * Clear any existing layers and add layers to the map.\n   * @param {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>} layers The layers to be added to the map.\n   * @api\n   */\n  setLayers(layers) {\n    const group = this.getLayerGroup();\n    if (layers instanceof Collection) {\n      group.setLayers(layers);\n      return;\n    }\n\n    const collection = group.getLayers();\n    collection.clear();\n    collection.extend(layers);\n  }\n\n  /**\n   * Get the collection of layers associated with this map.\n   * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n   * @api\n   */\n  getLayers() {\n    const layers = this.getLayerGroup().getLayers();\n    return layers;\n  }\n\n  /**\n   * @return {boolean} Layers have sources that are still loading.\n   */\n  getLoadingOrNotReady() {\n    const layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const state = layerStatesArray[i];\n      if (!state.visible) {\n        continue;\n      }\n      const renderer = state.layer.getRenderer();\n      if (renderer && !renderer.ready) {\n        return true;\n      }\n      const source = state.layer.getSource();\n      if (source && source.loading) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the user\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   * @api\n   */\n  getPixelFromCoordinate(coordinate) {\n    const viewCoordinate = fromUserCoordinate(\n      coordinate,\n      this.getView().getProjection()\n    );\n    return this.getPixelFromCoordinateInternal(viewCoordinate);\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the map view\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   */\n  getPixelFromCoordinateInternal(coordinate) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    }\n    return applyTransform(\n      frameState.coordinateToPixelTransform,\n      coordinate.slice(0, 2)\n    );\n  }\n\n  /**\n   * Get the map renderer.\n   * @return {import(\"./renderer/Map.js\").default|null} Renderer\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Get the size of this map.\n   * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  getSize() {\n    return /** @type {import(\"./size.js\").Size|undefined} */ (\n      this.get(MapProperty.SIZE)\n    );\n  }\n\n  /**\n   * Get the view associated with this map. A view manages properties such as\n   * center and resolution.\n   * @return {View} The view that controls this map.\n   * @observable\n   * @api\n   */\n  getView() {\n    return /** @type {View} */ (this.get(MapProperty.VIEW));\n  }\n\n  /**\n   * Get the element that serves as the map viewport.\n   * @return {HTMLElement} Viewport.\n   * @api\n   */\n  getViewport() {\n    return this.viewport_;\n  }\n\n  /**\n   * Get the element that serves as the container for overlays.  Elements added to\n   * this container will let mousedown and touchstart events through to the map,\n   * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n   * events.\n   * @return {!HTMLElement} The map's overlay container.\n   */\n  getOverlayContainer() {\n    return this.overlayContainer_;\n  }\n\n  /**\n   * Get the element that serves as a container for overlays that don't allow\n   * event propagation. Elements added to this container won't let mousedown and\n   * touchstart events through to the map, so clicks and gestures on an overlay\n   * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   * @return {!HTMLElement} The map's overlay container that stops events.\n   */\n  getOverlayContainerStopEvent() {\n    return this.overlayContainerStopEvent_;\n  }\n\n  /**\n   * @return {!Document} The document where the map is displayed.\n   */\n  getOwnerDocument() {\n    const targetElement = this.getTargetElement();\n    return targetElement ? targetElement.ownerDocument : document;\n  }\n\n  /**\n   * @param {import(\"./Tile.js\").default} tile Tile.\n   * @param {string} tileSourceKey Tile source key.\n   * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n   * @param {number} tileResolution Tile resolution.\n   * @return {number} Tile priority.\n   */\n  getTilePriority(tile, tileSourceKey, tileCenter, tileResolution) {\n    return getTilePriority(\n      this.frameState_,\n      tile,\n      tileSourceKey,\n      tileCenter,\n      tileResolution\n    );\n  }\n\n  /**\n   * @param {UIEvent} browserEvent Browser event.\n   * @param {string} [type] Type.\n   */\n  handleBrowserEvent(browserEvent, type) {\n    type = type || browserEvent.type;\n    const mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n    this.handleMapBrowserEvent(mapBrowserEvent);\n  }\n\n  /**\n   * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n   */\n  handleMapBrowserEvent(mapBrowserEvent) {\n    if (!this.frameState_) {\n      // With no view defined, we cannot translate pixels into geographical\n      // coordinates so interactions cannot be used.\n      return;\n    }\n    const originalEvent = /** @type {PointerEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    const eventType = originalEvent.type;\n    if (\n      eventType === PointerEventType.POINTERDOWN ||\n      eventType === EventType.WHEEL ||\n      eventType === EventType.KEYDOWN\n    ) {\n      const doc = this.getOwnerDocument();\n      const rootNode = this.viewport_.getRootNode\n        ? this.viewport_.getRootNode()\n        : doc;\n      const target = /** @type {Node} */ (originalEvent.target);\n      if (\n        // Abort if the target is a child of the container for elements whose events are not meant\n        // to be handled by map interactions.\n        this.overlayContainerStopEvent_.contains(target) ||\n        // Abort if the event target is a child of the container that is no longer in the page.\n        // It's possible for the target to no longer be in the page if it has been removed in an\n        // event listener, this might happen in a Control that recreates it's content based on\n        // user interaction either manually or via a render in something like https://reactjs.org/\n        !(rootNode === doc ? doc.documentElement : rootNode).contains(target)\n      ) {\n        return;\n      }\n    }\n    mapBrowserEvent.frameState = this.frameState_;\n    if (this.dispatchEvent(mapBrowserEvent) !== false) {\n      const interactionsArray = this.getInteractions().getArray().slice();\n      for (let i = interactionsArray.length - 1; i >= 0; i--) {\n        const interaction = interactionsArray[i];\n        if (\n          interaction.getMap() !== this ||\n          !interaction.getActive() ||\n          !this.getTargetElement()\n        ) {\n          continue;\n        }\n        const cont = interaction.handleEvent(mapBrowserEvent);\n        if (!cont || mapBrowserEvent.propagationStopped) {\n          break;\n        }\n      }\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handlePostRender() {\n    const frameState = this.frameState_;\n\n    // Manage the tile queue\n    // Image loads are expensive and a limited resource, so try to use them\n    // efficiently:\n    // * When the view is static we allow a large number of parallel tile loads\n    //   to complete the frame as quickly as possible.\n    // * When animating or interacting, image loads can cause janks, so we reduce\n    //   the maximum number of loads per frame and limit the number of parallel\n    //   tile loads to remain reactive to view changes and to reduce the chance of\n    //   loading tiles that will quickly disappear from view.\n    const tileQueue = this.tileQueue_;\n    if (!tileQueue.isEmpty()) {\n      let maxTotalLoading = this.maxTilesLoading_;\n      let maxNewLoads = maxTotalLoading;\n      if (frameState) {\n        const hints = frameState.viewHints;\n        if (hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING]) {\n          const lowOnFrameBudget = Date.now() - frameState.time > 8;\n          maxTotalLoading = lowOnFrameBudget ? 0 : 8;\n          maxNewLoads = lowOnFrameBudget ? 0 : 2;\n        }\n      }\n      if (tileQueue.getTilesLoading() < maxTotalLoading) {\n        tileQueue.reprioritize(); // FIXME only call if view has changed\n        tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n      }\n    }\n\n    if (frameState && this.renderer_ && !frameState.animate) {\n      if (this.renderComplete_ === true) {\n        if (this.hasListener(RenderEventType.RENDERCOMPLETE)) {\n          this.renderer_.dispatchRenderEvent(\n            RenderEventType.RENDERCOMPLETE,\n            frameState\n          );\n        }\n        if (this.loaded_ === false) {\n          this.loaded_ = true;\n          this.dispatchEvent(\n            new MapEvent(MapEventType.LOADEND, this, frameState)\n          );\n        }\n      } else if (this.loaded_ === true) {\n        this.loaded_ = false;\n        this.dispatchEvent(\n          new MapEvent(MapEventType.LOADSTART, this, frameState)\n        );\n      }\n    }\n\n    const postRenderFunctions = this.postRenderFunctions_;\n    for (let i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n      postRenderFunctions[i](this, frameState);\n    }\n    postRenderFunctions.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  handleSizeChanged_() {\n    if (this.getView() && !this.getView().getAnimating()) {\n      this.getView().resolveConstraints(0);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleTargetChanged_() {\n    if (this.mapBrowserEventHandler_) {\n      for (let i = 0, ii = this.targetChangeHandlerKeys_.length; i < ii; ++i) {\n        unlistenByKey(this.targetChangeHandlerKeys_[i]);\n      }\n      this.targetChangeHandlerKeys_ = null;\n      this.viewport_.removeEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_\n      );\n      this.viewport_.removeEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_\n      );\n      this.mapBrowserEventHandler_.dispose();\n      this.mapBrowserEventHandler_ = null;\n      removeNode(this.viewport_);\n    }\n\n    if (this.targetElement_) {\n      this.resizeObserver_.unobserve(this.targetElement_);\n      const rootNode = this.targetElement_.getRootNode();\n      if (rootNode instanceof ShadowRoot) {\n        this.resizeObserver_.unobserve(rootNode.host);\n      }\n      this.setSize(undefined);\n    }\n\n    // target may be undefined, null, a string or an Element.\n    // If it's a string we convert it to an Element before proceeding.\n    // If it's not now an Element we remove the viewport from the DOM.\n    // If it's an Element we append the viewport element to it.\n\n    const target = this.getTarget();\n    const targetElement =\n      typeof target === 'string' ? document.getElementById(target) : target;\n    this.targetElement_ = targetElement;\n    if (!targetElement) {\n      if (this.renderer_) {\n        clearTimeout(this.postRenderTimeoutHandle_);\n        this.postRenderTimeoutHandle_ = undefined;\n        this.postRenderFunctions_.length = 0;\n        this.renderer_.dispose();\n        this.renderer_ = null;\n      }\n      if (this.animationDelayKey_) {\n        cancelAnimationFrame(this.animationDelayKey_);\n        this.animationDelayKey_ = undefined;\n      }\n    } else {\n      targetElement.appendChild(this.viewport_);\n      if (!this.renderer_) {\n        this.renderer_ = new CompositeMapRenderer(this);\n      }\n\n      this.mapBrowserEventHandler_ = new MapBrowserEventHandler(\n        this,\n        this.moveTolerance_\n      );\n      for (const key in MapBrowserEventType) {\n        this.mapBrowserEventHandler_.addEventListener(\n          MapBrowserEventType[key],\n          this.handleMapBrowserEvent.bind(this)\n        );\n      }\n      this.viewport_.addEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_,\n        false\n      );\n      this.viewport_.addEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_,\n        PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n      );\n\n      const keyboardEventTarget = !this.keyboardEventTarget_\n        ? targetElement\n        : this.keyboardEventTarget_;\n      this.targetChangeHandlerKeys_ = [\n        listen(\n          keyboardEventTarget,\n          EventType.KEYDOWN,\n          this.handleBrowserEvent,\n          this\n        ),\n        listen(\n          keyboardEventTarget,\n          EventType.KEYPRESS,\n          this.handleBrowserEvent,\n          this\n        ),\n      ];\n      const rootNode = targetElement.getRootNode();\n      if (rootNode instanceof ShadowRoot) {\n        this.resizeObserver_.observe(rootNode.host);\n      }\n      this.resizeObserver_.observe(targetElement);\n    }\n\n    this.updateSize();\n    // updateSize calls setSize, so no need to call this.render\n    // ourselves here.\n  }\n\n  /**\n   * @private\n   */\n  handleTileChange_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewPropertyChanged_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewChanged_() {\n    if (this.viewPropertyListenerKey_) {\n      unlistenByKey(this.viewPropertyListenerKey_);\n      this.viewPropertyListenerKey_ = null;\n    }\n    if (this.viewChangeListenerKey_) {\n      unlistenByKey(this.viewChangeListenerKey_);\n      this.viewChangeListenerKey_ = null;\n    }\n    const view = this.getView();\n    if (view) {\n      this.updateViewportSize_();\n\n      this.viewPropertyListenerKey_ = listen(\n        view,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n      this.viewChangeListenerKey_ = listen(\n        view,\n        EventType.CHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n\n      view.resolveConstraints(0);\n    }\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleLayerGroupChanged_() {\n    if (this.layerGroupPropertyListenerKeys_) {\n      this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n      this.layerGroupPropertyListenerKeys_ = null;\n    }\n    const layerGroup = this.getLayerGroup();\n    if (layerGroup) {\n      this.handleLayerAdd_(new GroupEvent('addlayer', layerGroup));\n      this.layerGroupPropertyListenerKeys_ = [\n        listen(layerGroup, ObjectEventType.PROPERTYCHANGE, this.render, this),\n        listen(layerGroup, EventType.CHANGE, this.render, this),\n        listen(layerGroup, 'addlayer', this.handleLayerAdd_, this),\n        listen(layerGroup, 'removelayer', this.handleLayerRemove_, this),\n      ];\n    }\n    this.render();\n  }\n\n  /**\n   * @return {boolean} Is rendered.\n   */\n  isRendered() {\n    return !!this.frameState_;\n  }\n\n  /**\n   * @private\n   */\n  animationDelay_() {\n    this.animationDelayKey_ = undefined;\n    this.renderFrame_(Date.now());\n  }\n\n  /**\n   * Requests an immediate render in a synchronous manner.\n   * @api\n   */\n  renderSync() {\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n    }\n    this.animationDelay_();\n  }\n\n  /**\n   * Redraws all text after new fonts have loaded\n   */\n  redrawText() {\n    const layerStates = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStates.length; i < ii; ++i) {\n      const layer = layerStates[i].layer;\n      if (layer.hasRenderer()) {\n        layer.getRenderer().handleFontsChanged();\n      }\n    }\n  }\n\n  /**\n   * Request a map rendering (at the next animation frame).\n   * @api\n   */\n  render() {\n    if (this.renderer_ && this.animationDelayKey_ === undefined) {\n      this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n    }\n  }\n\n  /**\n   * This method is meant to be called in a layer's `prerender` listener. It causes all collected\n   * declutter items to be decluttered and rendered on the map immediately. This is useful for\n   * layers that need to appear entirely above the decluttered items of layers lower in the layer\n   * stack.\n   * @api\n   */\n  flushDeclutterItems() {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return;\n    }\n    this.renderer_.flushDeclutterItems(frameState);\n  }\n\n  /**\n   * Remove the given control from the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n   *     if the control was not found).\n   * @api\n   */\n  removeControl(control) {\n    return this.getControls().remove(control);\n  }\n\n  /**\n   * Remove the given interaction from the map.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n   * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n   *     undefined if the interaction was not found).\n   * @api\n   */\n  removeInteraction(interaction) {\n    return this.getInteractions().remove(interaction);\n  }\n\n  /**\n   * Removes the given layer from the map.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n   *     layer was not found).\n   * @api\n   */\n  removeLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    return layers.remove(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer remove event.\n   * @private\n   */\n  handleLayerRemove_(event) {\n    removeLayerMapProperty(event.layer);\n  }\n\n  /**\n   * Remove the given overlay from the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n   *     if the overlay was not found).\n   * @api\n   */\n  removeOverlay(overlay) {\n    return this.getOverlays().remove(overlay);\n  }\n\n  /**\n   * @param {number} time Time.\n   * @private\n   */\n  renderFrame_(time) {\n    const size = this.getSize();\n    const view = this.getView();\n    const previousFrameState = this.frameState_;\n    /** @type {?FrameState} */\n    let frameState = null;\n    if (size !== undefined && hasArea(size) && view && view.isDef()) {\n      const viewHints = view.getHints(\n        this.frameState_ ? this.frameState_.viewHints : undefined\n      );\n      const viewState = view.getState();\n      frameState = {\n        animate: false,\n        coordinateToPixelTransform: this.coordinateToPixelTransform_,\n        declutterTree: null,\n        extent: getForViewAndSize(\n          viewState.center,\n          viewState.resolution,\n          viewState.rotation,\n          size\n        ),\n        index: this.frameIndex_++,\n        layerIndex: 0,\n        layerStatesArray: this.getLayerGroup().getLayerStatesArray(),\n        pixelRatio: this.pixelRatio_,\n        pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n        postRenderFunctions: [],\n        size: size,\n        tileQueue: this.tileQueue_,\n        time: time,\n        usedTiles: {},\n        viewState: viewState,\n        viewHints: viewHints,\n        wantedTiles: {},\n        mapId: getUid(this),\n        renderTargets: {},\n      };\n      if (viewState.nextCenter && viewState.nextResolution) {\n        const rotation = isNaN(viewState.nextRotation)\n          ? viewState.rotation\n          : viewState.nextRotation;\n\n        frameState.nextExtent = getForViewAndSize(\n          viewState.nextCenter,\n          viewState.nextResolution,\n          rotation,\n          size\n        );\n      }\n    }\n\n    this.frameState_ = frameState;\n    this.renderer_.renderFrame(frameState);\n\n    if (frameState) {\n      if (frameState.animate) {\n        this.render();\n      }\n      Array.prototype.push.apply(\n        this.postRenderFunctions_,\n        frameState.postRenderFunctions\n      );\n\n      if (previousFrameState) {\n        const moveStart =\n          !this.previousExtent_ ||\n          (!isEmpty(this.previousExtent_) &&\n            !equalsExtent(frameState.extent, this.previousExtent_));\n        if (moveStart) {\n          this.dispatchEvent(\n            new MapEvent(MapEventType.MOVESTART, this, previousFrameState)\n          );\n          this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n        }\n      }\n\n      const idle =\n        this.previousExtent_ &&\n        !frameState.viewHints[ViewHint.ANIMATING] &&\n        !frameState.viewHints[ViewHint.INTERACTING] &&\n        !equalsExtent(frameState.extent, this.previousExtent_);\n\n      if (idle) {\n        this.dispatchEvent(\n          new MapEvent(MapEventType.MOVEEND, this, frameState)\n        );\n        clone(frameState.extent, this.previousExtent_);\n      }\n    }\n\n    this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n\n    this.renderComplete_ =\n      this.hasListener(MapEventType.LOADSTART) ||\n      this.hasListener(MapEventType.LOADEND) ||\n      this.hasListener(RenderEventType.RENDERCOMPLETE)\n        ? !this.tileQueue_.getTilesLoading() &&\n          !this.tileQueue_.getCount() &&\n          !this.getLoadingOrNotReady()\n        : undefined;\n\n    if (!this.postRenderTimeoutHandle_) {\n      this.postRenderTimeoutHandle_ = setTimeout(() => {\n        this.postRenderTimeoutHandle_ = undefined;\n        this.handlePostRender();\n      }, 0);\n    }\n  }\n\n  /**\n   * Sets the layergroup of this map.\n   * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  setLayerGroup(layerGroup) {\n    const oldLayerGroup = this.getLayerGroup();\n    if (oldLayerGroup) {\n      this.handleLayerRemove_(new GroupEvent('removelayer', oldLayerGroup));\n    }\n    this.set(MapProperty.LAYERGROUP, layerGroup);\n  }\n\n  /**\n   * Set the size of this map.\n   * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  setSize(size) {\n    this.set(MapProperty.SIZE, size);\n  }\n\n  /**\n   * Set the target element to render this map into.\n   * @param {HTMLElement|string} [target] The Element or id of the Element\n   *     that the map is rendered in.\n   * @observable\n   * @api\n   */\n  setTarget(target) {\n    this.set(MapProperty.TARGET, target);\n  }\n\n  /**\n   * Set the view for this map.\n   * @param {View|Promise<import(\"./View.js\").ViewOptions>} view The view that controls this map.\n   * It is also possible to pass a promise that resolves to options for constructing a view.  This\n   * alternative allows view properties to be resolved by sources or other components that load\n   * view-related metadata.\n   * @observable\n   * @api\n   */\n  setView(view) {\n    if (!view || view instanceof View) {\n      this.set(MapProperty.VIEW, view);\n      return;\n    }\n    this.set(MapProperty.VIEW, new View());\n\n    const map = this;\n    view.then(function (viewOptions) {\n      map.setView(new View(viewOptions));\n    });\n  }\n\n  /**\n   * Force a recalculation of the map viewport size.  This should be called when\n   * third-party code changes the size of the map viewport.\n   * @api\n   */\n  updateSize() {\n    const targetElement = this.getTargetElement();\n\n    let size = undefined;\n    if (targetElement) {\n      const computedStyle = getComputedStyle(targetElement);\n      const width =\n        targetElement.offsetWidth -\n        parseFloat(computedStyle['borderLeftWidth']) -\n        parseFloat(computedStyle['paddingLeft']) -\n        parseFloat(computedStyle['paddingRight']) -\n        parseFloat(computedStyle['borderRightWidth']);\n      const height =\n        targetElement.offsetHeight -\n        parseFloat(computedStyle['borderTopWidth']) -\n        parseFloat(computedStyle['paddingTop']) -\n        parseFloat(computedStyle['paddingBottom']) -\n        parseFloat(computedStyle['borderBottomWidth']);\n      if (!isNaN(width) && !isNaN(height)) {\n        size = [width, height];\n        if (\n          !hasArea(size) &&\n          !!(\n            targetElement.offsetWidth ||\n            targetElement.offsetHeight ||\n            targetElement.getClientRects().length\n          )\n        ) {\n          warn(\n            \"No map visible because the map container's width or height are 0.\"\n          );\n        }\n      }\n    }\n\n    const oldSize = this.getSize();\n    if (size && (!oldSize || !equals(size, oldSize))) {\n      this.setSize(size);\n      this.updateViewportSize_();\n    }\n  }\n\n  /**\n   * Recomputes the viewport size and save it on the view object (if any)\n   * @private\n   */\n  updateViewportSize_() {\n    const view = this.getView();\n    if (view) {\n      let size = undefined;\n      const computedStyle = getComputedStyle(this.viewport_);\n      if (computedStyle.width && computedStyle.height) {\n        size = [\n          parseInt(computedStyle.width, 10),\n          parseInt(computedStyle.height, 10),\n        ];\n      }\n      view.setViewportSize(size);\n    }\n  }\n}\n\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n  /**\n   * @type {HTMLElement|Document}\n   */\n  let keyboardEventTarget = null;\n  if (options.keyboardEventTarget !== undefined) {\n    keyboardEventTarget =\n      typeof options.keyboardEventTarget === 'string'\n        ? document.getElementById(options.keyboardEventTarget)\n        : options.keyboardEventTarget;\n  }\n\n  /**\n   * @type {Object<string, *>}\n   */\n  const values = {};\n\n  const layerGroup =\n    options.layers &&\n    typeof (/** @type {?} */ (options.layers).getLayers) === 'function'\n      ? /** @type {LayerGroup} */ (options.layers)\n      : new LayerGroup({\n          layers:\n            /** @type {Collection<import(\"./layer/Base.js\").default>|Array<import(\"./layer/Base.js\").default>} */ (\n              options.layers\n            ),\n        });\n  values[MapProperty.LAYERGROUP] = layerGroup;\n\n  values[MapProperty.TARGET] = options.target;\n\n  values[MapProperty.VIEW] =\n    options.view instanceof View ? options.view : new View();\n\n  /** @type {Collection<import(\"./control/Control.js\").default>} */\n  let controls;\n  if (options.controls !== undefined) {\n    if (Array.isArray(options.controls)) {\n      controls = new Collection(options.controls.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.controls).getArray) === 'function',\n        'Expected `controls` to be an array or an `ol/Collection.js`'\n      );\n      controls = options.controls;\n    }\n  }\n\n  /** @type {Collection<import(\"./interaction/Interaction\").default>} */\n  let interactions;\n  if (options.interactions !== undefined) {\n    if (Array.isArray(options.interactions)) {\n      interactions = new Collection(options.interactions.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.interactions).getArray) ===\n          'function',\n        'Expected `interactions` to be an array or an `ol/Collection.js`'\n      );\n      interactions = options.interactions;\n    }\n  }\n\n  /** @type {Collection<import(\"./Overlay.js\").default>} */\n  let overlays;\n  if (options.overlays !== undefined) {\n    if (Array.isArray(options.overlays)) {\n      overlays = new Collection(options.overlays.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.overlays).getArray) === 'function',\n        'Expected `overlays` to be an array or an `ol/Collection.js`'\n      );\n      overlays = options.overlays;\n    }\n  } else {\n    overlays = new Collection();\n  }\n\n  return {\n    controls: controls,\n    interactions: interactions,\n    keyboardEventTarget: keyboardEventTarget,\n    overlays: overlays,\n    values: values,\n  };\n}\nexport default Map;\n","/**\n * @module ol/control/defaults\n */\nimport Attribution from './Attribution.js';\nimport Collection from '../Collection.js';\nimport Rotate from './Rotate.js';\nimport Zoom from './Zoom.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n */\n\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions} [options] Options for the default controls.\n * @return {Collection<import(\"./Control.js\").default>} A collection of controls\n * to be used with the {@link module:ol/Map~Map} constructor's `controls` option.\n * @api\n */\nexport function defaults(options) {\n  options = options ? options : {};\n\n  /** @type {Collection<import(\"./Control.js\").default>} */\n  const controls = new Collection();\n\n  const zoomControl = options.zoom !== undefined ? options.zoom : true;\n  if (zoomControl) {\n    controls.push(new Zoom(options.zoomOptions));\n  }\n\n  const rotateControl = options.rotate !== undefined ? options.rotate : true;\n  if (rotateControl) {\n    controls.push(new Rotate(options.rotateOptions));\n  }\n\n  const attributionControl =\n    options.attribution !== undefined ? options.attribution : true;\n  if (attributionControl) {\n    controls.push(new Attribution(options.attributionOptions));\n  }\n\n  return controls;\n}\n","/**\n * @module ol/interaction/defaults\n */\nimport Collection from '../Collection.js';\nimport DoubleClickZoom from './DoubleClickZoom.js';\nimport DragPan from './DragPan.js';\nimport DragRotate from './DragRotate.js';\nimport DragZoom from './DragZoom.js';\nimport KeyboardPan from './KeyboardPan.js';\nimport KeyboardZoom from './KeyboardZoom.js';\nimport Kinetic from '../Kinetic.js';\nimport MouseWheelZoom from './MouseWheelZoom.js';\nimport PinchRotate from './PinchRotate.js';\nimport PinchZoom from './PinchZoom.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or double click zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction~Interaction} instances and insert\n * them into a {@link module:ol/Collection~Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. Changing the order can\n * be of interest if the event propagation needs to be stopped at a point.\n * The default set of interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions} [options] Defaults options.\n * @return {Collection<import(\"./Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(options) {\n  options = options ? options : {};\n\n  /** @type {Collection<import(\"./Interaction.js\").default>} */\n  const interactions = new Collection();\n\n  const kinetic = new Kinetic(-0.005, 0.05, 100);\n\n  const altShiftDragRotate =\n    options.altShiftDragRotate !== undefined\n      ? options.altShiftDragRotate\n      : true;\n  if (altShiftDragRotate) {\n    interactions.push(new DragRotate());\n  }\n\n  const doubleClickZoom =\n    options.doubleClickZoom !== undefined ? options.doubleClickZoom : true;\n  if (doubleClickZoom) {\n    interactions.push(\n      new DoubleClickZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const dragPan = options.dragPan !== undefined ? options.dragPan : true;\n  if (dragPan) {\n    interactions.push(\n      new DragPan({\n        onFocusOnly: options.onFocusOnly,\n        kinetic: kinetic,\n      })\n    );\n  }\n\n  const pinchRotate =\n    options.pinchRotate !== undefined ? options.pinchRotate : true;\n  if (pinchRotate) {\n    interactions.push(new PinchRotate());\n  }\n\n  const pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n  if (pinchZoom) {\n    interactions.push(\n      new PinchZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const keyboard = options.keyboard !== undefined ? options.keyboard : true;\n  if (keyboard) {\n    interactions.push(new KeyboardPan());\n    interactions.push(\n      new KeyboardZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const mouseWheelZoom =\n    options.mouseWheelZoom !== undefined ? options.mouseWheelZoom : true;\n  if (mouseWheelZoom) {\n    interactions.push(\n      new MouseWheelZoom({\n        onFocusOnly: options.onFocusOnly,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const shiftDragZoom =\n    options.shiftDragZoom !== undefined ? options.shiftDragZoom : true;\n  if (shiftDragZoom) {\n    interactions.push(\n      new DragZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  return interactions;\n}\n","/**\n * @module ol/Object\n */\nimport Event from './events/Event.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport {getUid} from './util.js';\nimport {isEmpty} from './obj.js';\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nexport class ObjectEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {string} key The property name.\n   * @param {*} oldValue The old value for `key`.\n   */\n  constructor(type, key, oldValue) {\n    super(type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types, ObjectEvent, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types, Return>} ObjectOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable~Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nclass BaseObject extends Observable {\n  /**\n   * @param {Object<string, *>} [values] An object with key-value pairs.\n   */\n  constructor(values) {\n    super();\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ObjectOnSignature<void>}\n     */\n    this.un;\n\n    // Call {@link module:ol/util.getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {Object<string, *>}\n     */\n    this.values_ = null;\n\n    if (values !== undefined) {\n      this.setProperties(values);\n    }\n  }\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  get(key) {\n    let value;\n    if (this.values_ && this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  }\n\n  /**\n   * Get a list of object property names.\n   * @return {Array<string>} List of property names.\n   * @api\n   */\n  getKeys() {\n    return (this.values_ && Object.keys(this.values_)) || [];\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>} Object.\n   * @api\n   */\n  getProperties() {\n    return (this.values_ && Object.assign({}, this.values_)) || {};\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>?} Object.\n   */\n  getPropertiesInternal() {\n    return this.values_;\n  }\n\n  /**\n   * @return {boolean} The object has properties.\n   */\n  hasProperties() {\n    return !!this.values_;\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  notify(key, oldValue) {\n    let eventType;\n    eventType = `change:${key}`;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  addChangeListener(key, listener) {\n    this.addEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  removeChangeListener(key, listener) {\n    this.removeEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  set(key, value, silent) {\n    const values = this.values_ || (this.values_ = {});\n    if (silent) {\n      values[key] = value;\n    } else {\n      const oldValue = values[key];\n      values[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object<string, *>} values Values.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  setProperties(values, silent) {\n    for (const key in values) {\n      this.set(key, values[key], silent);\n    }\n  }\n\n  /**\n   * Apply any properties from another object without triggering events.\n   * @param {BaseObject} source The source object.\n   * @protected\n   */\n  applyProperties(source) {\n    if (!source.values_) {\n      return;\n    }\n    Object.assign(this.values_ || (this.values_ = {}), source.values_);\n  }\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean} [silent] Unset without triggering an event.\n   * @api\n   */\n  unset(key, silent) {\n    if (this.values_ && key in this.values_) {\n      const oldValue = this.values_[key];\n      delete this.values_[key];\n      if (isEmpty(this.values_)) {\n        this.values_ = null;\n      }\n      if (!silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n}\n\nexport default BaseObject;\n","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object.ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange',\n};\n\n/**\n * @typedef {'propertychange'} Types\n */\n","/**\n * @module ol/Observable\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {listen, listenOnce, unlistenByKey} from './events.js';\n\n/***\n * @template {string} Type\n * @template {Event|import(\"./events/Event.js\").default} EventClass\n * @template Return\n * @typedef {(type: Type, listener: (event: EventClass) => ?) => Return} OnSignature\n */\n\n/***\n * @template {string} Type\n * @template Return\n * @typedef {(type: Type[], listener: (event: Event|import(\"./events/Event\").default) => ?) => Return extends void ? void : Return[]} CombinedOnSignature\n */\n\n/**\n * @typedef {'change'|'error'} EventTypes\n */\n\n/***\n * @template Return\n * @typedef {OnSignature<EventTypes, import(\"./events/Event.js\").default, Return> & CombinedOnSignature<EventTypes, Return>} ObservableOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").default\n * @api\n */\nclass Observable extends EventTarget {\n  constructor() {\n    super();\n\n    this.on =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onInternal\n      );\n\n    this.once =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onceInternal\n      );\n\n    this.un = /** @type {ObservableOnSignature<void>} */ (this.unInternal);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n  }\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  changed() {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  getRevision() {\n    return this.revision_;\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onInternal(type, listener) {\n    if (Array.isArray(type)) {\n      const len = type.length;\n      const keys = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        keys[i] = listen(this, type[i], listener);\n      }\n      return keys;\n    }\n    return listen(this, /** @type {string} */ (type), listener);\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onceInternal(type, listener) {\n    let key;\n    if (Array.isArray(type)) {\n      const len = type.length;\n      key = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        key[i] = listenOnce(this, type[i], listener);\n      }\n    } else {\n      key = listenOnce(this, /** @type {string} */ (type), listener);\n    }\n    /** @type {Object} */ (listener).ol_key = key;\n    return key;\n  }\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @protected\n   */\n  unInternal(type, listener) {\n    const key = /** @type {Object} */ (listener).ol_key;\n    if (key) {\n      unByKey(key);\n    } else if (Array.isArray(type)) {\n      for (let i = 0, ii = type.length; i < ii; ++i) {\n        this.removeEventListener(type[i], listener);\n      }\n    } else {\n      this.removeEventListener(type, listener);\n    }\n  }\n}\n\n/**\n * Listen for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.on;\n\n/**\n * Listen once for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.once;\n\n/**\n * Unlisten for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @api\n */\nObservable.prototype.un;\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (let i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n  }\n}\n\nexport default Observable;\n","/**\n * @module ol/Tile\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport TileState from './TileState.js';\nimport {abstract} from './util.js';\nimport {easeIn} from './easing.js';\n\n/**\n * A function that takes an {@link module:ol/Tile~Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState.js';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   const xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     const data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string): void} LoadFunction\n * @api\n */\n\n/**\n * {@link module:ol/source/Tile~TileSource} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes an {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection~Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n * @api\n */\n\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nclass Tile extends EventTarget {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.tileCoord = tileCoord;\n\n    /**\n     * @protected\n     * @type {import(\"./TileState.js\").default}\n     */\n    this.state = state;\n\n    /**\n     * An \"interim\" tile for this tile. The interim tile may be used while this\n     * one is loading, for \"smooth\" transitions when changing params/dimensions\n     * on the source.\n     * @type {Tile}\n     */\n    this.interimTile = null;\n\n    /**\n     * A key assigned to the tile. This is used by the tile source to determine\n     * if this tile can effectively be used, or if a new tile should be created\n     * and this one be used as an interim tile for this new tile.\n     * @type {string}\n     */\n    this.key = '';\n\n    /**\n     * The duration for the opacity transition.\n     * @type {number}\n     */\n    this.transition_ =\n      options.transition === undefined ? 250 : options.transition;\n\n    /**\n     * Lookup of start times for rendering transitions.  If the start time is\n     * equal to -1, the transition is complete.\n     * @type {Object<string, number>}\n     */\n    this.transitionStarts_ = {};\n\n    /**\n     * @type {boolean}\n     */\n    this.interpolate = !!options.interpolate;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Called by the tile cache when the tile is removed from the cache due to expiry\n   */\n  release() {\n    if (this.state === TileState.ERROR) {\n      // to remove the `change` listener on this tile in `ol/TileQueue#handleTileChange`\n      this.setState(TileState.EMPTY);\n    }\n  }\n\n  /**\n   * @return {string} Key.\n   */\n  getKey() {\n    return this.key + '/' + this.tileCoord;\n  }\n\n  /**\n   * Get the interim tile most suitable for rendering using the chain of interim\n   * tiles. This corresponds to the  most recent tile that has been loaded, if no\n   * such tile exists, the original tile is returned.\n   * @return {!Tile} Best tile for rendering.\n   */\n  getInterimTile() {\n    if (!this.interimTile) {\n      //empty chain\n      return this;\n    }\n    let tile = this.interimTile;\n\n    // find the first loaded tile and return it. Since the chain is sorted in\n    // decreasing order of creation time, there is no need to search the remainder\n    // of the list (all those tiles correspond to older requests and will be\n    // cleaned up by refreshInterimChain)\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        // Show tile immediately instead of fading it in after loading, because\n        // the interim tile is in place already\n        this.transition_ = 0;\n        return tile;\n      }\n      tile = tile.interimTile;\n    } while (tile);\n\n    // we can not find a better tile\n    return this;\n  }\n\n  /**\n   * Goes through the chain of interim tiles and discards sections of the chain\n   * that are no longer relevant.\n   */\n  refreshInterimChain() {\n    if (!this.interimTile) {\n      return;\n    }\n\n    let tile = this.interimTile;\n\n    /**\n     * @type {Tile}\n     */\n    let prev = this;\n\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        //we have a loaded tile, we can discard the rest of the list\n        //we would could abort any LOADING tile request\n        //older than this tile (i.e. any LOADING tile following this entry in the chain)\n        tile.interimTile = null;\n        break;\n      } else if (tile.getState() == TileState.LOADING) {\n        //keep this LOADING tile any loaded tiles later in the chain are\n        //older than this tile, so we're still interested in the request\n        prev = tile;\n      } else if (tile.getState() == TileState.IDLE) {\n        //the head of the list is the most current tile, we don't need\n        //to start any other requests for this chain\n        prev.interimTile = tile.interimTile;\n      } else {\n        prev = tile;\n      }\n      tile = prev.interimTile;\n    } while (tile);\n  }\n\n  /**\n   * Get the tile coordinate for this tile.\n   * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n   * @api\n   */\n  getTileCoord() {\n    return this.tileCoord;\n  }\n\n  /**\n   * @return {import(\"./TileState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n   * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n   * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n   * the tile queue and will block other requests.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @api\n   */\n  setState(state) {\n    if (this.state !== TileState.ERROR && this.state > state) {\n      throw new Error('Tile load sequence violation');\n    }\n    this.state = state;\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @abstract\n   * @api\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * Get the alpha value for rendering.\n   * @param {string} id An id for the renderer.\n   * @param {number} time The render frame time.\n   * @return {number} A number between 0 and 1.\n   */\n  getAlpha(id, time) {\n    if (!this.transition_) {\n      return 1;\n    }\n\n    let start = this.transitionStarts_[id];\n    if (!start) {\n      start = time;\n      this.transitionStarts_[id] = start;\n    } else if (start === -1) {\n      return 1;\n    }\n\n    const delta = time - start + 1000 / 60; // avoid rendering at 0\n    if (delta >= this.transition_) {\n      return 1;\n    }\n    return easeIn(delta / this.transition_);\n  }\n\n  /**\n   * Determine if a tile is in an alpha transition.  A tile is considered in\n   * transition if tile.getAlpha() has not yet been called or has been called\n   * and returned 1.\n   * @param {string} id An id for the renderer.\n   * @return {boolean} The tile is in transition.\n   */\n  inTransition(id) {\n    if (!this.transition_) {\n      return false;\n    }\n    return this.transitionStarts_[id] !== -1;\n  }\n\n  /**\n   * Mark a transition as complete.\n   * @param {string} id An id for the renderer.\n   */\n  endTransition(id) {\n    if (this.transition_) {\n      this.transitionStarts_[id] = -1;\n    }\n  }\n}\n\nexport default Tile;\n","/**\n * @module ol/TileRange\n */\n\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nclass TileRange {\n  /**\n   * @param {number} minX Minimum X.\n   * @param {number} maxX Maximum X.\n   * @param {number} minY Minimum Y.\n   * @param {number} maxY Maximum Y.\n   */\n  constructor(minX, maxX, minY, maxY) {\n    /**\n     * @type {number}\n     */\n    this.minX = minX;\n\n    /**\n     * @type {number}\n     */\n    this.maxX = maxX;\n\n    /**\n     * @type {number}\n     */\n    this.minY = minY;\n\n    /**\n     * @type {number}\n     */\n    this.maxY = maxY;\n  }\n\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {boolean} Contains tile coordinate.\n   */\n  contains(tileCoord) {\n    return this.containsXY(tileCoord[1], tileCoord[2]);\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Contains.\n   */\n  containsTileRange(tileRange) {\n    return (\n      this.minX <= tileRange.minX &&\n      tileRange.maxX <= this.maxX &&\n      this.minY <= tileRange.minY &&\n      tileRange.maxY <= this.maxY\n    );\n  }\n\n  /**\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @return {boolean} Contains coordinate.\n   */\n  containsXY(x, y) {\n    return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Equals.\n   */\n  equals(tileRange) {\n    return (\n      this.minX == tileRange.minX &&\n      this.minY == tileRange.minY &&\n      this.maxX == tileRange.maxX &&\n      this.maxY == tileRange.maxY\n    );\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   */\n  extend(tileRange) {\n    if (tileRange.minX < this.minX) {\n      this.minX = tileRange.minX;\n    }\n    if (tileRange.maxX > this.maxX) {\n      this.maxX = tileRange.maxX;\n    }\n    if (tileRange.minY < this.minY) {\n      this.minY = tileRange.minY;\n    }\n    if (tileRange.maxY > this.maxY) {\n      this.maxY = tileRange.maxY;\n    }\n  }\n\n  /**\n   * @return {number} Height.\n   */\n  getHeight() {\n    return this.maxY - this.minY + 1;\n  }\n\n  /**\n   * @return {import(\"./size.js\").Size} Size.\n   */\n  getSize() {\n    return [this.getWidth(), this.getHeight()];\n  }\n\n  /**\n   * @return {number} Width.\n   */\n  getWidth() {\n    return this.maxX - this.minX + 1;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Intersects.\n   */\n  intersects(tileRange) {\n    return (\n      this.minX <= tileRange.maxX &&\n      this.maxX >= tileRange.minX &&\n      this.minY <= tileRange.maxY &&\n      this.maxY >= tileRange.minY\n    );\n  }\n}\n\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange} [tileRange] TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  }\n  return new TileRange(minX, maxX, minY, maxY);\n}\n\nexport default TileRange;\n","/**\n * @module ol/TileState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  /**\n   * Indicates that tile loading failed\n   * @type {number}\n   */\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/ViewProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CENTER: 'center',\n  RESOLUTION: 'resolution',\n  ROTATION: 'rotation',\n};\n","/**\n * @module ol/centerconstraint\n */\nimport {clamp} from './math.js';\n\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=, Array<number>=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\n * (only during interaction and animation).\n * @return {Type} The constraint.\n */\nexport function createExtent(extent, onlyCenter, smooth) {\n  return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n     * @param {number|undefined} resolution Resolution.\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @param {Array<number>} [centerShift] Shift between map center and viewport center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function (center, resolution, size, isMoving, centerShift) {\n      if (!center) {\n        return undefined;\n      }\n      if (!resolution && !onlyCenter) {\n        return center;\n      }\n      const viewWidth = onlyCenter ? 0 : size[0] * resolution;\n      const viewHeight = onlyCenter ? 0 : size[1] * resolution;\n      const shiftX = centerShift ? centerShift[0] : 0;\n      const shiftY = centerShift ? centerShift[1] : 0;\n      let minX = extent[0] + viewWidth / 2 + shiftX;\n      let maxX = extent[2] - viewWidth / 2 + shiftX;\n      let minY = extent[1] + viewHeight / 2 + shiftY;\n      let maxY = extent[3] - viewHeight / 2 + shiftY;\n\n      // note: when zooming out of bounds, min and max values for x and y may\n      // end up inverted (min > max); this has to be accounted for\n      if (minX > maxX) {\n        minX = (maxX + minX) / 2;\n        maxX = minX;\n      }\n      if (minY > maxY) {\n        minY = (maxY + minY) / 2;\n        maxY = minY;\n      }\n\n      let x = clamp(center[0], minX, maxX);\n      let y = clamp(center[1], minY, maxY);\n\n      // during an interaction, allow some overscroll\n      if (isMoving && smooth && resolution) {\n        const ratio = 30 * resolution;\n        x +=\n          -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\n        y +=\n          -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\n      }\n\n      return [x, y];\n    }\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} [center] Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n","/**\n * @module ol/resolutionconstraint\n */\nimport {clamp} from './math.js';\nimport {getHeight, getWidth} from './extent.js';\nimport {linearFindNearest} from './array.js';\n\n/**\n * @typedef {function((number|undefined), number, import(\"./size.js\").Size, boolean=): (number|undefined)} Type\n */\n\n/**\n * Returns a modified resolution taking into account the viewport size and maximum\n * allowed extent.\n * @param {number} resolution Resolution\n * @param {import(\"./extent.js\").Extent} maxExtent Maximum allowed extent.\n * @param {import(\"./size.js\").Size} viewportSize Viewport size.\n * @param {boolean} showFullExtent Whether to show the full extent.\n * @return {number} Capped resolution.\n */\nfunction getViewportClampedResolution(\n  resolution,\n  maxExtent,\n  viewportSize,\n  showFullExtent\n) {\n  const xResolution = getWidth(maxExtent) / viewportSize[0];\n  const yResolution = getHeight(maxExtent) / viewportSize[1];\n\n  if (showFullExtent) {\n    return Math.min(resolution, Math.max(xResolution, yResolution));\n  }\n  return Math.min(resolution, Math.min(xResolution, yResolution));\n}\n\n/**\n * Returns a modified resolution to be between maxResolution and minResolution while\n * still allowing the value to be slightly out of bounds.\n * Note: the computation is based on the logarithm function (ln):\n *  - at 1, ln(x) is 0\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\n * The final result is clamped to prevent getting too far away from bounds.\n * @param {number} resolution Resolution.\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @return {number} Smoothed resolution.\n */\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\n  let result = Math.min(resolution, maxResolution);\n  const ratio = 50;\n\n  result *=\n    Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio +\n    1;\n  if (minResolution) {\n    result = Math.max(result, minResolution);\n    result /=\n      Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) /\n        ratio +\n      1;\n  }\n  return clamp(result, minResolution / 2, maxResolution * 2);\n}\n\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(\n  resolutions,\n  smooth,\n  maxExtent,\n  showFullExtent\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const maxResolution = resolutions[0];\n        const minResolution = resolutions[resolutions.length - 1];\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const capped = Math.min(cappedMaxRes, resolution);\n        const z = Math.floor(linearFindNearest(resolutions, capped, direction));\n        if (resolutions[z] > cappedMaxRes && z < resolutions.length - 1) {\n          return resolutions[z + 1];\n        }\n        return resolutions[z];\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number} [minResolution] Minimum resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(\n  power,\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  minResolution = minResolution !== undefined ? minResolution : 0;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const tolerance = 1e-9;\n        const minZoomLevel = Math.ceil(\n          Math.log(maxResolution / cappedMaxRes) / Math.log(power) - tolerance\n        );\n        const offset = -direction * (0.5 - tolerance) + 0.5;\n        const capped = Math.min(cappedMaxRes, resolution);\n        const cappedZoomLevel = Math.floor(\n          Math.log(maxResolution / capped) / Math.log(power) + offset\n        );\n        const zoomLevel = Math.max(minZoomLevel, cappedZoomLevel);\n        const newResolution = maxResolution / Math.pow(power, zoomLevel);\n        return clamp(newResolution, minResolution, cappedMaxRes);\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createMinMaxResolution(\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent\n) {\n  smooth = smooth !== undefined ? smooth : true;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent\n            )\n          : maxResolution;\n\n        if (!smooth || !isMoving) {\n          return clamp(resolution, minResolution, cappedMaxRes);\n        }\n        return getSmoothClampedResolution(\n          resolution,\n          cappedMaxRes,\n          minResolution\n        );\n      }\n      return undefined;\n    }\n  );\n}\n","/**\n * @module ol/View\n */\nimport BaseObject from './Object.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport {DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {\n  METERS_PER_UNIT,\n  createProjection,\n  disableCoordinateWarning,\n  fromUserCoordinate,\n  fromUserExtent,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from './proj.js';\nimport {VOID} from './functions.js';\nimport {\n  add as addCoordinate,\n  equals as coordinatesEqual,\n  equals,\n  rotate as rotateCoordinate,\n} from './coordinate.js';\nimport {assert} from './asserts.js';\nimport {none as centerNone, createExtent} from './centerconstraint.js';\nimport {clamp, modulo} from './math.js';\nimport {\n  createMinMaxResolution,\n  createSnapToPower,\n  createSnapToResolutions,\n} from './resolutionconstraint.js';\nimport {\n  createSnapToN,\n  createSnapToZero,\n  disable,\n  none as rotationNone,\n} from './rotationconstraint.js';\nimport {easeOut, inAndOut} from './easing.js';\nimport {\n  getCenter,\n  getForViewAndSize,\n  getHeight,\n  getWidth,\n  isEmpty,\n} from './extent.js';\nimport {linearFindNearest} from './array.js';\nimport {fromExtent as polygonFromExtent} from './geom/Polygon.js';\n\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter] Source center.\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter] Target center.\n * @property {number} [sourceResolution] Source resolution.\n * @property {number} [targetResolution] Target resolution.\n * @property {number} [sourceRotation] Source rotation.\n * @property {number} [targetRotation] Target rotation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Anchor.\n * @property {number} start Start.\n * @property {number} duration Duration.\n * @property {boolean} complete Complete.\n * @property {function(number):number} easing Easing.\n * @property {function(boolean):void} callback Callback.\n */\n\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center Center.\n * @property {import(\"./resolutionconstraint.js\").Type} resolution Resolution.\n * @property {import(\"./rotationconstraint.js\").Type} rotation Rotation.\n */\n\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to fit\n * the extent into. Default is the current size of the first map in the DOM that\n * uses this view, or `[100, 100]` if no such map is found.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\n * get the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean):void} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. If a user projection is not set, the coordinate system for the center is\n * specified with the `projection` option. Layer sources will not be fetched if this\n * is not set, but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * view, in other words, nothing outside of this extent can be visible on the map.\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\n * constraint will only apply to the view center and not the whole extent.\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\n * of the given `extent`.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {boolean} [multiWorld=false] If `false` the view is constrained so\n * only one world is visible, and you cannot pan off the edge.  If `true` the map\n * may show multiple worlds at low zoom levels.  Only used if the `projection` is\n * global.  Note that if `extent` is also provided it is given precedence.\n * @property {boolean} [constrainResolution=false] If true, the view will always\n * animate to the closest zoom level after an interaction; false means\n * intermediary zoom levels are allowed.\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\n * the given resolution or zoom bounds.\n * @property {boolean} [showFullExtent=false] Allow the view to be zoomed out to\n * show the full configured extent. By default, when a view is configured with an\n * extent, users will not be able to zoom out so the viewport exceeds the extent in\n * either dimension. This means the full extent may not be visible if the viewport\n * is taller or wider than the aspect ratio of the configured extent. If\n * showFullExtent is true, the user will be able to zoom out so that the viewport\n * exceeds the height or width of the configured extent, but not both, allowing the\n * full extent to be shown.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions that determine the\n * zoom levels if specified. The index in the array corresponds to the zoom level,\n * therefore the resolution values have to be in descending order. It also constrains\n * the resolution by the minimum and maximum value. If set the `maxResolution`,\n * `minResolution`, `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view.\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\n * corresponding resolution.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in css pixels).\n * If the map viewport is partially covered with other content (overlays) along\n * its edges, this setting allows to shift the center of the viewport away from\n * that content. The order of the values is top, right, bottom, left.\n */\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remain fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center Center (in view projection coordinates).\n * @property {import(\"./proj/Projection.js\").default} projection Projection.\n * @property {number} resolution Resolution.\n * @property {import(\"./coordinate.js\").Coordinate} [nextCenter] The next center during an animation series.\n * @property {number} [nextResolution] The next resolution during an animation series.\n * @property {number} [nextRotation] The next rotation during an animation series.\n * @property {number} rotation Rotation.\n * @property {number} zoom Zoom.\n */\n\n/**\n * Like {@link import(\"./Map.js\").FrameState}, but just `viewState` and `extent`.\n * @typedef {Object} ViewStateLayerStateExtent\n * @property {State} viewState View state.\n * @property {import(\"./extent.js\").Extent} extent Extent (in user projection coordinates).\n * @property {Array<import(\"./layer/Layer.js\").State>} [layerStatesArray] Layer states.\n */\n\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nconst DEFAULT_MIN_ZOOM = 0;\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:center'|'change:resolution'|'change:rotation'} ViewObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<ViewObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|ViewObjectEventTypes, Return>} ViewOnSignature\n */\n\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * A View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Web Mercator (EPSG:3857).\n *\n * ### The view states\n *\n * A View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * The `zoom` state is actually not saved on the view: all computations\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\n * methods are available, as well as `getResolutionForZoom` and\n * `getZoomForResolution` to switch from one system to the other.\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view, but any constraint defined in the constructor will\n * be applied along the way.\n *\n * A View object can have a *resolution constraint*, a *rotation constraint*\n * and a *center constraint*.\n *\n * The *resolution constraint* typically restricts min/max values and\n * snaps to specific resolutions. It is determined by the following\n * options: `resolutions`, `maxResolution`, `maxZoom` and `zoomFactor`.\n * If `resolutions` is set, the other three options are ignored. See\n * documentation for each option for more information. By default, the view\n * only has a min/max restriction and allow intermediary zoom levels when\n * pinch-zooming for example.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default rotation is allowed and its value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the view center is not constrained at all.\n *\n * ### Changing the view state\n *\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\n * `setRotation` are subject to the above mentioned constraints. As such, it\n * may sometimes not be possible to know in advance the resulting state of the\n * View. For example, calling `setResolution(10)` does not guarantee that\n * `getResolution()` will return `10`.\n *\n * A consequence of this is that, when applying a delta on the view state, one\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\n * rather than the corresponding setters. This will let view do its internal\n * computations. Besides, the `adjust*` methods also take an `anchor`\n * argument which allows specifying an origin for the transformation.\n *\n * ### Interacting with the view\n *\n * View constraints are usually only applied when the view is *at rest*, meaning that\n * no interaction or animation is ongoing. As such, if the user puts the view in a\n * state that is not equivalent to a constrained one (e.g. rotating the view when\n * the snap angle is 0), an animation will be triggered at the interaction end to\n * put back the view to a stable state;\n *\n * @api\n */\nclass View extends BaseObject {\n  /**\n   * @param {ViewOptions} [options] View options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ViewOnSignature<void>}\n     */\n    this.un;\n\n    options = Object.assign({}, options);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.hints_ = [0, 0];\n\n    /**\n     * @private\n     * @type {Array<Array<Animation>>}\n     */\n    this.animations_ = [];\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.updateAnimationKey_;\n\n    /**\n     * @private\n     * @const\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection_ = createProjection(options.projection, 'EPSG:3857');\n\n    /**\n     * @private\n     * @type {import(\"./size.js\").Size}\n     */\n    this.viewportSize_ = [100, 100];\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.targetCenter_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetResolution_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate}\n     */\n    this.nextCenter_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextResolution_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.cancelAnchor_ = undefined;\n\n    if (options.projection) {\n      disableCoordinateWarning();\n    }\n    if (options.center) {\n      options.center = fromUserCoordinate(options.center, this.projection_);\n    }\n    if (options.extent) {\n      options.extent = fromUserExtent(options.extent, this.projection_);\n    }\n\n    this.applyOptions_(options);\n  }\n\n  /**\n   * Set up the view with the given options.\n   * @param {ViewOptions} options View options.\n   */\n  applyOptions_(options) {\n    const properties = Object.assign({}, options);\n    for (const key in ViewProperty) {\n      delete properties[key];\n    }\n    this.setProperties(properties, true);\n\n    const resolutionConstraintInfo = createResolutionConstraint(options);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minResolution_ = resolutionConstraintInfo.minResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n\n    /**\n     * @private\n     * @type {Array<number>|undefined}\n     */\n    this.resolutions_ = options.resolutions;\n\n    /**\n     * @type {Array<number>|undefined}\n     * @private\n     */\n    this.padding_ = options.padding;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minZoom_ = resolutionConstraintInfo.minZoom;\n\n    const centerConstraint = createCenterConstraint(options);\n    const resolutionConstraint = resolutionConstraintInfo.constraint;\n    const rotationConstraint = createRotationConstraint(options);\n\n    /**\n     * @private\n     * @type {Constraints}\n     */\n    this.constraints_ = {\n      center: centerConstraint,\n      resolution: resolutionConstraint,\n      rotation: rotationConstraint,\n    };\n\n    this.setRotation(options.rotation !== undefined ? options.rotation : 0);\n    this.setCenterInternal(\n      options.center !== undefined ? options.center : null\n    );\n    if (options.resolution !== undefined) {\n      this.setResolution(options.resolution);\n    } else if (options.zoom !== undefined) {\n      this.setZoom(options.zoom);\n    }\n  }\n\n  /**\n   * Padding (in css pixels).\n   * If the map viewport is partially covered with other content (overlays) along\n   * its edges, this setting allows to shift the center of the viewport away from that\n   * content. The order of the values in the array is top, right, bottom, left.\n   * The default is no padding, which is equivalent to `[0, 0, 0, 0]`.\n   * @type {Array<number>|undefined}\n   * @api\n   */\n  get padding() {\n    return this.padding_;\n  }\n  set padding(padding) {\n    let oldPadding = this.padding_;\n    this.padding_ = padding;\n    const center = this.getCenterInternal();\n    if (center) {\n      const newPadding = padding || [0, 0, 0, 0];\n      oldPadding = oldPadding || [0, 0, 0, 0];\n      const resolution = this.getResolution();\n      const offsetX =\n        (resolution / 2) *\n        (newPadding[3] - oldPadding[3] + oldPadding[1] - newPadding[1]);\n      const offsetY =\n        (resolution / 2) *\n        (newPadding[0] - oldPadding[0] + oldPadding[2] - newPadding[2]);\n      this.setCenterInternal([center[0] + offsetX, center[1] - offsetY]);\n    }\n  }\n\n  /**\n   * Get an updated version of the view options used to construct the view.  The\n   * current resolution (or zoom), center, and rotation are applied to any stored\n   * options.  The provided options can be used to apply new min/max zoom or\n   * resolution limits.\n   * @param {ViewOptions} newOptions New options to be applied.\n   * @return {ViewOptions} New options updated with the current view state.\n   */\n  getUpdatedOptions_(newOptions) {\n    const options = this.getProperties();\n\n    // preserve resolution (or zoom)\n    if (options.resolution !== undefined) {\n      options.resolution = this.getResolution();\n    } else {\n      options.zoom = this.getZoom();\n    }\n\n    // preserve center\n    options.center = this.getCenterInternal();\n\n    // preserve rotation\n    options.rotation = this.getRotation();\n\n    return Object.assign({}, options, newOptions);\n  }\n\n  /**\n   * Animate the view.  The view's center, zoom (or resolution), and rotation\n   * can be animated for smooth transitions between view states.  For example,\n   * to animate the view to a new zoom level:\n   *\n   *     view.animate({zoom: view.getZoom() + 1});\n   *\n   * By default, the animation lasts one second and uses in-and-out easing.  You\n   * can customize this behavior by including `duration` (in milliseconds) and\n   * `easing` options (see {@link module:ol/easing}).\n   *\n   * To chain together multiple animations, call the method with multiple\n   * animation objects.  For example, to first zoom and then pan:\n   *\n   *     view.animate({zoom: 10}, {center: [0, 0]});\n   *\n   * If you provide a function as the last argument to the animate method, it\n   * will get called at the end of an animation series.  The callback will be\n   * called with `true` if the animation series completed on its own or `false`\n   * if it was cancelled.\n   *\n   * Animations are cancelled by user interactions (e.g. dragging the map) or by\n   * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n   * (or another method that calls one of these).\n   *\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\n   *     options.  Multiple animations can be run in series by passing multiple\n   *     options objects.  To run multiple animations in parallel, call the method\n   *     multiple times.  An optional callback can be provided as a final\n   *     argument.  The callback will be called with a boolean indicating whether\n   *     the animation completed without being cancelled.\n   * @api\n   */\n  animate(var_args) {\n    if (this.isDef() && !this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n    const args = new Array(arguments.length);\n    for (let i = 0; i < args.length; ++i) {\n      let options = arguments[i];\n      if (options.center) {\n        options = Object.assign({}, options);\n        options.center = fromUserCoordinate(\n          options.center,\n          this.getProjection()\n        );\n      }\n      if (options.anchor) {\n        options = Object.assign({}, options);\n        options.anchor = fromUserCoordinate(\n          options.anchor,\n          this.getProjection()\n        );\n      }\n      args[i] = options;\n    }\n    this.animateInternal.apply(this, args);\n  }\n\n  /**\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\n   */\n  animateInternal(var_args) {\n    let animationCount = arguments.length;\n    let callback;\n    if (\n      animationCount > 1 &&\n      typeof arguments[animationCount - 1] === 'function'\n    ) {\n      callback = arguments[animationCount - 1];\n      --animationCount;\n    }\n\n    let i = 0;\n    for (; i < animationCount && !this.isDef(); ++i) {\n      // if view properties are not yet set, shortcut to the final state\n      const state = arguments[i];\n      if (state.center) {\n        this.setCenterInternal(state.center);\n      }\n      if (state.zoom !== undefined) {\n        this.setZoom(state.zoom);\n      } else if (state.resolution) {\n        this.setResolution(state.resolution);\n      }\n      if (state.rotation !== undefined) {\n        this.setRotation(state.rotation);\n      }\n    }\n    if (i === animationCount) {\n      if (callback) {\n        animationCallback(callback, true);\n      }\n      return;\n    }\n\n    let start = Date.now();\n    let center = this.targetCenter_.slice();\n    let resolution = this.targetResolution_;\n    let rotation = this.targetRotation_;\n    const series = [];\n    for (; i < animationCount; ++i) {\n      const options = /** @type {AnimationOptions} */ (arguments[i]);\n\n      const animation = {\n        start: start,\n        complete: false,\n        anchor: options.anchor,\n        duration: options.duration !== undefined ? options.duration : 1000,\n        easing: options.easing || inAndOut,\n        callback: callback,\n      };\n\n      if (options.center) {\n        animation.sourceCenter = center;\n        animation.targetCenter = options.center.slice();\n        center = animation.targetCenter;\n      }\n\n      if (options.zoom !== undefined) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = this.getResolutionForZoom(options.zoom);\n        resolution = animation.targetResolution;\n      } else if (options.resolution) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = options.resolution;\n        resolution = animation.targetResolution;\n      }\n\n      if (options.rotation !== undefined) {\n        animation.sourceRotation = rotation;\n        const delta =\n          modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n        animation.targetRotation = rotation + delta;\n        rotation = animation.targetRotation;\n      }\n\n      // check if animation is a no-op\n      if (isNoopAnimation(animation)) {\n        animation.complete = true;\n        // we still push it onto the series for callback handling\n      } else {\n        start += animation.duration;\n      }\n      series.push(animation);\n    }\n    this.animations_.push(series);\n    this.setHint(ViewHint.ANIMATING, 1);\n    this.updateAnimations_();\n  }\n\n  /**\n   * Determine if the view is being animated.\n   * @return {boolean} The view is being animated.\n   * @api\n   */\n  getAnimating() {\n    return this.hints_[ViewHint.ANIMATING] > 0;\n  }\n\n  /**\n   * Determine if the user is interacting with the view, such as panning or zooming.\n   * @return {boolean} The view is being interacted with.\n   * @api\n   */\n  getInteracting() {\n    return this.hints_[ViewHint.INTERACTING] > 0;\n  }\n\n  /**\n   * Cancel any ongoing animations.\n   * @api\n   */\n  cancelAnimations() {\n    this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n    let anchor;\n    for (let i = 0, ii = this.animations_.length; i < ii; ++i) {\n      const series = this.animations_[i];\n      if (series[0].callback) {\n        animationCallback(series[0].callback, false);\n      }\n      if (!anchor) {\n        for (let j = 0, jj = series.length; j < jj; ++j) {\n          const animation = series[j];\n          if (!animation.complete) {\n            anchor = animation.anchor;\n            break;\n          }\n        }\n      }\n    }\n    this.animations_.length = 0;\n    this.cancelAnchor_ = anchor;\n    this.nextCenter_ = null;\n    this.nextResolution_ = NaN;\n    this.nextRotation_ = NaN;\n  }\n\n  /**\n   * Update all animations.\n   */\n  updateAnimations_() {\n    if (this.updateAnimationKey_ !== undefined) {\n      cancelAnimationFrame(this.updateAnimationKey_);\n      this.updateAnimationKey_ = undefined;\n    }\n    if (!this.getAnimating()) {\n      return;\n    }\n    const now = Date.now();\n    let more = false;\n    for (let i = this.animations_.length - 1; i >= 0; --i) {\n      const series = this.animations_[i];\n      let seriesComplete = true;\n      for (let j = 0, jj = series.length; j < jj; ++j) {\n        const animation = series[j];\n        if (animation.complete) {\n          continue;\n        }\n        const elapsed = now - animation.start;\n        let fraction =\n          animation.duration > 0 ? elapsed / animation.duration : 1;\n        if (fraction >= 1) {\n          animation.complete = true;\n          fraction = 1;\n        } else {\n          seriesComplete = false;\n        }\n        const progress = animation.easing(fraction);\n        if (animation.sourceCenter) {\n          const x0 = animation.sourceCenter[0];\n          const y0 = animation.sourceCenter[1];\n          const x1 = animation.targetCenter[0];\n          const y1 = animation.targetCenter[1];\n          this.nextCenter_ = animation.targetCenter;\n          const x = x0 + progress * (x1 - x0);\n          const y = y0 + progress * (y1 - y0);\n          this.targetCenter_ = [x, y];\n        }\n        if (animation.sourceResolution && animation.targetResolution) {\n          const resolution =\n            progress === 1\n              ? animation.targetResolution\n              : animation.sourceResolution +\n                progress *\n                  (animation.targetResolution - animation.sourceResolution);\n          if (animation.anchor) {\n            const size = this.getViewportSize_(this.getRotation());\n            const constrainedResolution = this.constraints_.resolution(\n              resolution,\n              0,\n              size,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterZoom(\n              constrainedResolution,\n              animation.anchor\n            );\n          }\n          this.nextResolution_ = animation.targetResolution;\n          this.targetResolution_ = resolution;\n          this.applyTargetState_(true);\n        }\n        if (\n          animation.sourceRotation !== undefined &&\n          animation.targetRotation !== undefined\n        ) {\n          const rotation =\n            progress === 1\n              ? modulo(animation.targetRotation + Math.PI, 2 * Math.PI) -\n                Math.PI\n              : animation.sourceRotation +\n                progress *\n                  (animation.targetRotation - animation.sourceRotation);\n          if (animation.anchor) {\n            const constrainedRotation = this.constraints_.rotation(\n              rotation,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterRotate(\n              constrainedRotation,\n              animation.anchor\n            );\n          }\n          this.nextRotation_ = animation.targetRotation;\n          this.targetRotation_ = rotation;\n        }\n        this.applyTargetState_(true);\n        more = true;\n        if (!animation.complete) {\n          break;\n        }\n      }\n      if (seriesComplete) {\n        this.animations_[i] = null;\n        this.setHint(ViewHint.ANIMATING, -1);\n        this.nextCenter_ = null;\n        this.nextResolution_ = NaN;\n        this.nextRotation_ = NaN;\n        const callback = series[0].callback;\n        if (callback) {\n          animationCallback(callback, true);\n        }\n      }\n    }\n    // prune completed series\n    this.animations_ = this.animations_.filter(Boolean);\n    if (more && this.updateAnimationKey_ === undefined) {\n      this.updateAnimationKey_ = requestAnimationFrame(\n        this.updateAnimations_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n   */\n  calculateCenterRotate(rotation, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    if (currentCenter !== undefined) {\n      center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n      rotateCoordinate(center, rotation - this.getRotation());\n      addCoordinate(center, anchor);\n    }\n    return center;\n  }\n\n  /**\n   * @param {number} resolution Target resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n   */\n  calculateCenterZoom(resolution, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    const currentResolution = this.getResolution();\n    if (currentCenter !== undefined && currentResolution !== undefined) {\n      const x =\n        anchor[0] -\n        (resolution * (anchor[0] - currentCenter[0])) / currentResolution;\n      const y =\n        anchor[1] -\n        (resolution * (anchor[1] - currentCenter[1])) / currentResolution;\n      center = [x, y];\n    }\n    return center;\n  }\n\n  /**\n   * Returns the current viewport size.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n   */\n  getViewportSize_(rotation) {\n    const size = this.viewportSize_;\n    if (rotation) {\n      const w = size[0];\n      const h = size[1];\n      return [\n        Math.abs(w * Math.cos(rotation)) + Math.abs(h * Math.sin(rotation)),\n        Math.abs(w * Math.sin(rotation)) + Math.abs(h * Math.cos(rotation)),\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * Stores the viewport size on the view. The viewport size is not read every time from the DOM\n   * to avoid performance hit and layout reflow.\n   * This should be done on map size change.\n   * Note: the constraints are not resolved during an animation to avoid stopping it\n   * @param {import(\"./size.js\").Size} [size] Viewport size; if undefined, [100, 100] is assumed\n   */\n  setViewportSize(size) {\n    this.viewportSize_ = Array.isArray(size) ? size.slice() : [100, 100];\n    if (!this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n  }\n\n  /**\n   * Get the view center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   * @observable\n   * @api\n   */\n  getCenter() {\n    const center = this.getCenterInternal();\n    if (!center) {\n      return center;\n    }\n    return toUserCoordinate(center, this.getProjection());\n  }\n\n  /**\n   * Get the view center without transforming to user projection.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   */\n  getCenterInternal() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(ViewProperty.CENTER)\n    );\n  }\n\n  /**\n   * @return {Constraints} Constraints.\n   */\n  getConstraints() {\n    return this.constraints_;\n  }\n\n  /**\n   * @return {boolean} Resolution constraint is set\n   */\n  getConstrainResolution() {\n    return this.get('constrainResolution');\n  }\n\n  /**\n   * @param {Array<number>} [hints] Destination array.\n   * @return {Array<number>} Hint.\n   */\n  getHints(hints) {\n    if (hints !== undefined) {\n      hints[0] = this.hints_[0];\n      hints[1] = this.hints_[1];\n      return hints;\n    }\n    return this.hints_.slice();\n  }\n\n  /**\n   * Calculate the extent for the current view state and the passed size.\n   * The size is the pixel dimensions of the box into which the calculated extent\n   * should fit. In most cases you want to get the extent of the entire map,\n   * that is `map.getSize()`.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size. If not provided, the size\n   * of the map that uses this view will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   * @api\n   */\n  calculateExtent(size) {\n    const extent = this.calculateExtentInternal(size);\n    return toUserExtent(extent, this.getProjection());\n  }\n\n  /**\n   * @param {import(\"./size.js\").Size} [size] Box pixel size. If not provided,\n   * the map's last known viewport size will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  calculateExtentInternal(size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    assert(center, 'The view center is not defined');\n    const resolution = /** @type {!number} */ (this.getResolution());\n    assert(resolution !== undefined, 'The view resolution is not defined');\n    const rotation = /** @type {!number} */ (this.getRotation());\n    assert(rotation !== undefined, 'The view rotation is not defined');\n\n    return getForViewAndSize(center, resolution, rotation, size);\n  }\n\n  /**\n   * Get the maximum resolution of the view.\n   * @return {number} The maximum resolution of the view.\n   * @api\n   */\n  getMaxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * Get the minimum resolution of the view.\n   * @return {number} The minimum resolution of the view.\n   * @api\n   */\n  getMinResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * Get the maximum zoom level for the view.\n   * @return {number} The maximum zoom level.\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.minResolution_)\n    );\n  }\n\n  /**\n   * Set a new maximum zoom level for the view.\n   * @param {number} zoom The maximum zoom level.\n   * @api\n   */\n  setMaxZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\n  }\n\n  /**\n   * Get the minimum zoom level for the view.\n   * @return {number} The minimum zoom level.\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.maxResolution_)\n    );\n  }\n\n  /**\n   * Set a new minimum zoom level for the view.\n   * @param {number} zoom The minimum zoom level.\n   * @api\n   */\n  setMinZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\n  }\n\n  /**\n   * Set whether the view should allow intermediary zoom levels.\n   * @param {boolean} enabled Whether the resolution is constrained.\n   * @api\n   */\n  setConstrainResolution(enabled) {\n    this.applyOptions_(this.getUpdatedOptions_({constrainResolution: enabled}));\n  }\n\n  /**\n   * Get the view projection.\n   * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n   * @api\n   */\n  getProjection() {\n    return this.projection_;\n  }\n\n  /**\n   * Get the view resolution.\n   * @return {number|undefined} The resolution of the view.\n   * @observable\n   * @api\n   */\n  getResolution() {\n    return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n  }\n\n  /**\n   * Get the resolutions for the view. This returns the array of resolutions\n   * passed to the constructor of the View, or undefined if none were given.\n   * @return {Array<number>|undefined} The resolutions of the view.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   * @api\n   */\n  getResolutionForExtent(extent, size) {\n    return this.getResolutionForExtentInternal(\n      fromUserExtent(extent, this.getProjection()),\n      size\n    );\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   */\n  getResolutionForExtentInternal(extent, size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const xResolution = getWidth(extent) / size[0];\n    const yResolution = getHeight(extent) / size[1];\n    return Math.max(xResolution, yResolution);\n  }\n\n  /**\n   * Return a function that returns a value between 0 and 1 for a\n   * resolution. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Resolution for value function.\n   */\n  getResolutionForValueFunction(power) {\n    power = power || 2;\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} value Value.\n       * @return {number} Resolution.\n       */\n      function (value) {\n        const resolution = maxResolution / Math.pow(power, value * max);\n        return resolution;\n      }\n    );\n  }\n\n  /**\n   * Get the view rotation.\n   * @return {number} The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  getRotation() {\n    return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n  }\n\n  /**\n   * Return a function that returns a resolution for a value between\n   * 0 and 1. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Value for resolution function.\n   */\n  getValueForResolutionFunction(power) {\n    const logPower = Math.log(power || 2);\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / logPower;\n    return (\n      /**\n       * @param {number} resolution Resolution.\n       * @return {number} Value.\n       */\n      function (resolution) {\n        const value = Math.log(maxResolution / resolution) / logPower / max;\n        return value;\n      }\n    );\n  }\n\n  /**\n   * Returns the size of the viewport minus padding.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size reduced by the padding.\n   */\n  getViewportSizeMinusPadding_(rotation) {\n    let size = this.getViewportSize_(rotation);\n    const padding = this.padding_;\n    if (padding) {\n      size = [\n        size[0] - padding[1] - padding[3],\n        size[1] - padding[0] - padding[2],\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * @return {State} View state.\n   */\n  getState() {\n    const projection = this.getProjection();\n    const resolution = this.getResolution();\n    const rotation = this.getRotation();\n    let center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    const padding = this.padding_;\n    if (padding) {\n      const reducedSize = this.getViewportSizeMinusPadding_();\n      center = calculateCenterOn(\n        center,\n        this.getViewportSize_(),\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n    }\n    return {\n      center: center.slice(0),\n      projection: projection !== undefined ? projection : null,\n      resolution: resolution,\n      nextCenter: this.nextCenter_,\n      nextResolution: this.nextResolution_,\n      nextRotation: this.nextRotation_,\n      rotation: rotation,\n      zoom: this.getZoom(),\n    };\n  }\n\n  /**\n   * @return {ViewStateLayerStateExtent} Like `FrameState`, but just `viewState` and `extent`.\n   */\n  getViewStateAndExtent() {\n    return {\n      viewState: this.getState(),\n      extent: this.calculateExtent(),\n    };\n  }\n\n  /**\n   * Get the current zoom level. This method may return non-integer zoom levels\n   * if the view does not constrain the resolution, or if an interaction or\n   * animation is underway.\n   * @return {number|undefined} Zoom.\n   * @api\n   */\n  getZoom() {\n    let zoom;\n    const resolution = this.getResolution();\n    if (resolution !== undefined) {\n      zoom = this.getZoomForResolution(resolution);\n    }\n    return zoom;\n  }\n\n  /**\n   * Get the zoom level for a resolution.\n   * @param {number} resolution The resolution.\n   * @return {number|undefined} The zoom level for the provided resolution.\n   * @api\n   */\n  getZoomForResolution(resolution) {\n    let offset = this.minZoom_ || 0;\n    let max, zoomFactor;\n    if (this.resolutions_) {\n      const nearest = linearFindNearest(this.resolutions_, resolution, 1);\n      offset = nearest;\n      max = this.resolutions_[nearest];\n      if (nearest == this.resolutions_.length - 1) {\n        zoomFactor = 2;\n      } else {\n        zoomFactor = max / this.resolutions_[nearest + 1];\n      }\n    } else {\n      max = this.maxResolution_;\n      zoomFactor = this.zoomFactor_;\n    }\n    return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n  }\n\n  /**\n   * Get the resolution for a zoom level.\n   * @param {number} zoom Zoom level.\n   * @return {number} The view resolution for the provided zoom level.\n   * @api\n   */\n  getResolutionForZoom(zoom) {\n    if (this.resolutions_) {\n      if (this.resolutions_.length <= 1) {\n        return 0;\n      }\n      const baseLevel = clamp(\n        Math.floor(zoom),\n        0,\n        this.resolutions_.length - 2\n      );\n      const zoomFactor =\n        this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\n      return (\n        this.resolutions_[baseLevel] /\n        Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1))\n      );\n    }\n    return (\n      this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_)\n    );\n  }\n\n  /**\n   * Fit the given geometry or extent based on the given map size and border.\n   * The size is pixel dimensions of the box to fit the extent into.\n   * In most cases you will want to use the map size, that is `map.getSize()`.\n   * Takes care of the map angle.\n   * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n   *     extent to fit the view to.\n   * @param {FitOptions} [options] Options.\n   * @api\n   */\n  fit(geometryOrExtent, options) {\n    /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n    let geometry;\n    assert(\n      Array.isArray(geometryOrExtent) ||\n        typeof (/** @type {?} */ (geometryOrExtent).getSimplifiedGeometry) ===\n          'function',\n      'Invalid extent or geometry provided as `geometry`'\n    );\n    if (Array.isArray(geometryOrExtent)) {\n      assert(\n        !isEmpty(geometryOrExtent),\n        'Cannot fit empty extent provided as `geometry`'\n      );\n      const extent = fromUserExtent(geometryOrExtent, this.getProjection());\n      geometry = polygonFromExtent(extent);\n    } else if (geometryOrExtent.getType() === 'Circle') {\n      const extent = fromUserExtent(\n        geometryOrExtent.getExtent(),\n        this.getProjection()\n      );\n      geometry = polygonFromExtent(extent);\n      geometry.rotate(this.getRotation(), getCenter(extent));\n    } else {\n      const userProjection = getUserProjection();\n      if (userProjection) {\n        geometry = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n          geometryOrExtent\n            .clone()\n            .transform(userProjection, this.getProjection())\n        );\n      } else {\n        geometry = geometryOrExtent;\n      }\n    }\n\n    this.fitInternal(geometry, options);\n  }\n\n  /**\n   * Calculate rotated extent\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @return {import(\"./extent\").Extent} The rotated extent for the geometry.\n   */\n  rotatedExtentForGeometry(geometry) {\n    const rotation = this.getRotation();\n    const cosAngle = Math.cos(rotation);\n    const sinAngle = Math.sin(-rotation);\n    const coords = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    let minRotX = +Infinity;\n    let minRotY = +Infinity;\n    let maxRotX = -Infinity;\n    let maxRotY = -Infinity;\n    for (let i = 0, ii = coords.length; i < ii; i += stride) {\n      const rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n      const rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n      minRotX = Math.min(minRotX, rotX);\n      minRotY = Math.min(minRotY, rotY);\n      maxRotX = Math.max(maxRotX, rotX);\n      maxRotY = Math.max(maxRotY, rotY);\n    }\n    return [minRotX, minRotY, maxRotX, maxRotY];\n  }\n\n  /**\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @param {FitOptions} [options] Options.\n   */\n  fitInternal(geometry, options) {\n    options = options || {};\n    let size = options.size;\n    if (!size) {\n      size = this.getViewportSizeMinusPadding_();\n    }\n    const padding =\n      options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n    const nearest = options.nearest !== undefined ? options.nearest : false;\n    let minResolution;\n    if (options.minResolution !== undefined) {\n      minResolution = options.minResolution;\n    } else if (options.maxZoom !== undefined) {\n      minResolution = this.getResolutionForZoom(options.maxZoom);\n    } else {\n      minResolution = 0;\n    }\n\n    const rotatedExtent = this.rotatedExtentForGeometry(geometry);\n\n    // calculate resolution\n    let resolution = this.getResolutionForExtentInternal(rotatedExtent, [\n      size[0] - padding[1] - padding[3],\n      size[1] - padding[0] - padding[2],\n    ]);\n    resolution = isNaN(resolution)\n      ? minResolution\n      : Math.max(resolution, minResolution);\n    resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\n\n    // calculate center\n    const rotation = this.getRotation();\n    const sinAngle = Math.sin(rotation);\n    const cosAngle = Math.cos(rotation);\n    const centerRot = getCenter(rotatedExtent);\n    centerRot[0] += ((padding[1] - padding[3]) / 2) * resolution;\n    centerRot[1] += ((padding[0] - padding[2]) / 2) * resolution;\n    const centerX = centerRot[0] * cosAngle - centerRot[1] * sinAngle;\n    const centerY = centerRot[1] * cosAngle + centerRot[0] * sinAngle;\n    const center = this.getConstrainedCenter([centerX, centerY], resolution);\n    const callback = options.callback ? options.callback : VOID;\n\n    if (options.duration !== undefined) {\n      this.animateInternal(\n        {\n          resolution: resolution,\n          center: center,\n          duration: options.duration,\n          easing: options.easing,\n        },\n        callback\n      );\n    } else {\n      this.targetResolution_ = resolution;\n      this.targetCenter_ = center;\n      this.applyTargetState_(false, true);\n      animationCallback(callback, true);\n    }\n  }\n\n  /**\n   * Center on coordinate and view position.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   * @api\n   */\n  centerOn(coordinate, size, position) {\n    this.centerOnInternal(\n      fromUserCoordinate(coordinate, this.getProjection()),\n      size,\n      position\n    );\n  }\n\n  /**\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   */\n  centerOnInternal(coordinate, size, position) {\n    this.setCenterInternal(\n      calculateCenterOn(\n        coordinate,\n        size,\n        position,\n        this.getResolution(),\n        this.getRotation()\n      )\n    );\n  }\n\n  /**\n   * Calculates the shift between map and viewport center.\n   * @param {import(\"./coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {import(\"./size.js\").Size} size Size.\n   * @return {Array<number>|undefined} Center shift.\n   */\n  calculateCenterShift(center, resolution, rotation, size) {\n    let centerShift;\n    const padding = this.padding_;\n    if (padding && center) {\n      const reducedSize = this.getViewportSizeMinusPadding_(-rotation);\n      const shiftedCenter = calculateCenterOn(\n        center,\n        size,\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n      centerShift = [\n        center[0] - shiftedCenter[0],\n        center[1] - shiftedCenter[1],\n      ];\n    }\n    return centerShift;\n  }\n\n  /**\n   * @return {boolean} Is defined.\n   */\n  isDef() {\n    return !!this.getCenterInternal() && this.getResolution() !== undefined;\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   * @api\n   */\n  adjustCenter(deltaCoordinates) {\n    const center = toUserCoordinate(this.targetCenter_, this.getProjection());\n    this.setCenter([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   */\n  adjustCenterInternal(deltaCoordinates) {\n    const center = this.targetCenter_;\n    this.setCenterInternal([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustResolution(ratio, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.adjustResolutionInternal(ratio, anchor);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  adjustResolutionInternal(ratio, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const size = this.getViewportSize_(this.getRotation());\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_ * ratio,\n      0,\n      size,\n      isMoving\n    );\n\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterZoom(newResolution, anchor);\n    }\n\n    this.targetResolution_ *= ratio;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Adds a value to the view zoom level, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom level.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustZoom(delta, anchor) {\n    this.adjustResolution(Math.pow(this.zoomFactor_, -delta), anchor);\n  }\n\n  /**\n   * Adds a value to the view rotation, optionally using an anchor. Any rotation\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   * @api\n   */\n  adjustRotation(delta, anchor) {\n    if (anchor) {\n      anchor = fromUserCoordinate(anchor, this.getProjection());\n    }\n    this.adjustRotationInternal(delta, anchor);\n  }\n\n  /**\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   */\n  adjustRotationInternal(delta, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_ + delta,\n      isMoving\n    );\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterRotate(newRotation, anchor);\n    }\n    this.targetRotation_ += delta;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the center of the current view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   * @observable\n   * @api\n   */\n  setCenter(center) {\n    this.setCenterInternal(\n      center ? fromUserCoordinate(center, this.getProjection()) : center\n    );\n  }\n\n  /**\n   * Set the center using the view projection (not the user projection).\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   */\n  setCenterInternal(center) {\n    this.targetCenter_ = center;\n    this.applyTargetState_();\n  }\n\n  /**\n   * @param {import(\"./ViewHint.js\").default} hint Hint.\n   * @param {number} delta Delta.\n   * @return {number} New value.\n   */\n  setHint(hint, delta) {\n    this.hints_[hint] += delta;\n    this.changed();\n    return this.hints_[hint];\n  }\n\n  /**\n   * Set the resolution for this view. Any resolution constraint will apply.\n   * @param {number|undefined} resolution The resolution of the view.\n   * @observable\n   * @api\n   */\n  setResolution(resolution) {\n    this.targetResolution_ = resolution;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the rotation for this view. Any rotation constraint will apply.\n   * @param {number} rotation The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  setRotation(rotation) {\n    this.targetRotation_ = rotation;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Zoom to a specific zoom level. Any resolution constrain will apply.\n   * @param {number} zoom Zoom level.\n   * @api\n   */\n  setZoom(zoom) {\n    this.setResolution(this.getResolutionForZoom(zoom));\n  }\n\n  /**\n   * Recompute rotation/resolution/center based on target values.\n   * Note: we have to compute rotation first, then resolution and center considering that\n   * parameters can influence one another in case a view extent constraint is present.\n   * @param {boolean} [doNotCancelAnims] Do not cancel animations.\n   * @param {boolean} [forceMoving] Apply constraints as if the view is moving.\n   * @private\n   */\n  applyTargetState_(doNotCancelAnims, forceMoving) {\n    const isMoving =\n      this.getAnimating() || this.getInteracting() || forceMoving;\n\n    // compute rotation\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_,\n      isMoving\n    );\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      0,\n      size,\n      isMoving\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      isMoving,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (this.get(ViewProperty.ROTATION) !== newRotation) {\n      this.set(ViewProperty.ROTATION, newRotation);\n    }\n    if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\n      this.set(ViewProperty.RESOLUTION, newResolution);\n      this.set('zoom', this.getZoom(), true);\n    }\n    if (\n      !newCenter ||\n      !this.get(ViewProperty.CENTER) ||\n      !equals(this.get(ViewProperty.CENTER), newCenter)\n    ) {\n      this.set(ViewProperty.CENTER, newCenter);\n    }\n\n    if (this.getAnimating() && !doNotCancelAnims) {\n      this.cancelAnimations();\n    }\n    this.cancelAnchor_ = undefined;\n  }\n\n  /**\n   * If any constraints need to be applied, an animation will be triggered.\n   * This is typically done on interaction end.\n   * Note: calling this with a duration of 0 will apply the constrained values straight away,\n   * without animation.\n   * @param {number} [duration] The animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  resolveConstraints(duration, resolutionDirection, anchor) {\n    duration = duration !== undefined ? duration : 200;\n    const direction = resolutionDirection || 0;\n\n    const newRotation = this.constraints_.rotation(this.targetRotation_);\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      direction,\n      size\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      false,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (duration === 0 && !this.cancelAnchor_) {\n      this.targetResolution_ = newResolution;\n      this.targetRotation_ = newRotation;\n      this.targetCenter_ = newCenter;\n      this.applyTargetState_();\n      return;\n    }\n\n    anchor = anchor || (duration === 0 ? this.cancelAnchor_ : undefined);\n    this.cancelAnchor_ = undefined;\n\n    if (\n      this.getResolution() !== newResolution ||\n      this.getRotation() !== newRotation ||\n      !this.getCenterInternal() ||\n      !equals(this.getCenterInternal(), newCenter)\n    ) {\n      if (this.getAnimating()) {\n        this.cancelAnimations();\n      }\n\n      this.animateInternal({\n        rotation: newRotation,\n        center: newCenter,\n        resolution: newResolution,\n        duration: duration,\n        easing: easeOut,\n        anchor: anchor,\n      });\n    }\n  }\n\n  /**\n   * Notify the View that an interaction has started.\n   * The view state will be resolved to a stable one if needed\n   * (depending on its constraints).\n   * @api\n   */\n  beginInteraction() {\n    this.resolveConstraints(0);\n\n    this.setHint(ViewHint.INTERACTING, 1);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  endInteraction(duration, resolutionDirection, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.endInteractionInternal(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  endInteractionInternal(duration, resolutionDirection, anchor) {\n    if (!this.getInteracting()) {\n      return;\n    }\n    this.setHint(ViewHint.INTERACTING, -1);\n    this.resolveConstraints(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Get a valid position for the view center according to the current constraints.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} targetCenter Target center position.\n   * @param {number} [targetResolution] Target resolution. If not supplied, the current one will be used.\n   * This is useful to guess a valid center position at a different zoom level.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Valid center position.\n   */\n  getConstrainedCenter(targetCenter, targetResolution) {\n    const size = this.getViewportSize_(this.getRotation());\n    return this.constraints_.center(\n      targetCenter,\n      targetResolution || this.getResolution(),\n      size\n    );\n  }\n\n  /**\n   * Get a valid zoom level according to the current view constraints.\n   * @param {number|undefined} targetZoom Target zoom.\n   * @param {number} [direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid zoom level.\n   */\n  getConstrainedZoom(targetZoom, direction) {\n    const targetRes = this.getResolutionForZoom(targetZoom);\n    return this.getZoomForResolution(\n      this.getConstrainedResolution(targetRes, direction)\n    );\n  }\n\n  /**\n   * Get a valid resolution according to the current view constraints.\n   * @param {number|undefined} targetResolution Target resolution.\n   * @param {number} [direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid resolution.\n   */\n  getConstrainedResolution(targetResolution, direction) {\n    direction = direction || 0;\n    const size = this.getViewportSize_(this.getRotation());\n\n    return this.constraints_.resolution(targetResolution, direction, size);\n  }\n}\n\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n  setTimeout(function () {\n    callback(returnValue);\n  }, 0);\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n  if (options.extent !== undefined) {\n    const smooth =\n      options.smoothExtentConstraint !== undefined\n        ? options.smoothExtentConstraint\n        : true;\n    return createExtent(options.extent, options.constrainOnlyCenter, smooth);\n  }\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  if (options.multiWorld !== true && projection.isGlobal()) {\n    const extent = projection.getExtent().slice();\n    extent[0] = -Infinity;\n    extent[2] = Infinity;\n    return createExtent(extent, false, false);\n  }\n\n  return centerNone;\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n  let resolutionConstraint;\n  let maxResolution;\n  let minResolution;\n\n  // TODO: move these to be ol constants\n  // see https://github.com/openlayers/openlayers/issues/2076\n  const defaultMaxZoom = 28;\n  const defaultZoomFactor = 2;\n\n  let minZoom =\n    options.minZoom !== undefined ? options.minZoom : DEFAULT_MIN_ZOOM;\n\n  let maxZoom =\n    options.maxZoom !== undefined ? options.maxZoom : defaultMaxZoom;\n\n  const zoomFactor =\n    options.zoomFactor !== undefined ? options.zoomFactor : defaultZoomFactor;\n\n  const multiWorld =\n    options.multiWorld !== undefined ? options.multiWorld : false;\n\n  const smooth =\n    options.smoothResolutionConstraint !== undefined\n      ? options.smoothResolutionConstraint\n      : true;\n\n  const showFullExtent =\n    options.showFullExtent !== undefined ? options.showFullExtent : false;\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  const projExtent = projection.getExtent();\n  let constrainOnlyCenter = options.constrainOnlyCenter;\n  let extent = options.extent;\n  if (!multiWorld && !extent && projection.isGlobal()) {\n    constrainOnlyCenter = false;\n    extent = projExtent;\n  }\n\n  if (options.resolutions !== undefined) {\n    const resolutions = options.resolutions;\n    maxResolution = resolutions[minZoom];\n    minResolution =\n      resolutions[maxZoom] !== undefined\n        ? resolutions[maxZoom]\n        : resolutions[resolutions.length - 1];\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToResolutions(\n        resolutions,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  } else {\n    // calculate the default min and max resolution\n    const size = !projExtent\n      ? // use an extent that can fit the whole world if need be\n        (360 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit()\n      : Math.max(getWidth(projExtent), getHeight(projExtent));\n\n    const defaultMaxResolution =\n      size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\n\n    const defaultMinResolution =\n      defaultMaxResolution /\n      Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n\n    // user provided maxResolution takes precedence\n    maxResolution = options.maxResolution;\n    if (maxResolution !== undefined) {\n      minZoom = 0;\n    } else {\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n    }\n\n    // user provided minResolution takes precedence\n    minResolution = options.minResolution;\n    if (minResolution === undefined) {\n      if (options.maxZoom !== undefined) {\n        if (options.maxResolution !== undefined) {\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n        } else {\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n        }\n      } else {\n        minResolution = defaultMinResolution;\n      }\n    }\n\n    // given discrete zoom levels, minResolution may be different than provided\n    maxZoom =\n      minZoom +\n      Math.floor(\n        Math.log(maxResolution / minResolution) / Math.log(zoomFactor)\n      );\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToPower(\n        zoomFactor,\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  }\n  return {\n    constraint: resolutionConstraint,\n    maxResolution: maxResolution,\n    minResolution: minResolution,\n    minZoom: minZoom,\n    zoomFactor: zoomFactor,\n  };\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n  const enableRotation =\n    options.enableRotation !== undefined ? options.enableRotation : true;\n  if (enableRotation) {\n    const constrainRotation = options.constrainRotation;\n    if (constrainRotation === undefined || constrainRotation === true) {\n      return createSnapToZero();\n    }\n    if (constrainRotation === false) {\n      return rotationNone;\n    }\n    if (typeof constrainRotation === 'number') {\n      return createSnapToN(constrainRotation);\n    }\n    return rotationNone;\n  }\n  return disable;\n}\n\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n  if (animation.sourceCenter && animation.targetCenter) {\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n      return false;\n    }\n  }\n  if (animation.sourceResolution !== animation.targetResolution) {\n    return false;\n  }\n  if (animation.sourceRotation !== animation.targetRotation) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {import(\"./size.js\").Size} size Box pixel size.\n * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {import(\"./coordinate.js\").Coordinate} Shifted center.\n */\nfunction calculateCenterOn(coordinate, size, position, resolution, rotation) {\n  // calculate rotated position\n  const cosAngle = Math.cos(-rotation);\n  let sinAngle = Math.sin(-rotation);\n  let rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  let rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  rotX += (size[0] / 2 - position[0]) * resolution;\n  rotY += (position[1] - size[1] / 2) * resolution;\n\n  // go back to original angle\n  sinAngle = -sinAngle; // go back to original rotation\n  const centerX = rotX * cosAngle - rotY * sinAngle;\n  const centerY = rotY * cosAngle + rotX * sinAngle;\n\n  return [centerX, centerY];\n}\n\nexport default View;\n","/**\n * @module ol/ViewHint\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  ANIMATING: 0,\n  INTERACTING: 1,\n};\n","/**\n * @module ol/array\n */\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function} [comparator] Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, comparator) {\n  let mid, cmp;\n  comparator = comparator || ascending;\n  let low = 0;\n  let high = haystack.length;\n  let found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + ((high - low) >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) {\n      /* Too low. */\n      low = mid + 1;\n    } else {\n      /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n/**\n * Compare function sorting arrays in ascending order.  Safe to use for numeric values.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function ascending(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n/**\n * Compare function sorting arrays in descending order.  Safe to use for numeric values.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is greater than, equal to, or less than the second.\n */\nexport function descending(a, b) {\n  return a < b ? 1 : a > b ? -1 : 0;\n}\n\n/**\n * {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution} can use a function\n * of this type to determine which nearest resolution to use.\n *\n * This function takes a `{number}` representing a value between two array entries,\n * a `{number}` representing the value of the nearest higher entry and\n * a `{number}` representing the value of the nearest lower entry\n * as arguments and returns a `{number}`. If a negative number or zero is returned\n * the lower value will be used, if a positive number is returned the higher value\n * will be used.\n * @typedef {function(number, number, number): number} NearestDirectionFunction\n * @api\n */\n\n/**\n * @param {Array<number>} arr Array in descending order.\n * @param {number} target Target.\n * @param {number|NearestDirectionFunction} direction\n *    0 means return the nearest,\n *    > 0 means return the largest nearest,\n *    < 0 means return the smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  if (arr[0] <= target) {\n    return 0;\n  }\n\n  const n = arr.length;\n  if (target <= arr[n - 1]) {\n    return n - 1;\n  }\n\n  if (typeof direction === 'function') {\n    for (let i = 1; i < n; ++i) {\n      const candidate = arr[i];\n      if (candidate === target) {\n        return i;\n      }\n      if (candidate < target) {\n        if (direction(target, arr[i - 1], candidate) > 0) {\n          return i - 1;\n        }\n        return i;\n      }\n    }\n    return n - 1;\n  }\n\n  if (direction > 0) {\n    for (let i = 1; i < n; ++i) {\n      if (arr[i] < target) {\n        return i - 1;\n      }\n    }\n    return n - 1;\n  }\n\n  if (direction < 0) {\n    for (let i = 1; i < n; ++i) {\n      if (arr[i] <= target) {\n        return i;\n      }\n    }\n    return n - 1;\n  }\n\n  for (let i = 1; i < n; ++i) {\n    if (arr[i] == target) {\n      return i;\n    }\n    if (arr[i] < target) {\n      if (arr[i - 1] - target < target - arr[i]) {\n        return i - 1;\n      }\n      return i;\n    }\n  }\n  return n - 1;\n}\n\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    const tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  const extension = Array.isArray(data) ? data : [data];\n  const length = extension.length;\n  for (let i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  const i = arr.indexOf(obj);\n  const found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n/**\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  const len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Sort the passed array such that the relative order of equal elements is preserved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n  const length = arr.length;\n  const tmp = Array(arr.length);\n  let i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function (a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function} [func] Comparison function.\n * @param {boolean} [strict] Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, func, strict) {\n  const compare = func || ascending;\n  return arr.every(function (currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    const res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || (strict && res === 0));\n  });\n}\n","/**\n * @module ol/asserts\n */\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {string} errorMessage Error message.\n */\nexport function assert(assertion, errorMessage) {\n  if (!assertion) {\n    throw new Error(errorMessage);\n  }\n}\n","/**\n * @module ol/color\n */\nimport {clamp} from './math.js';\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n\n/**\n * This RegExp matches # followed by 3, 4, 6, or 8 hex digits.\n * @const\n * @type {RegExp}\n * @private\n */\nconst HEX_COLOR_RE_ = /^#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})$/i;\n\n/**\n * Regular expression for matching potential named color style strings.\n * @const\n * @type {RegExp}\n * @private\n */\nconst NAMED_COLOR_RE_ = /^([a-z]*)$|^hsla?\\(.*\\)$/i;\n\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  }\n  return toString(color);\n}\n\n/**\n * Return named color as an rgba string.\n * @param {string} color Named color.\n * @return {string} Rgb string.\n */\nfunction fromNamed(color) {\n  const el = document.createElement('div');\n  el.style.color = color;\n  if (el.style.color !== '') {\n    document.body.appendChild(el);\n    const rgb = getComputedStyle(el).color;\n    document.body.removeChild(el);\n    return rgb;\n  }\n  return '';\n}\n\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport const fromString = (function () {\n  // We maintain a small cache of parsed strings.  To provide cheap LRU-like\n  // semantics, whenever the cache grows too large we simply delete an\n  // arbitrary 25% of the entries.\n\n  /**\n   * @const\n   * @type {number}\n   */\n  const MAX_CACHE_SIZE = 1024;\n\n  /**\n   * @type {Object<string, Color>}\n   */\n  const cache = {};\n\n  /**\n   * @type {number}\n   */\n  let cacheSize = 0;\n\n  return (\n    /**\n     * @param {string} s String.\n     * @return {Color} Color.\n     */\n    function (s) {\n      let color;\n      if (cache.hasOwnProperty(s)) {\n        color = cache[s];\n      } else {\n        if (cacheSize >= MAX_CACHE_SIZE) {\n          let i = 0;\n          for (const key in cache) {\n            if ((i++ & 3) === 0) {\n              delete cache[key];\n              --cacheSize;\n            }\n          }\n        }\n        color = fromStringInternal_(s);\n        cache[s] = color;\n        ++cacheSize;\n      }\n      return color;\n    }\n  );\n})();\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  }\n  return fromString(color);\n}\n\n/**\n * @param {string} s String.\n * @private\n * @return {Color} Color.\n */\nfunction fromStringInternal_(s) {\n  let r, g, b, a, color;\n\n  if (NAMED_COLOR_RE_.exec(s)) {\n    s = fromNamed(s);\n  }\n\n  if (HEX_COLOR_RE_.exec(s)) {\n    // hex\n    const n = s.length - 1; // number of hex digits\n    let d; // number of digits per channel\n    if (n <= 4) {\n      d = 1;\n    } else {\n      d = 2;\n    }\n    const hasAlpha = n === 4 || n === 8;\n    r = parseInt(s.substr(1 + 0 * d, d), 16);\n    g = parseInt(s.substr(1 + 1 * d, d), 16);\n    b = parseInt(s.substr(1 + 2 * d, d), 16);\n    if (hasAlpha) {\n      a = parseInt(s.substr(1 + 3 * d, d), 16);\n    } else {\n      a = 255;\n    }\n    if (d == 1) {\n      r = (r << 4) + r;\n      g = (g << 4) + g;\n      b = (b << 4) + b;\n      if (hasAlpha) {\n        a = (a << 4) + a;\n      }\n    }\n    color = [r, g, b, a / 255];\n  } else if (s.startsWith('rgba(')) {\n    // rgba()\n    color = s.slice(5, -1).split(',').map(Number);\n    normalize(color);\n  } else if (s.startsWith('rgb(')) {\n    // rgb()\n    color = s.slice(4, -1).split(',').map(Number);\n    color.push(1);\n    normalize(color);\n  } else {\n    throw new Error('Invalid color');\n  }\n  return color;\n}\n\n/**\n * TODO this function is only used in the test, we probably shouldn't export it\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n  color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n  color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n  color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n  color[3] = clamp(color[3], 0, 1);\n  return color;\n}\n\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  let r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  let g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  let b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  const a = color[3] === undefined ? 1 : Math.round(color[3] * 100) / 100;\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n\n/**\n * @param {string} s String.\n * @return {boolean} Whether the string is actually a valid color\n */\nexport function isStringColor(s) {\n  if (NAMED_COLOR_RE_.test(s)) {\n    s = fromNamed(s);\n  }\n  return HEX_COLOR_RE_.test(s) || s.startsWith('rgba(') || s.startsWith('rgb(');\n}\n","/**\n * @module ol/console\n */\n\n/**\n * @typedef {'info'|'warn'|'error'|'none'} Level\n */\n\n/**\n * @type {Object<Level, number>}\n */\nconst levels = {\n  info: 1,\n  warn: 2,\n  error: 3,\n  none: 4,\n};\n\n/**\n * @type {number}\n */\nlet level = levels.info;\n\n/**\n * Set the logging level.  By default, the level is set to 'info' and all\n * messages will be logged.  Set to 'warn' to only display warnings and errors.\n * Set to 'error' to only display errors.  Set to 'none' to silence all messages.\n *\n * @param {Level} l The new level.\n */\nexport function setLevel(l) {\n  level = levels[l];\n}\n\nexport function log(...args) {\n  if (level > levels.info) {\n    return;\n  }\n  console.log(...args); // eslint-disable-line no-console\n}\n\nexport function warn(...args) {\n  if (level > levels.warn) {\n    return;\n  }\n  console.warn(...args); // eslint-disable-line no-console\n}\n\nexport function error(...args) {\n  if (level > levels.error) {\n    return;\n  }\n  console.error(...args); // eslint-disable-line no-console\n}\n","/**\n * @module ol/coordinate\n */\nimport {getWidth} from './extent.js';\nimport {modulo, toFixed} from './math.js';\nimport {padNumber} from './string.js';\n\n/**\n * An array of numbers representing an `xy`, `xyz` or `xyzm` coordinate.\n * Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += +delta[0];\n  coordinate[1] += +delta[1];\n  return coordinate;\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  const r = circle.getRadius();\n  const center = circle.getCenter();\n  const x0 = center[0];\n  const y0 = center[1];\n  const x1 = coordinate[0];\n  const y1 = coordinate[1];\n\n  let dx = x1 - x0;\n  const dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  const d = Math.sqrt(dx * dx + dy * dy);\n\n  const x = x0 + (r * dx) / d;\n  const y = y0 + (r * dy) / d;\n\n  return [x, y];\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  const x0 = coordinate[0];\n  const y0 = coordinate[1];\n  const start = segment[0];\n  const end = segment[1];\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  const along =\n    dx === 0 && dy === 0\n      ? 0\n      : (dx * (x0 - x1) + dy * (y0 - y1)) / (dx * dx + dy * dy || 0);\n  let x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY();\n *     const out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY(2);\n *     const out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(fractionDigits) {\n  return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n      return toStringXY(coordinate, fractionDigits);\n    }\n  );\n}\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, fractionDigits) {\n  const normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  const x = Math.abs(3600 * normalizedDegrees);\n  const decimals = fractionDigits || 0;\n\n  let deg = Math.floor(x / 3600);\n  let min = Math.floor((x - deg * 3600) / 60);\n  let sec = toFixed(x - deg * 3600 - min * 60, decimals);\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  let hdms = deg + '\\u00b0';\n  if (min !== 0 || sec !== 0) {\n    hdms += ' ' + padNumber(min, 2) + '\\u2032';\n  }\n  if (sec !== 0) {\n    hdms += ' ' + padNumber(sec, 2, decimals) + '\\u2033';\n  }\n  if (normalizedDegrees !== 0) {\n    hdms += ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0);\n  }\n\n  return hdms;\n}\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(fractionDigits));\n  }\n  return '';\n}\n\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  let equals = true;\n  for (let i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  const cosAngle = Math.cos(angle);\n  const sinAngle = Math.sin(angle);\n  const x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  const y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  const dx = coord1[0] - coord2[0];\n  const dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, fractionDigits) {\n  if (coordinate) {\n    return (\n      degreesToStringHDMS('NS', coordinate[1], fractionDigits) +\n      ' ' +\n      degreesToStringHDMS('EW', coordinate[0], fractionDigits)\n    );\n  }\n  return '';\n}\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, fractionDigits) {\n  return format(coordinate, '{x}, {y}', fractionDigits);\n}\n\n/**\n * Modifies the provided coordinate in-place to be within the real world\n * extent. The lower projection extent boundary is inclusive, the upper one\n * exclusive.\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {Coordinate} The coordinate within the real world extent.\n */\nexport function wrapX(coordinate, projection) {\n  if (projection.canWrapX()) {\n    const worldWidth = getWidth(projection.getExtent());\n    const worldsAway = getWorldsAway(coordinate, projection, worldWidth);\n    if (worldsAway) {\n      coordinate[0] -= worldsAway * worldWidth;\n    }\n  }\n  return coordinate;\n}\n/**\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {number} [sourceExtentWidth] Width of the source extent.\n * @return {number} Offset in world widths.\n */\nexport function getWorldsAway(coordinate, projection, sourceExtentWidth) {\n  const projectionExtent = projection.getExtent();\n  let worldsAway = 0;\n  if (\n    projection.canWrapX() &&\n    (coordinate[0] < projectionExtent[0] || coordinate[0] > projectionExtent[2])\n  ) {\n    sourceExtentWidth = sourceExtentWidth || getWidth(projectionExtent);\n    worldsAway = Math.floor(\n      (coordinate[0] - projectionExtent[0]) / sourceExtentWidth\n    );\n  }\n  return worldsAway;\n}\n","import {WORKER_OFFSCREEN_CANVAS} from './has.js';\n\n/**\n * @module ol/dom\n */\n\n//FIXME Move this function to the canvas module\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number} [width] Canvas width.\n * @param {number} [height] Canvas height.\n * @param {Array<HTMLCanvasElement>} [canvasPool] Canvas pool to take existing canvas from.\n * @param {CanvasRenderingContext2DSettings} [settings] CanvasRenderingContext2DSettings\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(width, height, canvasPool, settings) {\n  /** @type {HTMLCanvasElement|OffscreenCanvas} */\n  let canvas;\n  if (canvasPool && canvasPool.length) {\n    canvas = canvasPool.shift();\n  } else if (WORKER_OFFSCREEN_CANVAS) {\n    canvas = new OffscreenCanvas(width || 300, height || 300);\n  } else {\n    canvas = document.createElement('canvas');\n  }\n  if (width) {\n    canvas.width = width;\n  }\n  if (height) {\n    canvas.height = height;\n  }\n  //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n  return /** @type {CanvasRenderingContext2D} */ (\n    canvas.getContext('2d', settings)\n  );\n}\n\n/**\n * Releases canvas memory to avoid exceeding memory limits in Safari.\n * See https://pqina.nl/blog/total-canvas-memory-use-exceeds-the-maximum-limit/\n * @param {CanvasRenderingContext2D} context Context.\n */\nexport function releaseCanvas(context) {\n  const canvas = context.canvas;\n  canvas.width = 1;\n  canvas.height = 1;\n  context.clearRect(0, 0, 1, 1);\n}\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  let width = element.offsetWidth;\n  const style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  let height = element.offsetHeight;\n  const style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  const parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove.\n * @return {Node|null} The node that was removed or null.\n */\nexport function removeNode(node) {\n  return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n}\n\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n  const oldChildren = node.childNodes;\n\n  for (let i = 0; true; ++i) {\n    const oldChild = oldChildren[i];\n    const newChild = children[i];\n\n    // check if our work is done\n    if (!oldChild && !newChild) {\n      break;\n    }\n\n    // check if children match\n    if (oldChild === newChild) {\n      continue;\n    }\n\n    // check if a new child needs to be added\n    if (!oldChild) {\n      node.appendChild(newChild);\n      continue;\n    }\n\n    // check if an old child needs to be removed\n    if (!newChild) {\n      node.removeChild(oldChild);\n      --i;\n      continue;\n    }\n\n    // reorder\n    node.insertBefore(newChild, oldChild);\n  }\n}\n","/**\n * @module ol/easing\n */\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing.inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  }\n  return 1 - inAndOut(2 * (t - 0.5));\n}\n","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n/**\n * Key to use with {@link module:ol/Observable.unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener Listener.\n * @property {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @property {string} type Type.\n * @api\n */\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n\n/**\n * @typedef {Object} ListenerObject\n * @property {ListenerFunction} handleEvent HandleEvent listener function.\n */\n\n/**\n * @typedef {ListenerFunction|ListenerObject} Listener\n */\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events.unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean} [once] If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, thisArg, once) {\n  if (thisArg && thisArg !== target) {\n    listener = listener.bind(thisArg);\n  }\n  if (once) {\n    const originalListener = listener;\n    listener = function () {\n      target.removeEventListener(type, listener);\n      originalListener.apply(this, arguments);\n    };\n  }\n  const eventsKey = {\n    target: target,\n    type: type,\n    listener: listener,\n  };\n  target.addEventListener(type, listener);\n  return eventsKey;\n}\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events.unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events.listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, thisArg) {\n  return listen(target, type, listener, thisArg, true);\n}\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events.listen} or {@link module:ol/events.listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    key.target.removeEventListener(key.type, key.listener);\n    clear(key);\n  }\n}\n","/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nclass BaseEvent {\n  /**\n   * @param {string} type Type.\n   */\n  constructor(type) {\n    /**\n     * @type {boolean}\n     */\n    this.propagationStopped;\n\n    /**\n     * @type {boolean}\n     */\n    this.defaultPrevented;\n\n    /**\n     * The event type.\n     * @type {string}\n     * @api\n     */\n    this.type = type;\n\n    /**\n     * The event target.\n     * @type {Object}\n     * @api\n     */\n    this.target = null;\n  }\n\n  /**\n   * Prevent default. This means that no emulated `click`, `singleclick` or `doubleclick` events\n   * will be fired.\n   * @api\n   */\n  preventDefault() {\n    this.defaultPrevented = true;\n  }\n\n  /**\n   * Stop event propagation.\n   * @api\n   */\n  stopPropagation() {\n    this.propagationStopped = true;\n  }\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default BaseEvent;\n","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~BaseEvent#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  /**\n   * Generic error event. Triggered when an error occurs.\n   * @event module:ol/events/Event~BaseEvent#error\n   * @api\n   */\n  ERROR: 'error',\n\n  BLUR: 'blur',\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  FOCUS: 'focus',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  RESIZE: 'resize',\n  TOUCHMOVE: 'touchmove',\n  WHEEL: 'wheel',\n};\n","/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport Event from './Event.js';\nimport {VOID} from '../functions.js';\nimport {clear} from '../obj.js';\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nclass Target extends Disposable {\n  /**\n   * @param {*} [target] Default event target for dispatched events.\n   */\n  constructor(target) {\n    super();\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.eventTarget_ = target;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.pendingRemovals_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.dispatching_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").Listener>>}\n     */\n    this.listeners_ = null;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  addEventListener(type, listener) {\n    if (!type || !listener) {\n      return;\n    }\n    const listeners = this.listeners_ || (this.listeners_ = {});\n    const listenersForType = listeners[type] || (listeners[type] = []);\n    if (!listenersForType.includes(listener)) {\n      listenersForType.push(listener);\n    }\n  }\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  dispatchEvent(event) {\n    const isString = typeof event === 'string';\n    const type = isString ? event : event.type;\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (!listeners) {\n      return;\n    }\n\n    const evt = isString ? new Event(event) : /** @type {Event} */ (event);\n    if (!evt.target) {\n      evt.target = this.eventTarget_ || this;\n    }\n    const dispatching = this.dispatching_ || (this.dispatching_ = {});\n    const pendingRemovals =\n      this.pendingRemovals_ || (this.pendingRemovals_ = {});\n    if (!(type in dispatching)) {\n      dispatching[type] = 0;\n      pendingRemovals[type] = 0;\n    }\n    ++dispatching[type];\n    let propagate;\n    for (let i = 0, ii = listeners.length; i < ii; ++i) {\n      if ('handleEvent' in listeners[i]) {\n        propagate = /** @type {import(\"../events.js\").ListenerObject} */ (\n          listeners[i]\n        ).handleEvent(evt);\n      } else {\n        propagate = /** @type {import(\"../events.js\").ListenerFunction} */ (\n          listeners[i]\n        ).call(this, evt);\n      }\n      if (propagate === false || evt.propagationStopped) {\n        propagate = false;\n        break;\n      }\n    }\n    if (--dispatching[type] === 0) {\n      let pr = pendingRemovals[type];\n      delete pendingRemovals[type];\n      while (pr--) {\n        this.removeEventListener(type, VOID);\n      }\n      delete dispatching[type];\n    }\n    return propagate;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.listeners_ && clear(this.listeners_);\n  }\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").Listener>|undefined} Listeners.\n   */\n  getListeners(type) {\n    return (this.listeners_ && this.listeners_[type]) || undefined;\n  }\n\n  /**\n   * @param {string} [type] Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  hasListener(type) {\n    if (!this.listeners_) {\n      return false;\n    }\n    return type\n      ? type in this.listeners_\n      : Object.keys(this.listeners_).length > 0;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  removeEventListener(type, listener) {\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (listeners) {\n      const index = listeners.indexOf(listener);\n      if (index !== -1) {\n        if (this.pendingRemovals_ && type in this.pendingRemovals_) {\n          // make listener a no-op, and remove later in #dispatchEvent()\n          listeners[index] = VOID;\n          ++this.pendingRemovals_[type];\n        } else {\n          listeners.splice(index, 1);\n          if (listeners.length === 0) {\n            delete this.listeners_[type];\n          }\n        }\n      }\n    }\n  }\n}\n\nexport default Target;\n","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16,\n};\n","/**\n * @module ol/extent\n */\nimport Relationship from './extent/Relationship.js';\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n\n/**\n * Extent corner.\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} Corner\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  const extent = createEmpty();\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent} [dest] Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, dest) {\n  const minX = Math.min.apply(null, xs);\n  const minY = Math.min.apply(null, ys);\n  const maxX = Math.max.apply(null, xs);\n  const maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, dest);\n}\n\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, dest) {\n  if (dest) {\n    dest[0] = extent[0] - value;\n    dest[1] = extent[1] - value;\n    dest[2] = extent[2] + value;\n    dest[3] = extent[3] + value;\n    return dest;\n  }\n  return [\n    extent[0] - value,\n    extent[1] - value,\n    extent[2] + value,\n    extent[3] + value,\n  ];\n}\n\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent} [dest] Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent.slice();\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  let dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[0] &&\n    extent2[2] <= extent1[2] &&\n    extent1[1] <= extent2[1] &&\n    extent2[3] <= extent1[3]\n  );\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {import(\"./extent/Relationship.js\").default} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const x = coordinate[0];\n  const y = coordinate[1];\n  let relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, dest) {\n  if (dest) {\n    dest[0] = minX;\n    dest[1] = minY;\n    dest[2] = maxX;\n    dest[3] = maxY;\n    return dest;\n  }\n  return [minX, minY, maxX, maxY];\n}\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(dest) {\n  return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, dest);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, dest) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  return createOrUpdate(x, y, x, y, dest);\n}\n\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendCoordinates(extent, coordinates);\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  dest\n) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendRings(extent, rings);\n}\n\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return (\n    extent1[0] == extent2[0] &&\n    extent1[2] == extent2[2] &&\n    extent1[1] == extent2[1] &&\n    extent1[3] == extent2[3]\n  );\n}\n\n/**\n * Determine if two extents are approximately equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {number} tolerance Tolerance in extent coordinate units.\n * @return {boolean} The two extents differ by less than the tolerance.\n */\nexport function approximatelyEquals(extent1, extent2, tolerance) {\n  return (\n    Math.abs(extent1[0] - extent2[0]) < tolerance &&\n    Math.abs(extent1[2] - extent2[2]) < tolerance &&\n    Math.abs(extent1[1] - extent2[1]) < tolerance &&\n    Math.abs(extent1[3] - extent2[3]) < tolerance\n  );\n}\n\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(\n  extent,\n  flatCoordinates,\n  offset,\n  end,\n  stride\n) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n  let val;\n  val = callback(getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  let area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {Corner} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  let coordinate;\n  if (corner === 'bottom-left') {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === 'bottom-right') {\n    coordinate = getBottomRight(extent);\n  } else if (corner === 'top-left') {\n    coordinate = getTopLeft(extent);\n  } else if (corner === 'top-right') {\n    coordinate = getTopRight(extent);\n  } else {\n    throw new Error('Invalid corner');\n  }\n  return coordinate;\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  const minX = Math.min(extent1[0], extent2[0]);\n  const minY = Math.min(extent1[1], extent2[1]);\n  const maxX = Math.max(extent1[2], extent2[2]);\n  const maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(center, resolution, rotation, size, dest) {\n  const [x0, y0, x1, y1, x2, y2, x3, y3] = getRotatedViewport(\n    center,\n    resolution,\n    rotation,\n    size\n  );\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3),\n    Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3),\n    Math.max(y0, y1, y2, y3),\n    dest\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @return {Array<number>} Linear ring representing the viewport.\n */\nexport function getRotatedViewport(center, resolution, rotation, size) {\n  const dx = (resolution * size[0]) / 2;\n  const dy = (resolution * size[1]) / 2;\n  const cosRotation = Math.cos(rotation);\n  const sinRotation = Math.sin(rotation);\n  const xCos = dx * cosRotation;\n  const xSin = dx * sinRotation;\n  const yCos = dy * cosRotation;\n  const ySin = dy * sinRotation;\n  const x = center[0];\n  const y = center[1];\n  return [\n    x - xCos + ySin,\n    y - xSin - yCos,\n    x - xCos - ySin,\n    y - xSin + yCos,\n    x + xCos - ySin,\n    y + xSin + yCos,\n    x + xCos + ySin,\n    y + xSin - yCos,\n    x - xCos + ySin,\n    y - xSin - yCos,\n  ];\n}\n\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  const intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent} [dest] Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, dest) {\n  const intersection = dest ? dest : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[2] &&\n    extent1[2] >= extent2[0] &&\n    extent1[1] <= extent2[3] &&\n    extent1[3] >= extent2[1]\n  );\n}\n\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  const deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  const deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  let intersects = false;\n  const startRel = coordinateRelationship(extent, start);\n  const endRel = coordinateRelationship(extent, end);\n  if (\n    startRel === Relationship.INTERSECTING ||\n    endRel === Relationship.INTERSECTING\n  ) {\n    intersects = true;\n  } else {\n    const minX = extent[0];\n    const minY = extent[1];\n    const maxX = extent[2];\n    const maxY = extent[3];\n    const startX = start[0];\n    const startY = start[1];\n    const endX = end[0];\n    const endY = end[1];\n    const slope = (endY - startY) / (endX - startX);\n    let x, y;\n    if (!!(endRel & Relationship.ABOVE) && !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - (endY - maxY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.RIGHT) &&\n      !(startRel & Relationship.RIGHT)\n    ) {\n      // potentially intersects right\n      y = endY - (endX - maxX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.BELOW) &&\n      !(startRel & Relationship.BELOW)\n    ) {\n      // potentially intersects bottom\n      x = endX - (endY - minY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.LEFT) &&\n      !(startRel & Relationship.LEFT)\n    ) {\n      // potentially intersects left\n      y = endY - (endX - minX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n  }\n  return intersects;\n}\n\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent} [dest] Destination extent.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, dest, stops) {\n  if (isEmpty(extent)) {\n    return createOrUpdateEmpty(dest);\n  }\n  let coordinates = [];\n  if (stops > 1) {\n    const width = extent[2] - extent[0];\n    const height = extent[3] - extent[1];\n    for (let i = 0; i < stops; ++i) {\n      coordinates.push(\n        extent[0] + (width * i) / stops,\n        extent[1],\n        extent[2],\n        extent[1] + (height * i) / stops,\n        extent[2] - (width * i) / stops,\n        extent[3],\n        extent[0],\n        extent[3] - (height * i) / stops\n      );\n    }\n  } else {\n    coordinates = [\n      extent[0],\n      extent[1],\n      extent[2],\n      extent[1],\n      extent[2],\n      extent[3],\n      extent[0],\n      extent[3],\n    ];\n  }\n  transformFn(coordinates, coordinates, 2);\n  const xs = [];\n  const ys = [];\n  for (let i = 0, l = coordinates.length; i < l; i += 2) {\n    xs.push(coordinates[i]);\n    ys.push(coordinates[i + 1]);\n  }\n  return _boundingExtentXYs(xs, ys, dest);\n}\n\n/**\n * Modifies the provided extent in-place to be within the real world\n * extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Extent} The extent within the real world extent.\n */\nexport function wrapX(extent, projection) {\n  const projectionExtent = projection.getExtent();\n  const center = getCenter(extent);\n  if (\n    projection.canWrapX() &&\n    (center[0] < projectionExtent[0] || center[0] >= projectionExtent[2])\n  ) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.floor(\n      (center[0] - projectionExtent[0]) / worldWidth\n    );\n    const offset = worldsAway * worldWidth;\n    extent[0] -= offset;\n    extent[2] -= offset;\n  }\n  return extent;\n}\n\n/**\n * Fits the extent to the real world\n *\n * If the extent does not cross the anti meridian, this will return the extent in an array\n * If the extent crosses the anti meridian, the extent will be sliced, so each part fits within the\n * real world\n *\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Array<Extent>} The extent within the real world extent.\n */\nexport function wrapAndSliceX(extent, projection) {\n  if (projection.canWrapX()) {\n    const projectionExtent = projection.getExtent();\n\n    if (!isFinite(extent[0]) || !isFinite(extent[2])) {\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    }\n\n    wrapX(extent, projection);\n    const worldWidth = getWidth(projectionExtent);\n\n    if (getWidth(extent) > worldWidth) {\n      // the extent wraps around on itself\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    }\n    if (extent[0] < projectionExtent[0]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0] + worldWidth, extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2], extent[3]],\n      ];\n    }\n    if (extent[2] > projectionExtent[2]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0], extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2] - worldWidth, extent[3]],\n      ];\n    }\n  }\n\n  return [extent];\n}\n","/**\n * @module ol/functions\n */\n\nimport {equals as arrayEquals} from './array.js';\n\n/**\n * Always returns true.\n * @return {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @return {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n  let called = false;\n\n  /** @type {ReturnType} */\n  let lastResult;\n\n  /** @type {Array<any>} */\n  let lastArgs;\n\n  let lastThis;\n\n  return function () {\n    const nextArgs = Array.prototype.slice.call(arguments);\n    if (!called || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n      called = true;\n      lastThis = this;\n      lastArgs = nextArgs;\n      lastResult = fn.apply(this, arguments);\n    }\n    return lastResult;\n  };\n}\n\n/**\n * @template T\n * @param {function(): (T | Promise<T>)} getter A function that returns a value or a promise for a value.\n * @return {Promise<T>} A promise for the value.\n */\nexport function toPromise(getter) {\n  function promiseGetter() {\n    let value;\n    try {\n      value = getter();\n    } catch (err) {\n      return Promise.reject(err);\n    }\n    if (value instanceof Promise) {\n      return value;\n    }\n    return Promise.resolve(value);\n  }\n  return promiseGetter();\n}\n","/**\n * @module ol/geom/Geometry\n */\nimport BaseObject from '../Object.js';\nimport {abstract} from '../util.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {\n  createEmpty,\n  createOrUpdateEmpty,\n  getHeight,\n  returnOrUpdate,\n} from '../extent.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport {memoizeOne} from '../functions.js';\nimport {transform2D} from './flat/transform.js';\n\n/**\n * @typedef {'XY' | 'XYZ' | 'XYM' | 'XYZM'} GeometryLayout\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available.\n */\n\n/**\n * @typedef {'Point' | 'LineString' | 'LinearRing' | 'Polygon' | 'MultiPoint' | 'MultiLineString' | 'MultiPolygon' | 'GeometryCollection' | 'Circle'} Type\n * The geometry type.  One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, or `'Circle'`.\n */\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nclass Geometry extends BaseObject {\n  constructor() {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.extentRevision_ = -1;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryRevision = 0;\n\n    /**\n     * Get a transformed and simplified version of the geometry.\n     * @abstract\n     * @param {number} revision The geometry revision.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n     * @return {Geometry} Simplified geometry.\n     */\n    this.simplifyTransformedInternal = memoizeOne(function (\n      revision,\n      squaredTolerance,\n      transform\n    ) {\n      if (!transform) {\n        return this.getSimplifiedGeometry(squaredTolerance);\n      }\n      const clone = this.clone();\n      clone.applyTransform(transform);\n      return clone.getSimplifiedGeometry(squaredTolerance);\n    });\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n   * @return {Geometry} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, transform) {\n    return this.simplifyTransformedInternal(\n      this.getRevision(),\n      squaredTolerance,\n      transform\n    );\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @abstract\n   * @return {!Geometry} Clone.\n   */\n  clone() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    return abstract();\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const coord = this.getClosestPoint([x, y]);\n    return coord[0] === x && coord[1] === y;\n  }\n\n  /**\n   * Return the closest point of the geometry to the passed point as\n   * {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} point Point.\n   * @param {import(\"../coordinate.js\").Coordinate} [closestPoint] Closest point.\n   * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n   * @api\n   */\n  getClosestPoint(point, closestPoint) {\n    closestPoint = closestPoint ? closestPoint : [NaN, NaN];\n    this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n    return closestPoint;\n  }\n\n  /**\n   * Returns true if this geometry includes the specified coordinate. If the\n   * coordinate is on the boundary of the geometry, returns false.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {boolean} Contains coordinate.\n   * @api\n   */\n  intersectsCoordinate(coordinate) {\n    return this.containsXY(coordinate[0], coordinate[1]);\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Get the extent of the geometry.\n   * @param {import(\"../extent.js\").Extent} [extent] Extent.\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  getExtent(extent) {\n    if (this.extentRevision_ != this.getRevision()) {\n      const extent = this.computeExtent(this.extent_);\n      if (isNaN(extent[0]) || isNaN(extent[1])) {\n        createOrUpdateEmpty(extent);\n      }\n      this.extentRevision_ = this.getRevision();\n    }\n    return returnOrUpdate(this.extent_, extent);\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    abstract();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    abstract();\n  }\n\n  /**\n   * Create a simplified version of this geometry.  For linestrings, this uses\n   * the [Douglas Peucker](https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm)\n   * algorithm.  For polygons, a quantization-based\n   * simplification is used to preserve topology.\n   * @param {number} tolerance The tolerance distance for simplification.\n   * @return {Geometry} A new, simplified version of the original geometry.\n   * @api\n   */\n  simplify(tolerance) {\n    return this.getSimplifiedGeometry(tolerance * tolerance);\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker\n   * algorithm.\n   * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Geometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return abstract();\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @abstract\n   * @return {Type} Geometry type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @abstract\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   */\n  applyTransform(transformFn) {\n    abstract();\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   */\n  intersectsExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @abstract\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    abstract();\n  }\n\n  /**\n   * Transform each coordinate of the geometry from one coordinate reference\n   * system to another. The geometry is modified in place.\n   * For example, a line will be transformed to a line and a circle to a circle.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @return {Geometry} This geometry.  Note that original geometry is\n   *     modified in place.\n   * @api\n   */\n  transform(source, destination) {\n    /** @type {import(\"../proj/Projection.js\").default} */\n    const sourceProj = getProjection(source);\n    const transformFn =\n      sourceProj.getUnits() == 'tile-pixels'\n        ? function (inCoordinates, outCoordinates, stride) {\n            const pixelExtent = sourceProj.getExtent();\n            const projectedExtent = sourceProj.getWorldExtent();\n            const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n            composeTransform(\n              tmpTransform,\n              projectedExtent[0],\n              projectedExtent[3],\n              scale,\n              -scale,\n              0,\n              0,\n              0\n            );\n            transform2D(\n              inCoordinates,\n              0,\n              inCoordinates.length,\n              stride,\n              tmpTransform,\n              outCoordinates\n            );\n            return getTransform(sourceProj, destination)(\n              inCoordinates,\n              outCoordinates,\n              stride\n            );\n          }\n        : getTransform(sourceProj, destination);\n    this.applyTransform(transformFn);\n    return this;\n  }\n}\n\nexport default Geometry;\n","/**\n * @module ol/geom/SimpleGeometry\n */\nimport Geometry from './Geometry.js';\nimport {abstract} from '../util.js';\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport {rotate, scale, transform2D, translate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nclass SimpleGeometry extends Geometry {\n  constructor() {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./Geometry.js\").GeometryLayout}\n     */\n    this.layout = 'XY';\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.stride = 2;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.flatCoordinates = null;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromFlatCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Array<*> | null} Coordinates.\n   */\n  getCoordinates() {\n    return abstract();\n  }\n\n  /**\n   * Return the first coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n   * @api\n   */\n  getFirstCoordinate() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getFlatCoordinates() {\n    return this.flatCoordinates;\n  }\n\n  /**\n   * Return the last coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} Last point.\n   * @api\n   */\n  getLastCoordinate() {\n    return this.flatCoordinates.slice(\n      this.flatCoordinates.length - this.stride\n    );\n  }\n\n  /**\n   * Return the {@link import(\"./Geometry.js\").GeometryLayout layout} of the geometry.\n   * @return {import(\"./Geometry.js\").GeometryLayout} Layout.\n   * @api\n   */\n  getLayout() {\n    return this.layout;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    // If squaredTolerance is negative or if we know that simplification will not\n    // have any effect then just return this.\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometry =\n      this.getSimplifiedGeometryInternal(squaredTolerance);\n    const simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n    if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n      return simplifiedGeometry;\n    }\n    // Simplification did not actually remove any coordinates.  We now know\n    // that any calls to getSimplifiedGeometry with a squaredTolerance less\n    // than or equal to the current squaredTolerance will also not have any\n    // effect.  This allows us to short circuit simplification (saving CPU\n    // cycles) and prevents the cache of simplified geometries from filling\n    // up with useless identical copies of this geometry (saving memory).\n    this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n    return this;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride;\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   */\n  setFlatCoordinates(layout, flatCoordinates) {\n    this.stride = getStrideForLayout(layout);\n    this.layout = layout;\n    this.flatCoordinates = flatCoordinates;\n  }\n\n  /**\n   * @abstract\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  setCoordinates(coordinates, layout) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout|undefined} layout Layout.\n   * @param {Array<*>} coordinates Coordinates.\n   * @param {number} nesting Nesting.\n   * @protected\n   */\n  setLayout(layout, coordinates, nesting) {\n    /** @type {number} */\n    let stride;\n    if (layout) {\n      stride = getStrideForLayout(layout);\n    } else {\n      for (let i = 0; i < nesting; ++i) {\n        if (coordinates.length === 0) {\n          this.layout = 'XY';\n          this.stride = 2;\n          return;\n        }\n        coordinates = /** @type {Array} */ (coordinates[0]);\n      }\n      stride = coordinates.length;\n      layout = getLayoutForStride(stride);\n    }\n    this.layout = layout;\n    this.stride = stride;\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    if (this.flatCoordinates) {\n      transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n      this.changed();\n    }\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      rotate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        angle,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    if (sy === undefined) {\n      sy = sx;\n    }\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      scale(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        sx,\n        sy,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      translate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        deltaX,\n        deltaY,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n}\n\n/**\n * @param {number} stride Stride.\n * @return {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n */\nfunction getLayoutForStride(stride) {\n  let layout;\n  if (stride == 2) {\n    layout = 'XY';\n  } else if (stride == 3) {\n    layout = 'XYZ';\n  } else if (stride == 4) {\n    layout = 'XYZM';\n  }\n  return /** @type {import(\"./Geometry.js\").GeometryLayout} */ (layout);\n}\n\n/**\n * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  let stride;\n  if (layout == 'XY') {\n    stride = 2;\n  } else if (layout == 'XYZ' || layout == 'XYM') {\n    stride = 3;\n  } else if (layout == 'XYZM') {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, dest) {\n  const flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  }\n  const stride = simpleGeometry.getStride();\n  return transform2D(\n    flatCoordinates,\n    0,\n    flatCoordinates.length,\n    stride,\n    transform,\n    dest\n  );\n}\n\nexport default SimpleGeometry;\n","/**\n * @module ol/geom/flat/transform\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  transform,\n  dest\n) {\n  dest = dest ? dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const x = flatCoordinates[j];\n    const y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  angle,\n  anchor,\n  dest\n) {\n  dest = dest ? dest : [];\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  sx,\n  sy,\n  anchor,\n  dest\n) {\n  dest = dest ? dest : [];\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  deltaX,\n  deltaY,\n  dest\n) {\n  dest = dest ? dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n","/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(\n  flatCoordinates,\n  offset1,\n  offset2,\n  stride,\n  x,\n  y,\n  closestPoint\n) {\n  const x1 = flatCoordinates[offset1];\n  const y1 = flatCoordinates[offset1 + 1];\n  const dx = flatCoordinates[offset2] - x1;\n  const dy = flatCoordinates[offset2 + 1] - y1;\n  let offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(\n          flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i],\n          t\n        );\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (let i = 0; i < stride; ++i) {\n    closestPoint[i] = flatCoordinates[offset + i];\n  }\n  closestPoint.length = stride;\n}\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    const squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  max\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  max\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint\n) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  let i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[offset],\n      flatCoordinates[offset + 1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  let index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates,\n      index - stride,\n      index,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index +=\n        stride *\n        Math.max(\n          ((Math.sqrt(squaredDistance) - Math.sqrt(minSquaredDistance)) /\n            maxDelta) |\n            0,\n          1\n        );\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates,\n      end - stride,\n      offset,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n","/**\n * @module ol/geom/flat/deflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (let i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(\n  flatCoordinates,\n  offset,\n  coordinates,\n  stride\n) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    const coordinate = coordinates[i];\n    for (let j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>} [ends] Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatess,\n  stride,\n  ends\n) {\n  ends = ends ? ends : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatess.length; j < jj; ++j) {\n    const end = deflateCoordinates(\n      flatCoordinates,\n      offset,\n      coordinatess[j],\n      stride\n    );\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>} [endss] Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatesss,\n  stride,\n  endss\n) {\n  endss = endss ? endss : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    const ends = deflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      coordinatesss[j],\n      stride,\n      endss[i]\n    );\n    if (ends.length === 0) {\n      ends[0] = offset;\n    }\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredDistance, squaredSegmentDistance} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>} [simplifiedFlatCoordinates] Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  highQuality,\n  simplifiedFlatCoordinates\n) {\n  simplifiedFlatCoordinates =\n    simplifiedFlatCoordinates !== undefined ? simplifiedFlatCoordinates : [];\n  if (!highQuality) {\n    end = radialDistance(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    squaredTolerance,\n    simplifiedFlatCoordinates,\n    0\n  );\n  return simplifiedFlatCoordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  const n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array<number>} */\n  const markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array<number>} */\n  const stack = [offset, end - stride];\n  let index = 0;\n  while (stack.length > 0) {\n    const last = stack.pop();\n    const first = stack.pop();\n    let maxSquaredDistance = 0;\n    const x1 = flatCoordinates[first];\n    const y1 = flatCoordinates[first + 1];\n    const x2 = flatCoordinates[last];\n    const y2 = flatCoordinates[last + 1];\n    for (let i = first + stride; i < last; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      const squaredDistance = squaredSegmentDistance(x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (let i = 0; i < n; ++i) {\n    if (markers[i]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  let x2 = x1;\n  let y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  let x1 = snap(flatCoordinates[offset], tolerance);\n  let y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  let x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    const x3 = snap(flatCoordinates[offset], tolerance);\n    const y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    const dx1 = x2 - x1;\n    const dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    const dx2 = x3 - x1;\n    const dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if (\n      dx1 * dy2 == dy1 * dx2 &&\n      ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n      ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))\n    ) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n","/**\n * @module ol/geom/flat/inflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} [coordinates] Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  coordinates\n) {\n  coordinates = coordinates !== undefined ? coordinates : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} [coordinatess] Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  coordinatess\n) {\n  coordinatess = coordinatess !== undefined ? coordinatess : [];\n  let i = 0;\n  for (let j = 0, jj = ends.length; j < jj; ++j) {\n    const end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      coordinatess[i]\n    );\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} [coordinatesss]\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  coordinatesss\n) {\n  coordinatesss = coordinatesss !== undefined ? coordinatesss : [];\n  let i = 0;\n  for (let j = 0, jj = endss.length; j < jj; ++j) {\n    const ends = endss[j];\n    coordinatesss[i++] =\n      ends.length === 1 && ends[0] === offset\n        ? []\n        : inflateCoordinatesArray(\n            flatCoordinates,\n            offset,\n            ends,\n            stride,\n            coordinatesss[i]\n          );\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n","/**\n * @module ol/geom/flat/area\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  let twiceArea = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    twiceArea += y1 * x2 - x1 * y2;\n    x1 = x2;\n    y1 = y2;\n  }\n  return twiceArea / 2;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  let area = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  let area = 0;\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n","/**\n * @module ol/geom/LinearRing\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {linearRing as linearRingArea} from './flat/area.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nclass LinearRing extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LinearRing} Clone.\n   * @api\n   */\n  clone() {\n    return new LinearRing(this.flatCoordinates.slice(), this.layout);\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Return the area of the linear ring on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingArea(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the coordinates of the linear ring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LinearRing} Simplified LinearRing.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    return new LinearRing(simplifiedFlatCoordinates, 'XY');\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'LinearRing';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the linear ring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default LinearRing;\n","/**\n * @module ol/geom/Point\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {containsXY, createOrUpdateFromCoordinate} from '../extent.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nclass Point extends SimpleGeometry {\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n    this.setCoordinates(coordinates, layout);\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Point} Clone.\n   * @api\n   */\n  clone() {\n    const point = new Point(this.flatCoordinates.slice(), this.layout);\n    point.applyProperties(this);\n    return point;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[0],\n      flatCoordinates[1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      const stride = this.stride;\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinate of the point.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return !this.flatCoordinates ? [] : this.flatCoordinates.slice();\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'Point';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n  }\n\n  /**\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default Point;\n","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {ascending} from '../../array.js';\nimport {linearRingsContainsXY} from './contains.js';\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  flatCenters,\n  flatCentersOffset,\n  dest\n) {\n  let i, ii, x, x1, x2, y1, y2;\n  const y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array<number>} */\n  const intersections = [];\n  // Calculate intersections with the horizontal line\n  for (let r = 0, rr = ends.length; r < rr; ++r) {\n    const end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = ((y - y1) / (y2 - y1)) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  let pointX = NaN;\n  let maxSegmentLength = -Infinity;\n  intersections.sort(ascending);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    const segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (dest) {\n    dest.push(pointX, y, maxSegmentLength);\n    return dest;\n  }\n  return [pointX, y, maxSegmentLength];\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  flatCenters\n) {\n  let interiorPoints = [];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      flatCenters,\n      2 * i,\n      interiorPoints\n    );\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n","/**\n * @module ol/geom/flat/reverse\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (let i = 0; i < stride; ++i) {\n      const tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n","/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from './reverse.js';\n\n/**\n * Is the linear ring oriented clockwise in a coordinate system with a bottom-left\n * coordinate origin? For a coordinate system with a top-left coordinate origin,\n * the ring's orientation is clockwise when this function returns false.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // https://stackoverflow.com/q/1165647/clockwise-method#1165943\n  // https://github.com/OSGeo/gdal/blob/master/gdal/ogr/ogrlinearring.cpp\n  let edge = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge === 0 ? undefined : edge > 0;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingssAreOriented(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (!linearRingsAreOriented(flatCoordinates, offset, ends, stride, right)) {\n      return false;\n    }\n    if (ends.length) {\n      offset = ends[ends.length - 1];\n    }\n  }\n  return true;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    const reverse =\n      i === 0\n        ? (right && isClockwise) || (!right && !isClockwise)\n        : (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates,\n      offset,\n      endss[i],\n      stride,\n      right\n    );\n  }\n  return offset;\n}\n\n/**\n * Return a two-dimensional endss\n * @param {Array<number>} flatCoordinates Flat coordinates\n * @param {Array<number>} ends Linear ring end indexes\n * @return {Array<Array<number>>} Two dimensional endss array that can\n * be used to construct a MultiPolygon\n */\nexport function inflateEnds(flatCoordinates, ends) {\n  const endss = [];\n  let offset = 0;\n  let prevEndIndex = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    // classifies an array of rings into polygons with outer rings and holes\n    if (!linearRingIsClockwise(flatCoordinates, offset, end, 2)) {\n      endss.push(ends.slice(prevEndIndex, i + 1));\n    } else {\n      if (endss.length === 0) {\n        continue;\n      }\n      endss[endss.length - 1].push(ends[prevEndIndex]);\n    }\n    prevEndIndex = i + 1;\n    offset = end;\n  }\n  return endss;\n}\n","/**\n * @module ol/geom/Polygon\n */\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY, getCenter, isEmpty} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointOfArray} from './flat/interiorpoint.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingArray} from './flat/intersectsextent.js';\nimport {linearRingsAreOriented, orientLinearRings} from './flat/orient.js';\nimport {linearRings as linearRingsArea} from './flat/area.js';\nimport {linearRingsContainsXY} from './flat/contains.js';\nimport {modulo} from '../math.js';\nimport {quantizeArray} from './flat/simplify.js';\nimport {offset as sphereOffset} from '../sphere.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nclass Polygon extends SimpleGeometry {\n  /**\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n   *     Array of linear rings that define the polygon. The first linear ring of the\n   *     array defines the outer-boundary or surface of the polygon. Each subsequent\n   *     linear ring defines a hole in the surface of the polygon. A linear ring is\n   *     an array of vertices' coordinates where the first coordinate and the last are\n   *     equivalent. (For internal use, flat coordinates in combination with\n   *     `layout` and `ends` are also accepted.)\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<number>} [ends] Ends (for internal use with flat coordinates).\n   */\n  constructor(coordinates, layout, ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatInteriorPoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (layout !== undefined && ends) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.ends_ = ends;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed linear ring to this polygon.\n   * @param {LinearRing} linearRing Linear ring.\n   * @api\n   */\n  appendLinearRing(linearRing) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Polygon} Clone.\n   * @api\n   */\n  clone() {\n    const polygon = new Polygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice()\n    );\n    polygon.applyProperties(this);\n    return polygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingsContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      x,\n      y\n    );\n  }\n\n  /**\n   * Return the area of the polygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingsArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for polygons.\n   *\n   * @param {boolean} [right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates(right) {\n    let flatCoordinates;\n    if (right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * @return {Array<number>} Interior point.\n   */\n  getFlatInteriorPoint() {\n    if (this.flatInteriorPointRevision_ != this.getRevision()) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoint_ = getInteriorPointOfArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.ends_,\n        this.stride,\n        flatCenter,\n        0\n      );\n      this.flatInteriorPointRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoint_;\n  }\n\n  /**\n   * Return an interior point of the polygon.\n   * @return {Point} Interior point as XYM coordinate, where M is the\n   * length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoint() {\n    return new Point(this.getFlatInteriorPoint(), 'XYM');\n  }\n\n  /**\n   * Return the number of rings of the polygon,  this includes the exterior\n   * ring and any interior rings.\n   *\n   * @return {number} Number of rings.\n   * @api\n   */\n  getLinearRingCount() {\n    return this.ends_.length;\n  }\n\n  /**\n   * Return the Nth linear ring of the polygon geometry. Return `null` if the\n   * given index is out of range.\n   * The exterior linear ring is available at index `0` and the interior rings\n   * at index `1` and beyond.\n   *\n   * @param {number} index Index.\n   * @return {LinearRing|null} Linear ring.\n   * @api\n   */\n  getLinearRing(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LinearRing(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index]\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the linear rings of the polygon.\n   * @return {Array<LinearRing>} Linear rings.\n   * @api\n   */\n  getLinearRings() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const linearRings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const linearRing = new LinearRing(\n        flatCoordinates.slice(offset, end),\n        layout\n      );\n      linearRings.push(linearRing);\n      offset = end;\n    }\n    return linearRings;\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRings(\n          this.orientedFlatCoordinates_,\n          0,\n          this.ends_,\n          this.stride\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Polygon} Simplified Polygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = quantizeArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds\n    );\n    return new Polygon(simplifiedFlatCoordinates, 'XY', simplifiedEnds);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'Polygon';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the polygon.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default Polygon;\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices in meters.\n * @param {number} [n] Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number} [sphereRadius] Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, n, sphereRadius) {\n  n = n ? n : 32;\n  /** @type {Array<number>} */\n  const flatCoordinates = [];\n  for (let i = 0; i < n; ++i) {\n    extend(\n      flatCoordinates,\n      sphereOffset(center, radius, (2 * Math.PI * i) / n, sphereRadius)\n    );\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  if (isEmpty(extent)) {\n    throw new Error('Cannot create polygon from empty extent');\n  }\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const flatCoordinates = [\n    minX,\n    minY,\n    minX,\n    maxY,\n    maxX,\n    maxY,\n    maxX,\n    minY,\n    minX,\n    minY,\n  ];\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number} [sides] Number of sides of the polygon. Default is 32.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, sides, angle) {\n  sides = sides ? sides : 32;\n  const stride = circle.getStride();\n  const layout = circle.getLayout();\n  const center = circle.getCenter();\n  const arrayLength = stride * (sides + 1);\n  const flatCoordinates = new Array(arrayLength);\n  for (let i = 0; i < arrayLength; i += stride) {\n    flatCoordinates[i] = 0;\n    flatCoordinates[i + 1] = 0;\n    for (let j = 2; j < stride; j++) {\n      flatCoordinates[i + j] = center[j];\n    }\n  }\n  const ends = [flatCoordinates.length];\n  const polygon = new Polygon(flatCoordinates, layout, ends);\n  makeRegular(polygon, center, circle.getRadius(), angle);\n  return polygon;\n}\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, angle) {\n  const flatCoordinates = polygon.getFlatCoordinates();\n  const stride = polygon.getStride();\n  const sides = flatCoordinates.length / stride - 1;\n  const startAngle = angle ? angle : 0;\n  for (let i = 0; i <= sides; ++i) {\n    const offset = i * stride;\n    const angle = startAngle + (modulo(i, sides) * 2 * Math.PI) / sides;\n    flatCoordinates[offset] = center[0] + radius * Math.cos(angle);\n    flatCoordinates[offset + 1] = center[1] + radius * Math.sin(angle);\n  }\n  polygon.changed();\n}\n","/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const outside = forEachCorner(\n    extent,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function (coordinate) {\n      return !linearRingContainsXY(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        coordinate[0],\n        coordinate[1]\n      );\n    }\n  );\n  return !outside;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  x,\n  y\n) {\n  // https://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  let wn = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  x,\n  y\n) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)\n    ) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  x,\n  y\n) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {\n  containsExtent,\n  createEmpty,\n  extendFlatCoordinates,\n  intersects,\n  intersectsSegment,\n} from '../../extent.js';\nimport {forEach as forEachSegment} from './segments.js';\nimport {linearRingContainsExtent, linearRingContainsXY} from './contains.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const coordinatesExtent = extendFlatCoordinates(\n    createEmpty(),\n    flatCoordinates,\n    offset,\n    end,\n    stride\n  );\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (containsExtent(extent, coordinatesExtent)) {\n    return true;\n  }\n  if (coordinatesExtent[0] >= extent[0] && coordinatesExtent[2] <= extent[2]) {\n    return true;\n  }\n  if (coordinatesExtent[1] >= extent[1] && coordinatesExtent[3] <= extent[3]) {\n    return true;\n  }\n  return forEachSegment(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function (point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    }\n  );\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    if (\n      intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsExtent(\n        flatCoordinates,\n        ends[i - 1],\n        ends[i],\n        stride,\n        extent\n      )\n    ) {\n      if (\n        !intersectsLineString(\n          flatCoordinates,\n          ends[i - 1],\n          ends[i],\n          stride,\n          extent\n        )\n      ) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/segments\n */\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n  let ret;\n  offset += stride;\n  for (; offset < end; offset += stride) {\n    ret = callback(\n      flatCoordinates.slice(offset - stride, offset),\n      flatCoordinates.slice(offset, offset + stride)\n    );\n    if (ret) {\n      return ret;\n    }\n  }\n  return false;\n}\n","/**\n * @module ol/has\n */\n\nconst ua =\n  typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined'\n    ? navigator.userAgent.toLowerCase()\n    : '';\n\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport const FIREFOX = ua.includes('firefox');\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport const SAFARI = ua.includes('safari') && !ua.includes('chrom');\n\n/**\n * https://bugs.webkit.org/show_bug.cgi?id=237906\n * @type {boolean}\n */\nexport const SAFARI_BUG_237906 =\n  SAFARI &&\n  (ua.includes('version/15.4') ||\n    /cpu (os|iphone os) 15_4 like mac os x/.test(ua));\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport const WEBKIT = ua.includes('webkit') && !ua.includes('edge');\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport const MAC = ua.includes('macintosh');\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport const DEVICE_PIXEL_RATIO =\n  typeof devicePixelRatio !== 'undefined' ? devicePixelRatio : 1;\n\n/**\n * The execution context is a worker with OffscreenCanvas available.\n * @const\n * @type {boolean}\n */\nexport const WORKER_OFFSCREEN_CANVAS =\n  typeof WorkerGlobalScope !== 'undefined' &&\n  typeof OffscreenCanvas !== 'undefined' &&\n  self instanceof WorkerGlobalScope; //eslint-disable-line\n\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\nexport const IMAGE_DECODE =\n  typeof Image !== 'undefined' && Image.prototype.decode;\n\n/**\n * createImageBitmap() is supported.\n * @type {boolean}\n */\nexport const CREATE_IMAGE_BITMAP = typeof createImageBitmap === 'function';\n\n/**\n * @type {boolean}\n */\nexport const PASSIVE_EVENT_LISTENERS = (function () {\n  let passive = false;\n  try {\n    const options = Object.defineProperty({}, 'passive', {\n      get: function () {\n        passive = true;\n      },\n    });\n\n    window.addEventListener('_', null, options);\n    window.removeEventListener('_', null, options);\n  } catch (error) {\n    // passive not supported\n  }\n  return passive;\n})();\n","/**\n * @module ol/layer/Base\n */\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {clamp} from '../math.js';\n\n/**\n * A css color, or a function called with a view resolution returning a css color.\n *\n * @typedef {string|function(number):string} BackgroundColor\n * @api\n */\n\n/**\n * @typedef {import(\"../ObjectEventType\").Types|'change:extent'|'change:maxResolution'|'change:maxZoom'|\n *    'change:minResolution'|'change:minZoom'|'change:opacity'|'change:visible'|'change:zIndex'} BaseLayerObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<BaseLayerObjectEventTypes, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|BaseLayerObjectEventTypes, Return>} BaseLayerOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number | undefined} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base~BaseLayer} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object~BaseObject} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nclass BaseLayer extends BaseObject {\n  /**\n   * @param {Options} options Layer options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseLayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {BackgroundColor|false}\n     * @private\n     */\n    this.background_ = options.background;\n\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = Object.assign({}, options);\n    if (typeof options.properties === 'object') {\n      delete properties.properties;\n      Object.assign(properties, options.properties);\n    }\n\n    properties[LayerProperty.OPACITY] =\n      options.opacity !== undefined ? options.opacity : 1;\n    assert(\n      typeof properties[LayerProperty.OPACITY] === 'number',\n      'Layer opacity must be a number'\n    );\n\n    properties[LayerProperty.VISIBLE] =\n      options.visible !== undefined ? options.visible : true;\n    properties[LayerProperty.Z_INDEX] = options.zIndex;\n    properties[LayerProperty.MAX_RESOLUTION] =\n      options.maxResolution !== undefined ? options.maxResolution : Infinity;\n    properties[LayerProperty.MIN_RESOLUTION] =\n      options.minResolution !== undefined ? options.minResolution : 0;\n    properties[LayerProperty.MIN_ZOOM] =\n      options.minZoom !== undefined ? options.minZoom : -Infinity;\n    properties[LayerProperty.MAX_ZOOM] =\n      options.maxZoom !== undefined ? options.maxZoom : Infinity;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.className_ =\n      properties.className !== undefined ? properties.className : 'ol-layer';\n    delete properties.className;\n\n    this.setProperties(properties);\n\n    /**\n     * @type {import(\"./Layer.js\").State}\n     * @private\n     */\n    this.state_ = null;\n  }\n\n  /**\n   * Get the background for this layer.\n   * @return {BackgroundColor|false} Layer background.\n   */\n  getBackground() {\n    return this.background_;\n  }\n\n  /**\n   * @return {string} CSS class name.\n   */\n  getClassName() {\n    return this.className_;\n  }\n\n  /**\n   * This method is not meant to be called by layers or layer renderers because the state\n   * is incorrect if the layer is included in a layer group.\n   *\n   * @param {boolean} [managed] Layer is managed.\n   * @return {import(\"./Layer.js\").State} Layer state.\n   */\n  getLayerState(managed) {\n    /** @type {import(\"./Layer.js\").State} */\n    const state =\n      this.state_ ||\n      /** @type {?} */ ({\n        layer: this,\n        managed: managed === undefined ? true : managed,\n      });\n    const zIndex = this.getZIndex();\n    state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n    state.visible = this.getVisible();\n    state.extent = this.getExtent();\n    state.zIndex = zIndex === undefined && !state.managed ? Infinity : zIndex;\n    state.maxResolution = this.getMaxResolution();\n    state.minResolution = Math.max(this.getMinResolution(), 0);\n    state.minZoom = this.getMinZoom();\n    state.maxZoom = this.getMaxZoom();\n    this.state_ = state;\n\n    return state;\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be\n   *     modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer\n   *     states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(states) {\n    return abstract();\n  }\n\n  /**\n   * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n   * will be visible regardless of extent.\n   * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n   * @observable\n   * @api\n   */\n  getExtent() {\n    return /** @type {import(\"../extent.js\").Extent|undefined} */ (\n      this.get(LayerProperty.EXTENT)\n    );\n  }\n\n  /**\n   * Return the maximum resolution of the layer. Returns Infinity if\n   * the layer has no maximum resolution set.\n   * @return {number} The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMaxResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum resolution of the layer. Returns 0 if\n   * the layer has no minimum resolution set.\n   * @return {number} The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMinResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum zoom level of the layer. Returns -Infinity if\n   * the layer has no minimum zoom set.\n   * @return {number} The minimum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_ZOOM));\n  }\n\n  /**\n   * Return the maximum zoom level of the layer. Returns Infinity if\n   * the layer has no maximum zoom set.\n   * @return {number} The maximum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_ZOOM));\n  }\n\n  /**\n   * Return the opacity of the layer (between 0 and 1).\n   * @return {number} The opacity of the layer.\n   * @observable\n   * @api\n   */\n  getOpacity() {\n    return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    return abstract();\n  }\n\n  /**\n   * Return the value of this layer's `visible` property. To find out whether the layer\n   * is visible on a map, use `isVisible()` instead.\n   * @return {boolean} The value of the `visible` property of the layer.\n   * @observable\n   * @api\n   */\n  getVisible() {\n    return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n  }\n\n  /**\n   * Return the Z-index of the layer, which is used to order layers before\n   * rendering. Returns undefined if the layer is unmanaged.\n   * @return {number|undefined} The Z-index of the layer.\n   * @observable\n   * @api\n   */\n  getZIndex() {\n    return /** @type {number|undefined} */ (this.get(LayerProperty.Z_INDEX));\n  }\n\n  /**\n   * Sets the background color.\n   * @param {BackgroundColor} [background] Background color.\n   */\n  setBackground(background) {\n    this.background_ = background;\n    this.changed();\n  }\n\n  /**\n   * Set the extent at which the layer is visible.  If `undefined`, the layer\n   * will be visible at all extents.\n   * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n   * @observable\n   * @api\n   */\n  setExtent(extent) {\n    this.set(LayerProperty.EXTENT, extent);\n  }\n\n  /**\n   * Set the maximum resolution at which the layer is visible.\n   * @param {number} maxResolution The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMaxResolution(maxResolution) {\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n  }\n\n  /**\n   * Set the minimum resolution at which the layer is visible.\n   * @param {number} minResolution The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMinResolution(minResolution) {\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n  }\n\n  /**\n   * Set the maximum zoom (exclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} maxZoom The maximum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMaxZoom(maxZoom) {\n    this.set(LayerProperty.MAX_ZOOM, maxZoom);\n  }\n\n  /**\n   * Set the minimum zoom (inclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} minZoom The minimum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMinZoom(minZoom) {\n    this.set(LayerProperty.MIN_ZOOM, minZoom);\n  }\n\n  /**\n   * Set the opacity of the layer, allowed values range from 0 to 1.\n   * @param {number} opacity The opacity of the layer.\n   * @observable\n   * @api\n   */\n  setOpacity(opacity) {\n    assert(typeof opacity === 'number', 'Layer opacity must be a number');\n    this.set(LayerProperty.OPACITY, opacity);\n  }\n\n  /**\n   * Set the visibility of the layer (`true` or `false`).\n   * @param {boolean} visible The visibility of the layer.\n   * @observable\n   * @api\n   */\n  setVisible(visible) {\n    this.set(LayerProperty.VISIBLE, visible);\n  }\n\n  /**\n   * Set Z-index of the layer, which is used to order layers before rendering.\n   * The default Z-index is 0.\n   * @param {number} zindex The z-index of the layer.\n   * @observable\n   * @api\n   */\n  setZIndex(zindex) {\n    this.set(LayerProperty.Z_INDEX, zindex);\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.state_) {\n      this.state_.layer = null;\n      this.state_ = null;\n    }\n    super.disposeInternal();\n  }\n}\n\nexport default BaseLayer;\n","/**\n * @module ol/layer/Layer\n */\nimport BaseLayer from './Base.js';\nimport EventType from '../events/EventType.js';\nimport LayerProperty from './Property.js';\nimport RenderEventType from '../render/EventType.js';\nimport View from '../View.js';\nimport {assert} from '../asserts.js';\nimport {intersects} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(import(\"../Map.js\").FrameState):HTMLElement} RenderFunction\n */\n\n/**\n * @typedef {'sourceready'|'change:source'} LayerEventType\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     LayerEventType, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|LayerEventType|\n *     import(\"../render/EventType\").LayerRenderEventTypes, Return>} LayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {SourceType} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer~Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../Map.js\").default|null} [map] Map.\n * @property {RenderFunction} [render] Render function. Takes the frame state as input and is expected to return an\n * HTML element. Will overwrite the default rendering for the layer.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./Layer.js\").default} layer Layer.\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {boolean} visible Visible.\n * @property {boolean} managed Managed.\n * @property {import(\"../extent.js\").Extent} [extent] Extent.\n * @property {number | undefined} zIndex ZIndex.\n * @property {number} maxResolution Maximum resolution.\n * @property {number} minResolution Minimum resolution.\n * @property {number} minZoom Minimum zoom.\n * @property {number} maxZoom Maximum zoom.\n */\n\n/**\n * @classdesc\n * Base class from which all layer types are derived. This should only be instantiated\n * in the case where a custom layer is added to the map with a custom `render` function.\n * Such a function can be specified in the `options` object, and is expected to return an HTML element.\n *\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * Components like {@link module:ol/interaction/Draw~Draw} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * [layer.setMap()]{@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n * A `sourceready` event is fired when the layer's source is ready.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n * @fires import(\"../events/Event.js\").BaseEvent#sourceready\n *\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @template {import(\"../renderer/Layer.js\").default} [RendererType=import(\"../renderer/Layer.js\").default]\n * @api\n */\nclass Layer extends BaseLayer {\n  /**\n   * @param {Options<SourceType>} options Layer options.\n   */\n  constructor(options) {\n    const baseOptions = Object.assign({}, options);\n    delete baseOptions.source;\n\n    super(baseOptions);\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {LayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapPrecomposeKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapRenderKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceChangeKey_ = null;\n\n    /**\n     * @private\n     * @type {RendererType}\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.sourceReady_ = false;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.rendered = false;\n\n    // Overwrite default render method with a custom one\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.map) {\n      this.setMap(options.map);\n    }\n\n    this.addChangeListener(\n      LayerProperty.SOURCE,\n      this.handleSourcePropertyChange_\n    );\n\n    const source = options.source\n      ? /** @type {SourceType} */ (options.source)\n      : null;\n    this.setSource(source);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    array = array ? array : [];\n    array.push(this);\n    return array;\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(states) {\n    states = states ? states : [];\n    states.push(this.getLayerState());\n    return states;\n  }\n\n  /**\n   * Get the layer source.\n   * @return {SourceType|null} The layer source (or `null` if not yet set).\n   * @observable\n   * @api\n   */\n  getSource() {\n    return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n  }\n\n  /**\n   * @return {SourceType|null} The source being rendered.\n   */\n  getRenderSource() {\n    return this.getSource();\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    const source = this.getSource();\n    return !source ? 'undefined' : source.getState();\n  }\n\n  /**\n   * @private\n   */\n  handleSourceChange_() {\n    this.changed();\n    if (this.sourceReady_ || this.getSource().getState() !== 'ready') {\n      return;\n    }\n    this.sourceReady_ = true;\n    this.dispatchEvent('sourceready');\n  }\n\n  /**\n   * @private\n   */\n  handleSourcePropertyChange_() {\n    if (this.sourceChangeKey_) {\n      unlistenByKey(this.sourceChangeKey_);\n      this.sourceChangeKey_ = null;\n    }\n    this.sourceReady_ = false;\n    const source = this.getSource();\n    if (source) {\n      this.sourceChangeKey_ = listen(\n        source,\n        EventType.CHANGE,\n        this.handleSourceChange_,\n        this\n      );\n      if (source.getState() === 'ready') {\n        this.sourceReady_ = true;\n        setTimeout(() => {\n          this.dispatchEvent('sourceready');\n        }, 0);\n      }\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    if (!this.renderer_) {\n      return Promise.resolve([]);\n    }\n    return this.renderer_.getFeatures(pixel);\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    if (!this.renderer_ || !this.rendered) {\n      return null;\n    }\n    return this.renderer_.getData(pixel);\n  }\n\n  /**\n   * The layer is visible on the map view, i.e. within its min/max resolution or zoom and\n   * extent, not set to `visible: false`, and not inside a layer group that is set\n   * to `visible: false`.\n   * @param {View|import(\"../View.js\").ViewStateLayerStateExtent} [view] View or {@link import(\"../Map.js\").FrameState}.\n   * Only required when the layer is not added to a map.\n   * @return {boolean} The layer is visible in the map view.\n   * @api\n   */\n  isVisible(view) {\n    let frameState;\n    const map = this.getMapInternal();\n    if (!view && map) {\n      view = map.getView();\n    }\n    if (view instanceof View) {\n      frameState = {\n        viewState: view.getState(),\n        extent: view.calculateExtent(),\n      };\n    } else {\n      frameState = view;\n    }\n    if (!frameState.layerStatesArray && map) {\n      frameState.layerStatesArray = map.getLayerGroup().getLayerStatesArray();\n    }\n    let layerState;\n    if (frameState.layerStatesArray) {\n      layerState = frameState.layerStatesArray.find(\n        (layerState) => layerState.layer === this\n      );\n    } else {\n      layerState = this.getLayerState();\n    }\n\n    const layerExtent = this.getExtent();\n\n    return (\n      inView(layerState, frameState.viewState) &&\n      (!layerExtent || intersects(layerExtent, frameState.extent))\n    );\n  }\n\n  /**\n   * Get the attributions of the source of this layer for the given view.\n   * @param {View|import(\"../View.js\").ViewStateLayerStateExtent} [view] View or {@link import(\"../Map.js\").FrameState}.\n   * Only required when the layer is not added to a map.\n   * @return {Array<string>} Attributions for this layer at the given view.\n   * @api\n   */\n  getAttributions(view) {\n    if (!this.isVisible(view)) {\n      return [];\n    }\n    let getAttributions;\n    const source = this.getSource();\n    if (source) {\n      getAttributions = source.getAttributions();\n    }\n    if (!getAttributions) {\n      return [];\n    }\n    const frameState =\n      view instanceof View ? view.getViewStateAndExtent() : view;\n    let attributions = getAttributions(frameState);\n    if (!Array.isArray(attributions)) {\n      attributions = [attributions];\n    }\n    return attributions;\n  }\n\n  /**\n   * In charge to manage the rendering of the layer. One layer type is\n   * bounded with one layer renderer.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target which the renderer may (but need not) use\n   * for rendering its content.\n   * @return {HTMLElement|null} The rendered element.\n   */\n  render(frameState, target) {\n    const layerRenderer = this.getRenderer();\n\n    if (layerRenderer.prepareFrame(frameState)) {\n      this.rendered = true;\n      return layerRenderer.renderFrame(frameState, target);\n    }\n    return null;\n  }\n\n  /**\n   * Called when a layer is not visible during a map render.\n   */\n  unrender() {\n    this.rendered = false;\n  }\n\n  /**\n   * For use inside the library only.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMapInternal(map) {\n    if (!map) {\n      this.unrender();\n    }\n    this.set(LayerProperty.MAP, map);\n  }\n\n  /**\n   * For use inside the library only.\n   * @return {import(\"../Map.js\").default|null} Map.\n   */\n  getMapInternal() {\n    return this.get(LayerProperty.MAP);\n  }\n\n  /**\n   * Sets the layer to be rendered on top of other layers on a map. The map will\n   * not manage this layer in its layers collection. This\n   * is useful for temporary layers. To remove an unmanaged layer from the map,\n   * use `#setMap(null)`.\n   *\n   * To add the layer to a map and have it managed by the map, use\n   * {@link module:ol/Map~Map#addLayer} instead.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.mapPrecomposeKey_) {\n      unlistenByKey(this.mapPrecomposeKey_);\n      this.mapPrecomposeKey_ = null;\n    }\n    if (!map) {\n      this.changed();\n    }\n    if (this.mapRenderKey_) {\n      unlistenByKey(this.mapRenderKey_);\n      this.mapRenderKey_ = null;\n    }\n    if (map) {\n      this.mapPrecomposeKey_ = listen(\n        map,\n        RenderEventType.PRECOMPOSE,\n        function (evt) {\n          const renderEvent =\n            /** @type {import(\"../render/Event.js\").default} */ (evt);\n          const layerStatesArray = renderEvent.frameState.layerStatesArray;\n          const layerState = this.getLayerState(false);\n          assert(\n            !layerStatesArray.some(function (arrayLayerState) {\n              return arrayLayerState.layer === layerState.layer;\n            }),\n            'A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both.'\n          );\n          layerStatesArray.push(layerState);\n        },\n        this\n      );\n      this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the layer source.\n   * @param {SourceType|null} source The layer source.\n   * @observable\n   * @api\n   */\n  setSource(source) {\n    this.set(LayerProperty.SOURCE, source);\n  }\n\n  /**\n   * Get the renderer for this layer.\n   * @return {RendererType|null} The layer renderer.\n   */\n  getRenderer() {\n    if (!this.renderer_) {\n      this.renderer_ = this.createRenderer();\n    }\n    return this.renderer_;\n  }\n\n  /**\n   * @return {boolean} The layer has a renderer.\n   */\n  hasRenderer() {\n    return !!this.renderer_;\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {RendererType} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.renderer_) {\n      this.renderer_.dispose();\n      delete this.renderer_;\n    }\n\n    this.setSource(null);\n    super.disposeInternal();\n  }\n}\n\n/**\n * Return `true` if the layer is visible and if the provided view state\n * has resolution and zoom levels that are in range of the layer's min/max.\n * @param {State} layerState Layer state.\n * @param {import(\"../View.js\").State} viewState View state.\n * @return {boolean} The layer is visible at the given view state.\n */\nexport function inView(layerState, viewState) {\n  if (!layerState.visible) {\n    return false;\n  }\n  const resolution = viewState.resolution;\n  if (\n    resolution < layerState.minResolution ||\n    resolution >= layerState.maxResolution\n  ) {\n    return false;\n  }\n  const zoom = viewState.zoom;\n  return zoom > layerState.minZoom && zoom <= layerState.maxZoom;\n}\n\nexport default Layer;\n","/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  MAX_ZOOM: 'maxZoom',\n  MIN_ZOOM: 'minZoom',\n  SOURCE: 'source',\n  MAP: 'map',\n};\n","/**\n * @module ol/layer/TileProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  PRELOAD: 'preload',\n  USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError',\n};\n","/**\n * @module ol/layer/BaseTile\n */\nimport Layer from './Layer.js';\nimport TileProperty from './TileProperty.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|\n *   import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError'|import(\"../render/EventType\").LayerRenderEventTypes, Return>} BaseTileLayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {TileSourceType} [source] Source for this layer.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link import(\"../Map.js\").default#addLayer map.addLayer()}.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @template {import(\"../renderer/Layer.js\").default} RendererType\n * @extends {Layer<TileSourceType, RendererType>}\n * @api\n */\nclass BaseTileLayer extends Layer {\n  /**\n   * @param {Options<TileSourceType>} [options] Tile layer options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n    super(baseOptions);\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseTileLayerOnSignature<void>}\n     */\n    this.un;\n\n    this.setPreload(options.preload !== undefined ? options.preload : 0);\n    this.setUseInterimTilesOnError(\n      options.useInterimTilesOnError !== undefined\n        ? options.useInterimTilesOnError\n        : true\n    );\n  }\n\n  /**\n   * Return the level as number to which we will preload tiles up to.\n   * @return {number} The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  getPreload() {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  }\n\n  /**\n   * Set the level as number to which we will preload tiles up to.\n   * @param {number} preload The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  setPreload(preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  }\n\n  /**\n   * Whether we use interim tiles on error.\n   * @return {boolean} Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  getUseInterimTilesOnError() {\n    return /** @type {boolean} */ (\n      this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR)\n    );\n  }\n\n  /**\n   * Set whether we use interim tiles on error.\n   * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  setUseInterimTilesOnError(useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  }\n\n  /**\n   * Get data for a pixel location.  The return type depends on the source data.  For image tiles,\n   * a four element RGBA array will be returned.  For data tiles, the array length will match the\n   * number of bands in the dataset.  For requests outside the layer extent, `null` will be returned.\n   * Data for a image tiles can only be retrieved if the source's `crossOrigin` property is set.\n   *\n   * ```js\n   * // display layer data on every pointer move\n   * map.on('pointermove', (event) => {\n   *   console.log(layer.getData(event.pixel));\n   * });\n   * ```\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   * @api\n   */\n  getData(pixel) {\n    return super.getData(pixel);\n  }\n}\n\nexport default BaseTileLayer;\n","/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/renderer/Layer\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport {abstract} from '../util.js';\n\n/**\n * @template {import(\"../layer/Layer.js\").default} LayerType\n */\nclass LayerRenderer extends Observable {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super();\n\n    /**\n     * The renderer is initialized and ready to render.\n     * @type {boolean}\n     */\n    this.ready = true;\n\n    /** @private */\n    this.boundHandleImageChange_ = this.handleImageChange_.bind(this);\n\n    /**\n     * @protected\n     * @type {LayerType}\n     */\n    this.layer_ = layer;\n\n    /**\n     * @type {import(\"../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    return abstract();\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    return null;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return abstract();\n  }\n\n  /**\n   * Render the layer.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement|null} target Target that may be used to render content to.\n   * @return {HTMLElement|null} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    return abstract();\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (!tiles[zoom]) {\n      tiles[zoom] = {};\n    }\n    tiles[zoom][tile.tileCoord.toString()] = tile;\n    return undefined;\n  }\n\n  /**\n   * Create a function that adds loaded tiles to the tile lookup.\n   * @param {import(\"../source/Tile.js\").default} source Tile source.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n   *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n   * @protected\n   */\n  createLoadedTileFinder(source, projection, tiles) {\n    return (\n      /**\n       * @param {number} zoom Zoom level.\n       * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n       * @return {boolean} The tile range is fully loaded.\n       */\n      (zoom, tileRange) => {\n        const callback = this.loadedTileCallback.bind(this, tiles, zoom);\n        return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n      }\n    );\n  }\n  /**\n   * @abstract\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"./Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    return undefined;\n  }\n\n  /**\n   * @return {LayerType} Layer.\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @abstract\n   */\n  handleFontsChanged() {}\n\n  /**\n   * Handle changes in image state.\n   * @param {import(\"../events/Event.js\").default} event Image change event.\n   * @private\n   */\n  handleImageChange_(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    if (\n      image.getState() === ImageState.LOADED ||\n      image.getState() === ImageState.ERROR\n    ) {\n      this.renderIfReadyAndVisible();\n    }\n  }\n\n  /**\n   * Load the image if not already loaded, and register the image change\n   * listener if needed.\n   * @param {import(\"../Image.js\").default} image Image.\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n   * @protected\n   */\n  loadImage(image) {\n    let imageState = image.getState();\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n      image.addEventListener(EventType.CHANGE, this.boundHandleImageChange_);\n    }\n    if (imageState == ImageState.IDLE) {\n      image.load();\n      imageState = image.getState();\n    }\n    return imageState == ImageState.LOADED;\n  }\n\n  /**\n   * @protected\n   */\n  renderIfReadyAndVisible() {\n    const layer = this.getLayer();\n    if (layer && layer.getVisible() && layer.getSourceState() === 'ready') {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    delete this.layer_;\n    super.disposeInternal();\n  }\n}\n\nexport default LayerRenderer;\n","/**\n * @module ol/renderer/canvas/Layer\n */\nimport LayerRenderer from '../Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {asArray} from '../../color.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {equals} from '../../array.js';\nimport {\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n} from '../../extent.js';\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet pixelContext = null;\n\nfunction createPixelContext() {\n  pixelContext = createCanvasContext2D(1, 1, undefined, {\n    willReadFrequently: true,\n  });\n}\n\n/**\n * @abstract\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n * @extends {LayerRenderer<LayerType>}\n */\nclass CanvasLayerRenderer extends LayerRenderer {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.container = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedResolution;\n\n    /**\n     * A temporary transform.  The values in this transform should only be used in a\n     * function that sets the values.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tempTransform = createTransform();\n\n    /**\n     * The transform for rendered pixels to viewport CSS pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.pixelTransform = createTransform();\n\n    /**\n     * The transform for viewport CSS pixels to rendered pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.inversePixelTransform = createTransform();\n\n    /**\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = null;\n\n    /**\n     * @type {boolean}\n     */\n    this.containerReused = false;\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.pixelContext_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"../../Map.js\").FrameState|null}\n     */\n    this.frameState = null;\n  }\n\n  /**\n   * @param {import('../../DataTile.js').ImageLike} image Image.\n   * @param {number} col The column index.\n   * @param {number} row The row index.\n   * @return {Uint8ClampedArray|null} The image data.\n   */\n  getImageData(image, col, row) {\n    if (!pixelContext) {\n      createPixelContext();\n    }\n    pixelContext.clearRect(0, 0, 1, 1);\n\n    let data;\n    try {\n      pixelContext.drawImage(image, col, row, 1, 1, 0, 0, 1, 1);\n      data = pixelContext.getImageData(0, 0, 1, 1).data;\n    } catch (err) {\n      pixelContext = null;\n      return null;\n    }\n    return data;\n  }\n\n  /**\n   * @param {import('../../Map.js').FrameState} frameState Frame state.\n   * @return {string} Background color.\n   */\n  getBackground(frameState) {\n    const layer = this.getLayer();\n    let background = layer.getBackground();\n    if (typeof background === 'function') {\n      background = background(frameState.viewState.resolution);\n    }\n    return background || undefined;\n  }\n\n  /**\n   * Get a rendering container from an existing target, if compatible.\n   * @param {HTMLElement} target Potential render target.\n   * @param {string} transform CSS Transform.\n   * @param {string} [backgroundColor] Background color.\n   */\n  useContainer(target, transform, backgroundColor) {\n    const layerClassName = this.getLayer().getClassName();\n    let container, context;\n    if (\n      target &&\n      target.className === layerClassName &&\n      (!backgroundColor ||\n        (target &&\n          target.style.backgroundColor &&\n          equals(\n            asArray(target.style.backgroundColor),\n            asArray(backgroundColor)\n          )))\n    ) {\n      const canvas = target.firstElementChild;\n      if (canvas instanceof HTMLCanvasElement) {\n        context = canvas.getContext('2d');\n      }\n    }\n    if (context && context.canvas.style.transform === transform) {\n      // Container of the previous layer renderer can be used.\n      this.container = target;\n      this.context = context;\n      this.containerReused = true;\n    } else if (this.containerReused) {\n      // Previously reused container cannot be used any more.\n      this.container = null;\n      this.context = null;\n      this.containerReused = false;\n    } else if (this.container) {\n      this.container.style.backgroundColor = null;\n    }\n    if (!this.container) {\n      container = document.createElement('div');\n      container.className = layerClassName;\n      let style = container.style;\n      style.position = 'absolute';\n      style.width = '100%';\n      style.height = '100%';\n      context = createCanvasContext2D();\n      const canvas = context.canvas;\n      container.appendChild(canvas);\n      style = canvas.style;\n      style.position = 'absolute';\n      style.left = '0';\n      style.transformOrigin = 'top left';\n      this.container = container;\n      this.context = context;\n    }\n    if (\n      !this.containerReused &&\n      backgroundColor &&\n      !this.container.style.backgroundColor\n    ) {\n      this.container.style.backgroundColor = backgroundColor;\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  clipUnrotated(context, frameState, extent) {\n    const topLeft = getTopLeft(extent);\n    const topRight = getTopRight(extent);\n    const bottomRight = getBottomRight(extent);\n    const bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    const inverted = this.inversePixelTransform;\n    applyTransform(inverted, topLeft);\n    applyTransform(inverted, topRight);\n    applyTransform(inverted, bottomRight);\n    applyTransform(inverted, bottomLeft);\n\n    context.save();\n    context.beginPath();\n    context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n    context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n    context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n    context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n    context.clip();\n  }\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  dispatchRenderEvent_(type, context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      const event = new RenderEvent(\n        type,\n        this.inversePixelTransform,\n        frameState,\n        context\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  preRender(context, frameState) {\n    this.frameState = frameState;\n    this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  postRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n  }\n\n  /**\n   * Creates a transform for rendering to an element that will be rotated after rendering.\n   * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} width Width of the rendered element (in pixels).\n   * @param {number} height Height of the rendered element (in pixels).\n   * @param {number} offsetX Offset on the x-axis in view coordinates.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  getRenderTransform(\n    center,\n    resolution,\n    rotation,\n    pixelRatio,\n    width,\n    height,\n    offsetX\n  ) {\n    const dx1 = width / 2;\n    const dy1 = height / 2;\n    const sx = pixelRatio / resolution;\n    const sy = -sx;\n    const dx2 = -center[0] + offsetX;\n    const dy2 = -center[1];\n    return composeTransform(\n      this.tempTransform,\n      dx1,\n      dy1,\n      sx,\n      sy,\n      -rotation,\n      dx2,\n      dy2\n    );\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    delete this.frameState;\n    super.disposeInternal();\n  }\n}\n\nexport default CanvasLayerRenderer;\n","/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport CanvasLayerRenderer from './Layer.js';\nimport ImageTile from '../../ImageTile.js';\nimport ReprojTile from '../../reproj/Tile.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  makeInverse,\n  toString as toTransformString,\n} from '../../transform.js';\nimport {ascending} from '../../array.js';\nimport {\n  containsCoordinate,\n  createEmpty,\n  equals,\n  getHeight,\n  getIntersection,\n  getRotatedViewport,\n  getTopLeft,\n  getWidth,\n  intersects,\n} from '../../extent.js';\nimport {fromUserExtent} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {toSize} from '../../size.js';\n\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n * @template {import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default} [LayerType=import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default]\n * @extends {CanvasLayerRenderer<LayerType>}\n */\nclass CanvasTileLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {LayerType} tileLayer Tile layer.\n   */\n  constructor(tileLayer) {\n    super(tileLayer);\n\n    /**\n     * Rendered extent has changed since the previous `renderFrame()` call\n     * @type {boolean}\n     */\n    this.extentChanged = true;\n\n    /**\n     * @private\n     * @type {?import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedPixelRatio;\n\n    /**\n     * @protected\n     * @type {import(\"../../proj/Projection.js\").default}\n     */\n    this.renderedProjection = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedRevision;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../../Tile.js\").default>}\n     */\n    this.renderedTiles = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.newTiles_ = false;\n\n    /**\n     * @protected\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.tmpExtent = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../TileRange.js\").default}\n     */\n    this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean} Tile is drawable.\n   */\n  isDrawableTile(tile) {\n    const tileLayer = this.getLayer();\n    const tileState = tile.getState();\n    const useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n    return (\n      tileState == TileState.LOADED ||\n      tileState == TileState.EMPTY ||\n      (tileState == TileState.ERROR && !useInterimTilesOnError)\n    );\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {!import(\"../../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    let tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n    if (tile.getState() == TileState.ERROR) {\n      if (tileLayer.getUseInterimTilesOnError() && tileLayer.getPreload() > 0) {\n        // Preloaded tiles for lower resolutions might have finished loading.\n        this.newTiles_ = true;\n      }\n    }\n    if (!this.isDrawableTile(tile)) {\n      tile = tile.getInterimTile();\n    }\n    return tile;\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray} Data at the pixel location.\n   */\n  getData(pixel) {\n    const frameState = this.frameState;\n    if (!frameState) {\n      return null;\n    }\n\n    const layer = this.getLayer();\n    const coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform,\n      pixel.slice()\n    );\n\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      if (!containsCoordinate(layerExtent, coordinate)) {\n        return null;\n      }\n    }\n\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const viewState = frameState.viewState;\n    const source = layer.getRenderSource();\n    const tileGrid = source.getTileGridForProjection(viewState.projection);\n    const tilePixelRatio = source.getTilePixelRatio(frameState.pixelRatio);\n\n    for (\n      let z = tileGrid.getZForResolution(viewState.resolution);\n      z >= tileGrid.getMinZoom();\n      --z\n    ) {\n      const tileCoord = tileGrid.getTileCoordForCoordAndZ(coordinate, z);\n      const tile = source.getTile(\n        z,\n        tileCoord[1],\n        tileCoord[2],\n        pixelRatio,\n        projection\n      );\n      if (\n        !(tile instanceof ImageTile || tile instanceof ReprojTile) ||\n        (tile instanceof ReprojTile && tile.getState() === TileState.EMPTY)\n      ) {\n        return null;\n      }\n\n      if (tile.getState() !== TileState.LOADED) {\n        continue;\n      }\n\n      const tileOrigin = tileGrid.getOrigin(z);\n      const tileSize = toSize(tileGrid.getTileSize(z));\n      const tileResolution = tileGrid.getResolution(z);\n\n      const col = Math.floor(\n        tilePixelRatio *\n          ((coordinate[0] - tileOrigin[0]) / tileResolution -\n            tileCoord[1] * tileSize[0])\n      );\n\n      const row = Math.floor(\n        tilePixelRatio *\n          ((tileOrigin[1] - coordinate[1]) / tileResolution -\n            tileCoord[2] * tileSize[1])\n      );\n\n      const gutter = Math.round(\n        tilePixelRatio * source.getGutterForProjection(viewState.projection)\n      );\n\n      return this.getImageData(tile.getImage(), col + gutter, row + gutter);\n    }\n\n    return null;\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (this.isDrawableTile(tile)) {\n      return super.loadedTileCallback(tiles, zoom, tile);\n    }\n    return false;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return !!this.getLayer().getSource();\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const viewResolution = viewState.resolution;\n    const viewCenter = viewState.center;\n    const rotation = viewState.rotation;\n    const pixelRatio = frameState.pixelRatio;\n\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    const sourceRevision = tileSource.getRevision();\n    const tileGrid = tileSource.getTileGridForProjection(projection);\n    const z = tileGrid.getZForResolution(viewResolution, tileSource.zDirection);\n    const tileResolution = tileGrid.getResolution(z);\n\n    let extent = frameState.extent;\n    const resolution = frameState.viewState.resolution;\n    const tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n    // desired dimensions of the canvas in pixels\n    const width = Math.round((getWidth(extent) / resolution) * pixelRatio);\n    const height = Math.round((getHeight(extent) / resolution) * pixelRatio);\n\n    const layerExtent =\n      layerState.extent && fromUserExtent(layerState.extent, projection);\n    if (layerExtent) {\n      extent = getIntersection(\n        extent,\n        fromUserExtent(layerState.extent, projection)\n      );\n    }\n\n    const dx = (tileResolution * width) / 2 / tilePixelRatio;\n    const dy = (tileResolution * height) / 2 / tilePixelRatio;\n    const canvasExtent = [\n      viewCenter[0] - dx,\n      viewCenter[1] - dy,\n      viewCenter[0] + dx,\n      viewCenter[1] + dy,\n    ];\n\n    const tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n\n    /**\n     * @type {Object<number, Object<string, import(\"../../Tile.js\").default>>}\n     */\n    const tilesToDrawByZ = {};\n    tilesToDrawByZ[z] = {};\n\n    const findLoadedTiles = this.createLoadedTileFinder(\n      tileSource,\n      projection,\n      tilesToDrawByZ\n    );\n\n    const tmpExtent = this.tmpExtent;\n    const tmpTileRange = this.tmpTileRange_;\n    this.newTiles_ = false;\n    const viewport = rotation\n      ? getRotatedViewport(\n          viewState.center,\n          resolution,\n          rotation,\n          frameState.size\n        )\n      : undefined;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        if (\n          rotation &&\n          !tileGrid.tileCoordIntersectsViewport([z, x, y], viewport)\n        ) {\n          continue;\n        }\n        const tile = this.getTile(z, x, y, frameState);\n        if (this.isDrawableTile(tile)) {\n          const uid = getUid(this);\n          if (tile.getState() == TileState.LOADED) {\n            tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n            let inTransition = tile.inTransition(uid);\n            if (inTransition && layerState.opacity !== 1) {\n              // Skipping transition when layer is not fully opaque avoids visual artifacts.\n              tile.endTransition(uid);\n              inTransition = false;\n            }\n            if (\n              !this.newTiles_ &&\n              (inTransition || !this.renderedTiles.includes(tile))\n            ) {\n              this.newTiles_ = true;\n            }\n          }\n          if (tile.getAlpha(uid, frameState.time) === 1) {\n            // don't look for alt tiles if alpha is 1\n            continue;\n          }\n        }\n\n        const childTileRange = tileGrid.getTileCoordChildTileRange(\n          tile.tileCoord,\n          tmpTileRange,\n          tmpExtent\n        );\n\n        let covered = false;\n        if (childTileRange) {\n          covered = findLoadedTiles(z + 1, childTileRange);\n        }\n        if (!covered) {\n          tileGrid.forEachTileCoordParentTileRange(\n            tile.tileCoord,\n            findLoadedTiles,\n            tmpTileRange,\n            tmpExtent\n          );\n        }\n      }\n    }\n\n    const canvasScale =\n      ((tileResolution / viewResolution) * pixelRatio) / tilePixelRatio;\n\n    // set forward and inverse pixel transforms\n    composeTransform(\n      this.pixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / pixelRatio,\n      1 / pixelRatio,\n      rotation,\n      -width / 2,\n      -height / 2\n    );\n\n    const canvasTransform = toTransformString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, this.getBackground(frameState));\n    const context = this.context;\n    const canvas = context.canvas;\n\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    // set scale transform for calculating tile positions on the canvas\n    composeTransform(\n      this.tempTransform,\n      width / 2,\n      height / 2,\n      canvasScale,\n      canvasScale,\n      0,\n      -width / 2,\n      -height / 2\n    );\n\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    if (layerExtent) {\n      this.clipUnrotated(context, frameState, layerExtent);\n    }\n\n    if (!tileSource.getInterpolate()) {\n      context.imageSmoothingEnabled = false;\n    }\n\n    this.preRender(context, frameState);\n\n    this.renderedTiles.length = 0;\n    /** @type {Array<number>} */\n    let zs = Object.keys(tilesToDrawByZ).map(Number);\n    zs.sort(ascending);\n\n    let clips, clipZs, currentClip;\n    if (\n      layerState.opacity === 1 &&\n      (!this.containerReused ||\n        tileSource.getOpaque(frameState.viewState.projection))\n    ) {\n      zs = zs.reverse();\n    } else {\n      clips = [];\n      clipZs = [];\n    }\n    for (let i = zs.length - 1; i >= 0; --i) {\n      const currentZ = zs[i];\n      const currentTilePixelSize = tileSource.getTilePixelSize(\n        currentZ,\n        pixelRatio,\n        projection\n      );\n      const currentResolution = tileGrid.getResolution(currentZ);\n      const currentScale = currentResolution / tileResolution;\n      const dx = currentTilePixelSize[0] * currentScale * canvasScale;\n      const dy = currentTilePixelSize[1] * currentScale * canvasScale;\n      const originTileCoord = tileGrid.getTileCoordForCoordAndZ(\n        getTopLeft(canvasExtent),\n        currentZ\n      );\n      const originTileExtent = tileGrid.getTileCoordExtent(originTileCoord);\n      const origin = applyTransform(this.tempTransform, [\n        (tilePixelRatio * (originTileExtent[0] - canvasExtent[0])) /\n          tileResolution,\n        (tilePixelRatio * (canvasExtent[3] - originTileExtent[3])) /\n          tileResolution,\n      ]);\n      const tileGutter =\n        tilePixelRatio * tileSource.getGutterForProjection(projection);\n      const tilesToDraw = tilesToDrawByZ[currentZ];\n      for (const tileCoordKey in tilesToDraw) {\n        const tile = /** @type {import(\"../../ImageTile.js\").default} */ (\n          tilesToDraw[tileCoordKey]\n        );\n        const tileCoord = tile.tileCoord;\n\n        // Calculate integer positions and sizes so that tiles align\n        const xIndex = originTileCoord[1] - tileCoord[1];\n        const nextX = Math.round(origin[0] - (xIndex - 1) * dx);\n        const yIndex = originTileCoord[2] - tileCoord[2];\n        const nextY = Math.round(origin[1] - (yIndex - 1) * dy);\n        const x = Math.round(origin[0] - xIndex * dx);\n        const y = Math.round(origin[1] - yIndex * dy);\n        const w = nextX - x;\n        const h = nextY - y;\n        const transition = z === currentZ;\n\n        const inTransition =\n          transition && tile.getAlpha(getUid(this), frameState.time) !== 1;\n        let contextSaved = false;\n        if (!inTransition) {\n          if (clips) {\n            // Clip mask for regions in this tile that already filled by a higher z tile\n            currentClip = [x, y, x + w, y, x + w, y + h, x, y + h];\n            for (let i = 0, ii = clips.length; i < ii; ++i) {\n              if (z !== currentZ && currentZ < clipZs[i]) {\n                const clip = clips[i];\n                if (\n                  intersects(\n                    [x, y, x + w, y + h],\n                    [clip[0], clip[3], clip[4], clip[7]]\n                  )\n                ) {\n                  if (!contextSaved) {\n                    context.save();\n                    contextSaved = true;\n                  }\n                  context.beginPath();\n                  // counter-clockwise (outer ring) for current tile\n                  context.moveTo(currentClip[0], currentClip[1]);\n                  context.lineTo(currentClip[2], currentClip[3]);\n                  context.lineTo(currentClip[4], currentClip[5]);\n                  context.lineTo(currentClip[6], currentClip[7]);\n                  // clockwise (inner ring) for higher z tile\n                  context.moveTo(clip[6], clip[7]);\n                  context.lineTo(clip[4], clip[5]);\n                  context.lineTo(clip[2], clip[3]);\n                  context.lineTo(clip[0], clip[1]);\n                  context.clip();\n                }\n              }\n            }\n            clips.push(currentClip);\n            clipZs.push(currentZ);\n          } else {\n            context.clearRect(x, y, w, h);\n          }\n        }\n        this.drawTileImage(\n          tile,\n          frameState,\n          x,\n          y,\n          w,\n          h,\n          tileGutter,\n          transition\n        );\n        if (clips && !inTransition) {\n          if (contextSaved) {\n            context.restore();\n          }\n          this.renderedTiles.unshift(tile);\n        } else {\n          this.renderedTiles.push(tile);\n        }\n        this.updateUsedTiles(frameState.usedTiles, tileSource, tile);\n      }\n    }\n\n    this.renderedRevision = sourceRevision;\n    this.renderedResolution = tileResolution;\n    this.extentChanged =\n      !this.renderedExtent_ || !equals(this.renderedExtent_, canvasExtent);\n    this.renderedExtent_ = canvasExtent;\n    this.renderedPixelRatio = pixelRatio;\n    this.renderedProjection = projection;\n\n    this.manageTilePyramid(\n      frameState,\n      tileSource,\n      tileGrid,\n      pixelRatio,\n      projection,\n      extent,\n      z,\n      tileLayer.getPreload()\n    );\n    this.scheduleExpireCache(frameState, tileSource);\n\n    this.postRender(context, frameState);\n\n    if (layerState.extent) {\n      context.restore();\n    }\n    context.imageSmoothingEnabled = true;\n\n    if (canvasTransform !== canvas.style.transform) {\n      canvas.style.transform = canvasTransform;\n    }\n\n    return this.container;\n  }\n\n  /**\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} x Left of the tile.\n   * @param {number} y Top of the tile.\n   * @param {number} w Width of the tile.\n   * @param {number} h Height of the tile.\n   * @param {number} gutter Tile gutter.\n   * @param {boolean} transition Apply an alpha transition.\n   */\n  drawTileImage(tile, frameState, x, y, w, h, gutter, transition) {\n    const image = this.getTileImage(tile);\n    if (!image) {\n      return;\n    }\n    const uid = getUid(this);\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const alpha =\n      layerState.opacity *\n      (transition ? tile.getAlpha(uid, frameState.time) : 1);\n    const alphaChanged = alpha !== this.context.globalAlpha;\n    if (alphaChanged) {\n      this.context.save();\n      this.context.globalAlpha = alpha;\n    }\n    this.context.drawImage(\n      image,\n      gutter,\n      gutter,\n      image.width - 2 * gutter,\n      image.height - 2 * gutter,\n      x,\n      y,\n      w,\n      h\n    );\n\n    if (alphaChanged) {\n      this.context.restore();\n    }\n    if (alpha !== layerState.opacity) {\n      frameState.animate = true;\n    } else if (transition) {\n      tile.endTransition(uid);\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image\n   */\n  getImage() {\n    const context = this.context;\n    return context ? context.canvas : null;\n  }\n\n  /**\n   * Get the image from a tile.\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @protected\n   */\n  getTileImage(tile) {\n    return tile.getImage();\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @protected\n   */\n  scheduleExpireCache(frameState, tileSource) {\n    if (tileSource.canExpireCache()) {\n      /**\n       * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n       * @param {import(\"../../Map.js\").default} map Map.\n       * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n       */\n      const postRenderFunction = function (tileSource, map, frameState) {\n        const tileSourceKey = getUid(tileSource);\n        if (tileSourceKey in frameState.usedTiles) {\n          tileSource.expireCache(\n            frameState.viewState.projection,\n            frameState.usedTiles[tileSourceKey]\n          );\n        }\n      }.bind(null, tileSource);\n\n      frameState.postRenderFunctions.push(\n        /** @type {import(\"../../Map.js\").PostRenderFunction} */ (\n          postRenderFunction\n        )\n      );\n    }\n  }\n\n  /**\n   * @param {!Object<string, !Object<string, boolean>>} usedTiles Used tiles.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import('../../Tile.js').default} tile Tile.\n   * @protected\n   */\n  updateUsedTiles(usedTiles, tileSource, tile) {\n    // FIXME should we use tilesToDrawByZ instead?\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in usedTiles)) {\n      usedTiles[tileSourceKey] = {};\n    }\n    usedTiles[tileSourceKey][tile.getKey()] = true;\n  }\n\n  /**\n   * Manage tile pyramid.\n   * This function performs a number of functions related to the tiles at the\n   * current zoom and lower zoom levels:\n   * - registers idle tiles in frameState.wantedTiles so that they are not\n   *   discarded by the tile queue\n   * - enqueues missing tiles\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {number} currentZ Current Z.\n   * @param {number} preload Load low resolution tiles up to `preload` levels.\n   * @param {function(import(\"../../Tile.js\").default):void} [tileCallback] Tile callback.\n   * @protected\n   */\n  manageTilePyramid(\n    frameState,\n    tileSource,\n    tileGrid,\n    pixelRatio,\n    projection,\n    extent,\n    currentZ,\n    preload,\n    tileCallback\n  ) {\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in frameState.wantedTiles)) {\n      frameState.wantedTiles[tileSourceKey] = {};\n    }\n    const wantedTiles = frameState.wantedTiles[tileSourceKey];\n    const tileQueue = frameState.tileQueue;\n    const minZoom = tileGrid.getMinZoom();\n    const rotation = frameState.viewState.rotation;\n    const viewport = rotation\n      ? getRotatedViewport(\n          frameState.viewState.center,\n          frameState.viewState.resolution,\n          rotation,\n          frameState.size\n        )\n      : undefined;\n    let tileCount = 0;\n    let tile, tileRange, tileResolution, x, y, z;\n    for (z = minZoom; z <= currentZ; ++z) {\n      tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\n      tileResolution = tileGrid.getResolution(z);\n      for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n          if (\n            rotation &&\n            !tileGrid.tileCoordIntersectsViewport([z, x, y], viewport)\n          ) {\n            continue;\n          }\n          if (currentZ - z <= preload) {\n            ++tileCount;\n            tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n            if (tile.getState() == TileState.IDLE) {\n              wantedTiles[tile.getKey()] = true;\n              if (!tileQueue.isKeyQueued(tile.getKey())) {\n                tileQueue.enqueue([\n                  tile,\n                  tileSourceKey,\n                  tileGrid.getTileCoordCenter(tile.tileCoord),\n                  tileResolution,\n                ]);\n              }\n            }\n            if (tileCallback !== undefined) {\n              tileCallback(tile);\n            }\n          } else {\n            tileSource.useTile(z, x, y, projection);\n          }\n        }\n      }\n    }\n    tileSource.updateCacheSize(tileCount, projection);\n  }\n}\n\nexport default CanvasTileLayerRenderer;\n","/**\n * @module ol/layer/Tile\n */\nimport BaseTileLayer from './BaseTile.js';\nimport CanvasTileLayerRenderer from '../renderer/canvas/TileLayer.js';\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @extends BaseTileLayer<TileSourceType, CanvasTileLayerRenderer>\n * @api\n */\nclass TileLayer extends BaseTileLayer {\n  /**\n   * @param {import(\"./BaseTile.js\").Options<TileSourceType>} [options] Tile layer options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  createRenderer() {\n    return new CanvasTileLayerRenderer(this);\n  }\n}\n\nexport default TileLayer;\n","/**\n * @module ol/math\n */\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  const n = mat.length;\n\n  for (let i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    let maxRow = i;\n    let maxEl = Math.abs(mat[i][i]);\n    for (let r = i + 1; r < n; r++) {\n      const absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    const tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (let j = i + 1; j < n; j++) {\n      const coef = -mat[j][i] / mat[i][i];\n      for (let k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  const x = new Array(n);\n  for (let l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (let m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return (angleInRadians * 180) / Math.PI;\n}\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return (angleInDegrees * Math.PI) / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  const r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n\n/**\n * Returns a number with a limited number of decimal digits.\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The input number with a limited number of decimal digits.\n */\nexport function toFixed(n, decimals) {\n  const factor = Math.pow(10, decimals);\n  return Math.round(n * factor) / factor;\n}\n\n/**\n * Rounds a number to the nearest integer value considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The nearest integer.\n */\nexport function round(n, decimals) {\n  return Math.round(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next smaller integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next smaller integer.\n */\nexport function floor(n, decimals) {\n  return Math.floor(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next bigger integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next bigger integer.\n */\nexport function ceil(n, decimals) {\n  return Math.ceil(toFixed(n, decimals));\n}\n","/**\n * @module ol/obj\n */\n\n/**\n * Removes all properties from an object.\n * @param {Object} object The object to clear.\n */\nexport function clear(object) {\n  for (const property in object) {\n    delete object[property];\n  }\n}\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  let property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n","/**\n * @module ol/proj/Units\n */\n\n/**\n * @typedef {'radians' | 'degrees' | 'ft' | 'm' | 'pixels' | 'tile-pixels' | 'us-ft'} Units\n * Projection units.\n */\n\n/**\n * See http://duff.ess.washington.edu/data/raster/drg/docs/geotiff.txt\n * @type {Object<number, Units>}\n */\nconst unitByCode = {\n  '9001': 'm',\n  '9002': 'ft',\n  '9003': 'us-ft',\n  '9101': 'radians',\n  '9102': 'degrees',\n};\n\n/**\n * @param {number} code Unit code.\n * @return {Units} Units.\n */\nexport function fromCode(code) {\n  return unitByCode[code];\n}\n\n/**\n * @typedef {Object} MetersPerUnitLookup\n * @property {number} radians Radians\n * @property {number} degrees Degrees\n * @property {number} ft  Feet\n * @property {number} m Meters\n * @property {number} us-ft US feet\n */\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {MetersPerUnitLookup}\n * @api\n */\nexport const METERS_PER_UNIT = {\n  // use the radius of the Normal sphere\n  'radians': 6370997 / (2 * Math.PI),\n  'degrees': (2 * Math.PI * 6370997) / 360,\n  'ft': 0.3048,\n  'm': 1,\n  'us-ft': 1200 / 3937,\n};\n","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from './Units.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").Units} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `number` view resolution and a {@link module:ol/coordinate~Coordinate} as arguments, and returns\n * the `number` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj.getPointResolution} function will be used.\n */\n\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj.get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4.register} function.\n *\n * @api\n */\nclass Projection {\n  /**\n   * @param {Options} options Projection options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {string}\n     */\n    this.code_ = options.code;\n\n    /**\n     * Units of projected coordinates. When set to `TILE_PIXELS`, a\n     * `this.extent_` and `this.worldExtent_` must be configured properly for each\n     * tile.\n     * @private\n     * @type {import(\"./Units.js\").Units}\n     */\n    this.units_ = /** @type {import(\"./Units.js\").Units} */ (options.units);\n\n    /**\n     * Validity extent of the projection in projected coordinates. For projections\n     * with `TILE_PIXELS` units, this is the extent of the tile in\n     * tile pixel space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = options.extent !== undefined ? options.extent : null;\n\n    /**\n     * Extent of the world in EPSG:4326. For projections with\n     * `TILE_PIXELS` units, this is the extent of the tile in\n     * projected coordinate space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.worldExtent_ =\n      options.worldExtent !== undefined ? options.worldExtent : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.axisOrientation_ =\n      options.axisOrientation !== undefined ? options.axisOrientation : 'enu';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.global_ = options.global !== undefined ? options.global : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.canWrapX_ = !!(this.global_ && this.extent_);\n\n    /**\n     * @private\n     * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n     */\n    this.getPointResolutionFunc_ = options.getPointResolution;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.defaultTileGrid_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.metersPerUnit_ = options.metersPerUnit;\n  }\n\n  /**\n   * @return {boolean} The projection is suitable for wrapping the x-axis\n   */\n  canWrapX() {\n    return this.canWrapX_;\n  }\n\n  /**\n   * Get the code for this projection, e.g. 'EPSG:4326'.\n   * @return {string} Code.\n   * @api\n   */\n  getCode() {\n    return this.code_;\n  }\n\n  /**\n   * Get the validity extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the units of this projection.\n   * @return {import(\"./Units.js\").Units} Units.\n   * @api\n   */\n  getUnits() {\n    return this.units_;\n  }\n\n  /**\n   * Get the amount of meters per unit of this projection.  If the projection is\n   * not configured with `metersPerUnit` or a units identifier, the return is\n   * `undefined`.\n   * @return {number|undefined} Meters.\n   * @api\n   */\n  getMetersPerUnit() {\n    return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n  }\n\n  /**\n   * Get the world extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getWorldExtent() {\n    return this.worldExtent_;\n  }\n\n  /**\n   * Get the axis orientation of this projection.\n   * Example values are:\n   * enu - the default easting, northing, elevation.\n   * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n   *     or south orientated transverse mercator.\n   * wnu - westing, northing, up - some planetary coordinate systems have\n   *     \"west positive\" coordinate systems\n   * @return {string} Axis orientation.\n   * @api\n   */\n  getAxisOrientation() {\n    return this.axisOrientation_;\n  }\n\n  /**\n   * Is this projection a global projection which spans the whole world?\n   * @return {boolean} Whether the projection is global.\n   * @api\n   */\n  isGlobal() {\n    return this.global_;\n  }\n\n  /**\n   * Set if the projection is a global projection which spans the whole world\n   * @param {boolean} global Whether the projection is global.\n   * @api\n   */\n  setGlobal(global) {\n    this.global_ = global;\n    this.canWrapX_ = !!(global && this.extent_);\n  }\n\n  /**\n   * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n   */\n  getDefaultTileGrid() {\n    return this.defaultTileGrid_;\n  }\n\n  /**\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n   */\n  setDefaultTileGrid(tileGrid) {\n    this.defaultTileGrid_ = tileGrid;\n  }\n\n  /**\n   * Set the validity extent for this projection.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  setExtent(extent) {\n    this.extent_ = extent;\n    this.canWrapX_ = !!(this.global_ && extent);\n  }\n\n  /**\n   * Set the world extent for this projection.\n   * @param {import(\"../extent.js\").Extent} worldExtent World extent\n   *     [minlon, minlat, maxlon, maxlat].\n   * @api\n   */\n  setWorldExtent(worldExtent) {\n    this.worldExtent_ = worldExtent;\n  }\n\n  /**\n   * Set the getPointResolution function (see {@link module:ol/proj.getPointResolution}\n   * for this projection.\n   * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n   * @api\n   */\n  setGetPointResolution(func) {\n    this.getPointResolutionFunc_ = func;\n  }\n\n  /**\n   * Get the custom point resolution function for this projection (if set).\n   * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n   * resolution function (if set).\n   */\n  getPointResolutionFunc() {\n    return this.getPointResolutionFunc_;\n  }\n}\n\nexport default Projection;\n","/**\n * @module ol/proj/epsg3857\n */\nimport Projection from './Projection.js';\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * @const\n * @type {number}\n */\nexport const HALF_SIZE = Math.PI * RADIUS;\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-HALF_SIZE, -HALF_SIZE, HALF_SIZE, HALF_SIZE];\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const WORLD_EXTENT = [-180, -85, 180, 85];\n\n/**\n * Maximum safe value in y direction\n * @const\n * @type {number}\n */\nexport const MAX_SAFE_Y = RADIUS * Math.log(Math.tan(Math.PI / 2));\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nclass EPSG3857Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   */\n  constructor(code) {\n    super({\n      code: code,\n      units: 'm',\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function (resolution, point) {\n        return resolution / Math.cosh(point[1] / RADIUS);\n      },\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('http://www.opengis.net/def/crs/EPSG/0/3857'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857'),\n];\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, output, dimension) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (HALF_SIZE * input[i]) / 180;\n    let y = RADIUS * Math.log(Math.tan((Math.PI * (+input[i + 1] + 90)) / 360));\n    if (y > MAX_SAFE_Y) {\n      y = MAX_SAFE_Y;\n    } else if (y < -MAX_SAFE_Y) {\n      y = -MAX_SAFE_Y;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, output, dimension) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (180 * input[i]) / HALF_SIZE;\n    output[i + 1] =\n      (360 * Math.atan(Math.exp(input[i + 1] / RADIUS))) / Math.PI - 90;\n  }\n  return output;\n}\n","/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-180, -90, 180, 90];\n\n/**\n * @const\n * @type {number}\n */\nexport const METERS_PER_UNIT = (Math.PI * RADIUS) / 180;\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nclass EPSG4326Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   * @param {string} [axisOrientation] Axis orientation.\n   */\n  constructor(code, axisOrientation) {\n    super({\n      code: code,\n      units: 'degrees',\n      extent: EXTENT,\n      axisOrientation: axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT,\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/OGC/1.3/CRS84'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/EPSG/0/4326', 'neu'),\n];\n","/**\n * @module ol/proj/projections\n */\n\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nlet cache = {};\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n  return (\n    cache[code] ||\n    cache[code.replace(/urn:(x-)?ogc:def:crs:EPSG:(.*:)?(\\w+)$/, 'EPSG:$3')] ||\n    null\n  );\n}\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nlet transforms = {};\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  const transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  let transform;\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    transform = transforms[sourceCode][destinationCode];\n  }\n  return transform;\n}\n","/**\n * @module ol/sphere\n */\nimport {toDegrees, toRadians} from './math.js';\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the\n * [mean Earth radius](https://en.wikipedia.org/wiki/Earth_radius#Mean_radius)\n * for the WGS84 ellipsoid is used.\n */\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport const DEFAULT_RADIUS = 6371008.8;\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lat2 = toRadians(c2[1]);\n  const deltaLatBy2 = (lat2 - lat1) / 2;\n  const deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  const a =\n    Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n    Math.sin(deltaLonBy2) *\n      Math.sin(deltaLonBy2) *\n      Math.cos(lat1) *\n      Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  let length = 0;\n  for (let i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let length = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint': {\n      break;\n    }\n    case 'LineString':\n    case 'LinearRing': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case 'MultiLineString':\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  let area = 0;\n  const len = coordinates.length;\n  let x1 = coordinates[len - 1][0];\n  let y1 = coordinates[len - 1][1];\n  for (let i = 0; i < len; i++) {\n    const x2 = coordinates[i][0];\n    const y2 = coordinates[i][1];\n    area +=\n      toRadians(x2 - x1) *\n      (2 + Math.sin(toRadians(y1)) + Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return (area * radius * radius) / 2.0;\n}\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let area = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint':\n    case 'LineString':\n    case 'MultiLineString':\n    case 'LinearRing': {\n      break;\n    }\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lon1 = toRadians(c1[0]);\n  const dByR = distance / radius;\n  const lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing)\n  );\n  const lon =\n    lon1 +\n    Math.atan2(\n      Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n      Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat)\n    );\n  return [toDegrees(lon), toDegrees(lat)];\n}\n","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection~Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj.addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection~Projection} object for the new projection and add it with\n * {@link module:ol/proj.addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj.addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection~Projection} with\n * {@link module:ol/proj.addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport Projection from './proj/Projection.js';\nimport {\n  PROJECTIONS as EPSG3857_PROJECTIONS,\n  fromEPSG4326,\n  toEPSG4326,\n} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport {METERS_PER_UNIT} from './proj/Units.js';\nimport {\n  add as addProj,\n  clear as clearProj,\n  get as getProj,\n} from './proj/projections.js';\nimport {\n  add as addTransformFunc,\n  clear as clearTransformFuncs,\n  get as getTransformFunc,\n} from './proj/transforms.js';\nimport {applyTransform, getWidth} from './extent.js';\nimport {clamp, modulo} from './math.js';\nimport {equals, getWorldsAway} from './coordinate.js';\nimport {getDistance} from './sphere.js';\nimport {warn} from './console.js';\n\n/**\n * A projection as {@link module:ol/proj/Projection~Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\n\nexport {METERS_PER_UNIT};\n\nexport {Projection};\n\nlet showCoordinateWarning = true;\n\n/**\n * @param {boolean} [disable = true] Disable console info about `useGeographic()`\n */\nexport function disableCoordinateWarning(disable) {\n  const hide = disable === undefined ? true : disable;\n  showCoordinateWarning = !hide;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, output) {\n  if (output !== undefined) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    output = output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, output) {\n  if (output !== undefined && input !== output) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    input = output;\n  }\n  return input;\n}\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  addProj(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection|null} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  return typeof projectionLike === 'string'\n    ? getProj(/** @type {string} */ (projectionLike))\n    : /** @type {Projection} */ (projectionLike) || null;\n}\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the `point` pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {import(\"./proj/Units.js\").Units} [units] Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, units) {\n  projection = get(projection);\n  let pointResolution;\n  const getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n    if (units && units !== projection.getUnits()) {\n      const metersPerUnit = projection.getMetersPerUnit();\n      if (metersPerUnit) {\n        pointResolution =\n          (pointResolution * metersPerUnit) / METERS_PER_UNIT[units];\n      }\n    }\n  } else {\n    const projUnits = projection.getUnits();\n    if ((projUnits == 'degrees' && !units) || units == 'degrees') {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      const toEPSG4326 = getTransformFromProjections(\n        projection,\n        get('EPSG:4326')\n      );\n      if (toEPSG4326 === identityTransform && projUnits !== 'degrees') {\n        // no transform is available\n        pointResolution = resolution * projection.getMetersPerUnit();\n      } else {\n        let vertices = [\n          point[0] - resolution / 2,\n          point[1],\n          point[0] + resolution / 2,\n          point[1],\n          point[0],\n          point[1] - resolution / 2,\n          point[0],\n          point[1] + resolution / 2,\n        ];\n        vertices = toEPSG4326(vertices, vertices, 2);\n        const width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n        const height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n        pointResolution = (width + height) / 2;\n      }\n      const metersPerUnit = units\n        ? METERS_PER_UNIT[units]\n        : projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function (source) {\n    projections.forEach(function (destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(\n  projections1,\n  projections2,\n  forwardTransform,\n  inverseTransform\n) {\n  projections1.forEach(function (projection1) {\n    projections2.forEach(function (projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  clearProj();\n  clearTransformFuncs();\n}\n\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  }\n  if (typeof projection === 'string') {\n    return get(projection);\n  }\n  return /** @type {Projection} */ (projection);\n}\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>} [output] Output.\n     * @param {number} [dimension] Dimension.\n     * @return {Array<number>} Output.\n     */\n    function (input, output, dimension) {\n      const length = input.length;\n      dimension = dimension !== undefined ? dimension : 2;\n      output = output !== undefined ? output : new Array(length);\n      for (let i = 0; i < length; i += dimension) {\n        const point = coordTransform(input.slice(i, i + dimension));\n        const pointLength = point.length;\n        for (let j = 0, jj = dimension; j < jj; ++j) {\n          output[i + j] = j >= pointLength ? input[i + j] : point[j];\n        }\n      }\n      return output;\n    }\n  );\n}\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}. If the transform function can only\n *     transform less dimensions than the input coordinate, it is supposeed to return a coordinate\n *     with only the length it can transform. The other dimensions will be taken unchanged from the\n *     source.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  const sourceProj = get(source);\n  const destProj = get(destination);\n  addTransformFunc(\n    sourceProj,\n    destProj,\n    createTransformFromCoordinateTransform(forward)\n  );\n  addTransformFunc(\n    destProj,\n    sourceProj,\n    createTransformFromCoordinateTransform(inverse)\n  );\n}\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike} [projection] Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, projection) {\n  disableCoordinateWarning();\n  return transform(\n    coordinate,\n    'EPSG:4326',\n    projection !== undefined ? projection : 'EPSG:3857'\n  );\n}\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike} [projection] Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, projection) {\n  const lonLat = transform(\n    coordinate,\n    projection !== undefined ? projection : 'EPSG:3857',\n    'EPSG:4326'\n  );\n  const lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  const equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  }\n  const transformFunc = getTransformFromProjections(projection1, projection2);\n  return transformFunc === cloneTransform && equalUnits;\n}\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(\n  sourceProjection,\n  destinationProjection\n) {\n  const sourceCode = sourceProjection.getCode();\n  const destinationCode = destinationProjection.getCode();\n  let transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (!transformFunc) {\n    transformFunc = identityTransform;\n  }\n  return transformFunc;\n}\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  const sourceProjection = get(source);\n  const destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj.transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  const transformFunc = getTransform(source, destination);\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination, stops) {\n  const transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc, undefined, stops);\n}\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(\n  point,\n  sourceProjection,\n  destinationProjection\n) {\n  const transformFunc = getTransformFromProjections(\n    sourceProjection,\n    destinationProjection\n  );\n  return transformFunc(point);\n}\n\n/**\n * @type {Projection|null}\n */\nlet userProjection = null;\n\n/**\n * Set the projection for coordinates supplied from and returned by API methods.\n * This includes all API methods except for those interacting with tile grids,\n * plus {@link import(\"./Map.js\").FrameState} and {@link import(\"./View.js\").State}.\n * @param {ProjectionLike} projection The user projection.\n * @api\n */\nexport function setUserProjection(projection) {\n  userProjection = get(projection);\n}\n\n/**\n * Clear the user projection if set.\n * @api\n */\nexport function clearUserProjection() {\n  userProjection = null;\n}\n\n/**\n * Get the projection for coordinates supplied from and returned by API methods.\n * @return {Projection|null} The user projection (or null if not set).\n * @api\n */\nexport function getUserProjection() {\n  return userProjection;\n}\n\n/**\n * Use geographic coordinates (WGS-84 datum) in API methods.\n * This includes all API methods except for those interacting with tile grids,\n * plus {@link import(\"./Map.js\").FrameState} and {@link import(\"./View.js\").State}.\n * @api\n */\nexport function useGeographic() {\n  setUserProjection('EPSG:4326');\n}\n\n/**\n * Return a coordinate transformed into the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} sourceProjection The input coordinate projection.\n * @return {Array<number>} The input coordinate in the user projection.\n */\nexport function toUserCoordinate(coordinate, sourceProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, sourceProjection, userProjection);\n}\n\n/**\n * Return a coordinate transformed from the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {Array<number>} The input coordinate transformed.\n */\nexport function fromUserCoordinate(coordinate, destProjection) {\n  if (!userProjection) {\n    if (\n      showCoordinateWarning &&\n      !equals(coordinate, [0, 0]) &&\n      coordinate[0] >= -180 &&\n      coordinate[0] <= 180 &&\n      coordinate[1] >= -90 &&\n      coordinate[1] <= 90\n    ) {\n      showCoordinateWarning = false;\n      warn(\n        'Call useGeographic() from ol/proj once to work with [longitude, latitude] coordinates.'\n      );\n    }\n    return coordinate;\n  }\n  return transform(coordinate, userProjection, destProjection);\n}\n\n/**\n * Return an extent transformed into the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} sourceProjection The input extent projection.\n * @return {import(\"./extent.js\").Extent} The input extent in the user projection.\n */\nexport function toUserExtent(extent, sourceProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, sourceProjection, userProjection);\n}\n\n/**\n * Return an extent transformed from the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {import(\"./extent.js\").Extent} The input extent transformed.\n */\nexport function fromUserExtent(extent, destProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, userProjection, destProjection);\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in input projection units per pixel.\n * @param {ProjectionLike} sourceProjection The input projection.\n * @return {number} Resolution in user projection units per pixel.\n */\nexport function toUserResolution(resolution, sourceProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceUnits = get(sourceProjection).getUnits();\n  const userUnits = userProjection.getUnits();\n  return sourceUnits && userUnits\n    ? (resolution * METERS_PER_UNIT[sourceUnits]) / METERS_PER_UNIT[userUnits]\n    : resolution;\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in user projection units per pixel.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {number} Resolution in destination projection units per pixel.\n */\nexport function fromUserResolution(resolution, destProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceUnits = get(destProjection).getUnits();\n  const userUnits = userProjection.getUnits();\n  return sourceUnits && userUnits\n    ? (resolution * METERS_PER_UNIT[userUnits]) / METERS_PER_UNIT[sourceUnits]\n    : resolution;\n}\n\n/**\n * Creates a safe coordinate transform function from a coordinate transform function.\n * \"Safe\" means that it can handle wrapping of x-coordinates for global projections,\n * and that coordinates exceeding the source projection validity extent's range will be\n * clamped to the validity range.\n * @param {Projection} sourceProj Source projection.\n * @param {Projection} destProj Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} transform Transform function (source to destination).\n * @return {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} Safe transform function (source to destination).\n */\nexport function createSafeCoordinateTransform(sourceProj, destProj, transform) {\n  return function (coord) {\n    let transformed, worldsAway;\n    if (sourceProj.canWrapX()) {\n      const sourceExtent = sourceProj.getExtent();\n      const sourceExtentWidth = getWidth(sourceExtent);\n      coord = coord.slice(0);\n      worldsAway = getWorldsAway(coord, sourceProj, sourceExtentWidth);\n      if (worldsAway) {\n        // Move x to the real world\n        coord[0] = coord[0] - worldsAway * sourceExtentWidth;\n      }\n      coord[0] = clamp(coord[0], sourceExtent[0], sourceExtent[2]);\n      coord[1] = clamp(coord[1], sourceExtent[1], sourceExtent[3]);\n      transformed = transform(coord);\n    } else {\n      transformed = transform(coord);\n    }\n    if (worldsAway && destProj.canWrapX()) {\n      // Move transformed coordinate back to the offset world\n      transformed[0] += worldsAway * getWidth(destProj.getExtent());\n    }\n    return transformed;\n  };\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(\n    EPSG4326_PROJECTIONS,\n    EPSG3857_PROJECTIONS,\n    fromEPSG4326,\n    toEPSG4326\n  );\n}\n\naddCommon();\n","/**\n * @module ol/render/Event\n */\n\nimport Event from '../events/Event.js';\n\nclass RenderEvent extends Event {\n  /**\n   * @param {import(\"./EventType.js\").default} type Type.\n   * @param {import(\"../transform.js\").Transform} [inversePixelTransform] Transform for\n   *     CSS pixels to rendered pixels.\n   * @param {import(\"../Map.js\").FrameState} [frameState] Frame state.\n   * @param {?(CanvasRenderingContext2D|WebGLRenderingContext)} [context] Context.\n   */\n  constructor(type, inversePixelTransform, frameState, context) {\n    super(type);\n\n    /**\n     * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n     * to rendered pixels on this event's `context`. Only available when a Canvas renderer is used, null otherwise.\n     * @type {import(\"../transform.js\").Transform|undefined}\n     * @api\n     */\n    this.inversePixelTransform = inversePixelTransform;\n\n    /**\n     * An object representing the current render frame state.\n     * @type {import(\"../Map.js\").FrameState|undefined}\n     * @api\n     */\n    this.frameState = frameState;\n\n    /**\n     * Canvas context. Not available when the event is dispatched by the map. For Canvas 2D layers,\n     * the context will be the 2D rendering context.  For WebGL layers, the context will be the WebGL\n     * context.\n     * @type {CanvasRenderingContext2D|WebGLRenderingContext|undefined}\n     * @api\n     */\n    this.context = context;\n  }\n}\n\nexport default RenderEvent;\n","/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered before a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#prerender\n   * @api\n   */\n  PRERENDER: 'prerender',\n\n  /**\n   * Triggered after a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered before layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n\n  /**\n   * Triggered after layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n\n  /**\n   * Triggered when rendering is complete, i.e. all sources and tiles have\n   * finished loading for the current viewport, and all tiles are faded in.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#rendercomplete\n   * @api\n   */\n  RENDERCOMPLETE: 'rendercomplete',\n};\n\n/**\n * @typedef {'postrender'|'precompose'|'postcompose'|'rendercomplete'} MapRenderEventTypes\n */\n\n/**\n * @typedef {'postrender'|'prerender'} LayerRenderEventTypes\n */\n","/**\n * @module ol/reproj\n */\nimport {\n  containsCoordinate,\n  createEmpty,\n  extend,\n  forEachCorner,\n  getCenter,\n  getHeight,\n  getTopLeft,\n  getWidth,\n} from './extent.js';\nimport {createCanvasContext2D, releaseCanvas} from './dom.js';\nimport {getPointResolution, transform} from './proj.js';\nimport {solveLinearSystem} from './math.js';\n\nlet brokenDiagonalRendering_;\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * This draws a small triangle into a canvas by setting the triangle as the clip region\n * and then drawing a (too large) rectangle\n *\n * @param {CanvasRenderingContext2D} ctx The context in which to draw the triangle\n * @param {number} u1 The x-coordinate of the second point. The first point is 0,0.\n * @param {number} v1 The y-coordinate of the second point.\n * @param {number} u2 The x-coordinate of the third point.\n * @param {number} v2 The y-coordinate of the third point.\n */\nfunction drawTestTriangle(ctx, u1, v1, u2, v2) {\n  ctx.beginPath();\n  ctx.moveTo(0, 0);\n  ctx.lineTo(u1, v1);\n  ctx.lineTo(u2, v2);\n  ctx.closePath();\n  ctx.save();\n  ctx.clip();\n  ctx.fillRect(0, 0, Math.max(u1, u2) + 1, Math.max(v1, v2));\n  ctx.restore();\n}\n\n/**\n * Given the data from getImageData, see if the right values appear at the provided offset.\n * Returns true if either the color or transparency is off\n *\n * @param {Uint8ClampedArray} data The data returned from getImageData\n * @param {number} offset The pixel offset from the start of data.\n * @return {boolean} true if the diagonal rendering is broken\n */\nfunction verifyBrokenDiagonalRendering(data, offset) {\n  // the values ought to be close to the rgba(210, 0, 0, 0.75)\n  return (\n    Math.abs(data[offset * 4] - 210) > 2 ||\n    Math.abs(data[offset * 4 + 3] - 0.75 * 255) > 2\n  );\n}\n\n/**\n * Determines if the current browser configuration can render triangular clip regions correctly.\n * This value is cached so the function is only expensive the first time called.\n * Firefox on Windows (as of now) does not if HWA is enabled. See https://bugzilla.mozilla.org/show_bug.cgi?id=1606976\n * Chrome works, and everything seems to work on OSX and Android. This function caches the\n * result. I suppose that it is conceivably possible that a browser might flip modes while the app is\n * running, but lets hope not.\n *\n * @return {boolean} true if the Diagonal Rendering is broken.\n */\nfunction isBrokenDiagonalRendering() {\n  if (brokenDiagonalRendering_ === undefined) {\n    const ctx = createCanvasContext2D(6, 6, canvasPool);\n    ctx.globalCompositeOperation = 'lighter';\n    ctx.fillStyle = 'rgba(210, 0, 0, 0.75)';\n    drawTestTriangle(ctx, 4, 5, 4, 0);\n    drawTestTriangle(ctx, 4, 5, 0, 5);\n    const data = ctx.getImageData(0, 0, 3, 3).data;\n    brokenDiagonalRendering_ =\n      verifyBrokenDiagonalRendering(data, 0) ||\n      verifyBrokenDiagonalRendering(data, 4) ||\n      verifyBrokenDiagonalRendering(data, 8);\n    releaseCanvas(ctx);\n    canvasPool.push(ctx.canvas);\n  }\n\n  return brokenDiagonalRendering_;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(\n  sourceProj,\n  targetProj,\n  targetCenter,\n  targetResolution\n) {\n  const sourceCenter = transform(targetCenter, targetProj, sourceProj);\n\n  // calculate the ideal resolution of the source data\n  let sourceResolution = getPointResolution(\n    targetProj,\n    targetResolution,\n    targetCenter\n  );\n\n  const targetMetersPerUnit = targetProj.getMetersPerUnit();\n  if (targetMetersPerUnit !== undefined) {\n    sourceResolution *= targetMetersPerUnit;\n  }\n  const sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n  if (sourceMetersPerUnit !== undefined) {\n    sourceResolution /= sourceMetersPerUnit;\n  }\n\n  // Based on the projection properties, the point resolution at the specified\n  // coordinates may be slightly different. We need to reverse-compensate this\n  // in order to achieve optimal results.\n\n  const sourceExtent = sourceProj.getExtent();\n  if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n    const compensationFactor =\n      getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n      sourceResolution;\n    if (isFinite(compensationFactor) && compensationFactor > 0) {\n      sourceResolution /= compensationFactor;\n    }\n  }\n\n  return sourceResolution;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceExtentResolution(\n  sourceProj,\n  targetProj,\n  targetExtent,\n  targetResolution\n) {\n  const targetCenter = getCenter(targetExtent);\n  let sourceResolution = calculateSourceResolution(\n    sourceProj,\n    targetProj,\n    targetCenter,\n    targetResolution\n  );\n\n  if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n    forEachCorner(targetExtent, function (corner) {\n      sourceResolution = calculateSourceResolution(\n        sourceProj,\n        targetProj,\n        corner,\n        targetResolution\n      );\n      return isFinite(sourceResolution) && sourceResolution > 0;\n    });\n  }\n\n  return sourceResolution;\n}\n\n/**\n * @typedef {Object} ImageExtent\n * @property {import(\"./extent.js\").Extent} extent Extent.\n * @property {import('./DataTile.js').ImageLike} image Image.\n */\n\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation Calculated triangulation.\n * @param {Array<ImageExtent>} sources Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean} [renderEdges] Render reprojection edges.\n * @param {boolean} [interpolate] Use linear interpolation when resampling.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(\n  width,\n  height,\n  pixelRatio,\n  sourceResolution,\n  sourceExtent,\n  targetResolution,\n  targetExtent,\n  triangulation,\n  sources,\n  gutter,\n  renderEdges,\n  interpolate\n) {\n  const context = createCanvasContext2D(\n    Math.round(pixelRatio * width),\n    Math.round(pixelRatio * height),\n    canvasPool\n  );\n\n  if (!interpolate) {\n    context.imageSmoothingEnabled = false;\n  }\n\n  if (sources.length === 0) {\n    return context.canvas;\n  }\n\n  context.scale(pixelRatio, pixelRatio);\n\n  function pixelRound(value) {\n    return Math.round(value * pixelRatio) / pixelRatio;\n  }\n\n  context.globalCompositeOperation = 'lighter';\n\n  const sourceDataExtent = createEmpty();\n  sources.forEach(function (src, i, arr) {\n    extend(sourceDataExtent, src.extent);\n  });\n\n  const canvasWidthInUnits = getWidth(sourceDataExtent);\n  const canvasHeightInUnits = getHeight(sourceDataExtent);\n  const stitchContext = createCanvasContext2D(\n    Math.round((pixelRatio * canvasWidthInUnits) / sourceResolution),\n    Math.round((pixelRatio * canvasHeightInUnits) / sourceResolution),\n    canvasPool\n  );\n\n  if (!interpolate) {\n    stitchContext.imageSmoothingEnabled = false;\n  }\n\n  const stitchScale = pixelRatio / sourceResolution;\n\n  sources.forEach(function (src, i, arr) {\n    const xPos = src.extent[0] - sourceDataExtent[0];\n    const yPos = -(src.extent[3] - sourceDataExtent[3]);\n    const srcWidth = getWidth(src.extent);\n    const srcHeight = getHeight(src.extent);\n\n    // This test should never fail -- but it does. Need to find a fix the upstream condition\n    if (src.image.width > 0 && src.image.height > 0) {\n      stitchContext.drawImage(\n        src.image,\n        gutter,\n        gutter,\n        src.image.width - 2 * gutter,\n        src.image.height - 2 * gutter,\n        xPos * stitchScale,\n        yPos * stitchScale,\n        srcWidth * stitchScale,\n        srcHeight * stitchScale\n      );\n    }\n  });\n\n  const targetTopLeft = getTopLeft(targetExtent);\n\n  triangulation.getTriangles().forEach(function (triangle, i, arr) {\n    /* Calculate affine transform (src -> dst)\n     * Resulting matrix can be used to transform coordinate\n     * from `sourceProjection` to destination pixels.\n     *\n     * To optimize number of context calls and increase numerical stability,\n     * we also do the following operations:\n     * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n     * here before solving the linear system so [ui, vi] are pixel coordinates.\n     *\n     * Src points: xi, yi\n     * Dst points: ui, vi\n     * Affine coefficients: aij\n     *\n     * | x0 y0 1  0  0 0 |   |a00|   |u0|\n     * | x1 y1 1  0  0 0 |   |a01|   |u1|\n     * | x2 y2 1  0  0 0 | x |a02| = |u2|\n     * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n     * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n     * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n     */\n    const source = triangle.source;\n    const target = triangle.target;\n    let x0 = source[0][0],\n      y0 = source[0][1];\n    let x1 = source[1][0],\n      y1 = source[1][1];\n    let x2 = source[2][0],\n      y2 = source[2][1];\n    // Make sure that everything is on pixel boundaries\n    const u0 = pixelRound((target[0][0] - targetTopLeft[0]) / targetResolution);\n    const v0 = pixelRound(\n      -(target[0][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u1 = pixelRound((target[1][0] - targetTopLeft[0]) / targetResolution);\n    const v1 = pixelRound(\n      -(target[1][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u2 = pixelRound((target[2][0] - targetTopLeft[0]) / targetResolution);\n    const v2 = pixelRound(\n      -(target[2][1] - targetTopLeft[1]) / targetResolution\n    );\n\n    // Shift all the source points to improve numerical stability\n    // of all the subsequent calculations. The [x0, y0] is used here.\n    // This is also used to simplify the linear system.\n    const sourceNumericalShiftX = x0;\n    const sourceNumericalShiftY = y0;\n    x0 = 0;\n    y0 = 0;\n    x1 -= sourceNumericalShiftX;\n    y1 -= sourceNumericalShiftY;\n    x2 -= sourceNumericalShiftX;\n    y2 -= sourceNumericalShiftY;\n\n    const augmentedMatrix = [\n      [x1, y1, 0, 0, u1 - u0],\n      [x2, y2, 0, 0, u2 - u0],\n      [0, 0, x1, y1, v1 - v0],\n      [0, 0, x2, y2, v2 - v0],\n    ];\n    const affineCoefs = solveLinearSystem(augmentedMatrix);\n    if (!affineCoefs) {\n      return;\n    }\n\n    context.save();\n    context.beginPath();\n\n    if (isBrokenDiagonalRendering() || !interpolate) {\n      // Make sure that all lines are horizontal or vertical\n      context.moveTo(u1, v1);\n      // This is the diagonal line. Do it in 4 steps\n      const steps = 4;\n      const ud = u0 - u1;\n      const vd = v0 - v1;\n      for (let step = 0; step < steps; step++) {\n        // Go horizontally\n        context.lineTo(\n          u1 + pixelRound(((step + 1) * ud) / steps),\n          v1 + pixelRound((step * vd) / (steps - 1))\n        );\n        // Go vertically\n        if (step != steps - 1) {\n          context.lineTo(\n            u1 + pixelRound(((step + 1) * ud) / steps),\n            v1 + pixelRound(((step + 1) * vd) / (steps - 1))\n          );\n        }\n      }\n      // We are almost at u0r, v0r\n      context.lineTo(u2, v2);\n    } else {\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n    }\n\n    context.clip();\n\n    context.transform(\n      affineCoefs[0],\n      affineCoefs[2],\n      affineCoefs[1],\n      affineCoefs[3],\n      u0,\n      v0\n    );\n\n    context.translate(\n      sourceDataExtent[0] - sourceNumericalShiftX,\n      sourceDataExtent[3] - sourceNumericalShiftY\n    );\n\n    context.scale(\n      sourceResolution / pixelRatio,\n      -sourceResolution / pixelRatio\n    );\n\n    context.drawImage(stitchContext.canvas, 0, 0);\n    context.restore();\n  });\n\n  releaseCanvas(stitchContext);\n  canvasPool.push(stitchContext.canvas);\n\n  if (renderEdges) {\n    context.save();\n\n    context.globalCompositeOperation = 'source-over';\n    context.strokeStyle = 'black';\n    context.lineWidth = 1;\n\n    triangulation.getTriangles().forEach(function (triangle, i, arr) {\n      const target = triangle.target;\n      const u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n      const v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n      const u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n      const v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n      const u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n      const v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n      context.beginPath();\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n      context.closePath();\n      context.stroke();\n    });\n\n    context.restore();\n  }\n  return context.canvas;\n}\n","/**\n * @module ol/reproj/Triangulation\n */\nimport {\n  boundingExtent,\n  createEmpty,\n  extendCoordinate,\n  getArea,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n  getWidth,\n  intersects,\n} from '../extent.js';\nimport {getTransform} from '../proj.js';\nimport {modulo} from '../math.js';\n\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source Source.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target Target.\n */\n\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nconst MAX_SUBDIVISION = 10;\n\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nconst MAX_TRIANGLE_WIDTH = 0.25;\n\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nclass Triangulation {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../extent.js\").Extent} targetExtent Target extent to triangulate.\n   * @param {import(\"../extent.js\").Extent} maxSourceExtent Maximal source extent that can be used.\n   * @param {number} errorThreshold Acceptable error (in source units).\n   * @param {?number} destinationResolution The (optional) resolution of the destination.\n   */\n  constructor(\n    sourceProj,\n    targetProj,\n    targetExtent,\n    maxSourceExtent,\n    errorThreshold,\n    destinationResolution\n  ) {\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.sourceProj_ = sourceProj;\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.targetProj_ = targetProj;\n\n    /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n    let transformInvCache = {};\n    const transformInv = getTransform(this.targetProj_, this.sourceProj_);\n\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n     * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n     * @private\n     */\n    this.transformInv_ = function (c) {\n      const key = c[0] + '/' + c[1];\n      if (!transformInvCache[key]) {\n        transformInvCache[key] = transformInv(c);\n      }\n      return transformInvCache[key];\n    };\n\n    /**\n     * @type {import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n\n    /**\n     * @type {Array<Triangle>}\n     * @private\n     */\n    this.triangles_ = [];\n\n    /**\n     * Indicates that the triangulation crosses edge of the source projection.\n     * @type {boolean}\n     * @private\n     */\n    this.wrapsXInSource_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.canWrapXInSource_ =\n      this.sourceProj_.canWrapX() &&\n      !!maxSourceExtent &&\n      !!this.sourceProj_.getExtent() &&\n      getWidth(maxSourceExtent) >= getWidth(this.sourceProj_.getExtent());\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.sourceWorldWidth_ = this.sourceProj_.getExtent()\n      ? getWidth(this.sourceProj_.getExtent())\n      : null;\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.targetWorldWidth_ = this.targetProj_.getExtent()\n      ? getWidth(this.targetProj_.getExtent())\n      : null;\n\n    const destinationTopLeft = getTopLeft(targetExtent);\n    const destinationTopRight = getTopRight(targetExtent);\n    const destinationBottomRight = getBottomRight(targetExtent);\n    const destinationBottomLeft = getBottomLeft(targetExtent);\n    const sourceTopLeft = this.transformInv_(destinationTopLeft);\n    const sourceTopRight = this.transformInv_(destinationTopRight);\n    const sourceBottomRight = this.transformInv_(destinationBottomRight);\n    const sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n\n    /*\n     * The maxSubdivision controls how many splittings of the target area can\n     * be done. The idea here is to do a linear mapping of the target areas\n     * but the actual overall reprojection (can be) extremely non-linear. The\n     * default value of MAX_SUBDIVISION was chosen based on mapping a 256x256\n     * tile size. However this function is also called to remap canvas rendered\n     * layers which can be much larger. This calculation increases the maxSubdivision\n     * value by the right factor so that each 256x256 pixel area has\n     * MAX_SUBDIVISION divisions.\n     */\n    const maxSubdivision =\n      MAX_SUBDIVISION +\n      (destinationResolution\n        ? Math.max(\n            0,\n            Math.ceil(\n              Math.log2(\n                getArea(targetExtent) /\n                  (destinationResolution * destinationResolution * 256 * 256)\n              )\n            )\n          )\n        : 0);\n\n    this.addQuad_(\n      destinationTopLeft,\n      destinationTopRight,\n      destinationBottomRight,\n      destinationBottomLeft,\n      sourceTopLeft,\n      sourceTopRight,\n      sourceBottomRight,\n      sourceBottomLeft,\n      maxSubdivision\n    );\n\n    if (this.wrapsXInSource_) {\n      let leftBound = Infinity;\n      this.triangles_.forEach(function (triangle, i, arr) {\n        leftBound = Math.min(\n          leftBound,\n          triangle.source[0][0],\n          triangle.source[1][0],\n          triangle.source[2][0]\n        );\n      });\n\n      // Shift triangles to be as close to `leftBound` as possible\n      // (if the distance is more than `worldWidth / 2` it can be closer.\n      this.triangles_.forEach((triangle) => {\n        if (\n          Math.max(\n            triangle.source[0][0],\n            triangle.source[1][0],\n            triangle.source[2][0]\n          ) -\n            leftBound >\n          this.sourceWorldWidth_ / 2\n        ) {\n          const newTriangle = [\n            [triangle.source[0][0], triangle.source[0][1]],\n            [triangle.source[1][0], triangle.source[1][1]],\n            [triangle.source[2][0], triangle.source[2][1]],\n          ];\n          if (newTriangle[0][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[0][0] -= this.sourceWorldWidth_;\n          }\n          if (newTriangle[1][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[1][0] -= this.sourceWorldWidth_;\n          }\n          if (newTriangle[2][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[2][0] -= this.sourceWorldWidth_;\n          }\n\n          // Rarely (if the extent contains both the dateline and prime meridian)\n          // the shift can in turn break some triangles.\n          // Detect this here and don't shift in such cases.\n          const minX = Math.min(\n            newTriangle[0][0],\n            newTriangle[1][0],\n            newTriangle[2][0]\n          );\n          const maxX = Math.max(\n            newTriangle[0][0],\n            newTriangle[1][0],\n            newTriangle[2][0]\n          );\n          if (maxX - minX < this.sourceWorldWidth_ / 2) {\n            triangle.source = newTriangle;\n          }\n        }\n      });\n    }\n\n    transformInvCache = {};\n  }\n\n  /**\n   * Adds triangle to the triangulation.\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @private\n   */\n  addTriangle_(a, b, c, aSrc, bSrc, cSrc) {\n    this.triangles_.push({\n      source: [aSrc, bSrc, cSrc],\n      target: [a, b, c],\n    });\n  }\n\n  /**\n   * Adds quad (points in clock-wise order) to the triangulation\n   * (and reprojects the vertices) if valid.\n   * Performs quad subdivision if needed to increase precision.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n   * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n   * @private\n   */\n  addQuad_(a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n    const sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n    const sourceCoverageX = this.sourceWorldWidth_\n      ? getWidth(sourceQuadExtent) / this.sourceWorldWidth_\n      : null;\n    const sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n\n    // when the quad is wrapped in the source projection\n    // it covers most of the projection extent, but not fully\n    const wrapsX =\n      this.sourceProj_.canWrapX() &&\n      sourceCoverageX > 0.5 &&\n      sourceCoverageX < 1;\n\n    let needsSubdivision = false;\n\n    if (maxSubdivision > 0) {\n      if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n        const targetQuadExtent = boundingExtent([a, b, c, d]);\n        const targetCoverageX =\n          getWidth(targetQuadExtent) / this.targetWorldWidth_;\n        needsSubdivision =\n          targetCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n      if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n        needsSubdivision =\n          sourceCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n    }\n\n    if (!needsSubdivision && this.maxSourceExtent_) {\n      if (\n        isFinite(sourceQuadExtent[0]) &&\n        isFinite(sourceQuadExtent[1]) &&\n        isFinite(sourceQuadExtent[2]) &&\n        isFinite(sourceQuadExtent[3])\n      ) {\n        if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n          // whole quad outside source projection extent -> ignore\n          return;\n        }\n      }\n    }\n\n    let isNotFinite = 0;\n\n    if (!needsSubdivision) {\n      if (\n        !isFinite(aSrc[0]) ||\n        !isFinite(aSrc[1]) ||\n        !isFinite(bSrc[0]) ||\n        !isFinite(bSrc[1]) ||\n        !isFinite(cSrc[0]) ||\n        !isFinite(cSrc[1]) ||\n        !isFinite(dSrc[0]) ||\n        !isFinite(dSrc[1])\n      ) {\n        if (maxSubdivision > 0) {\n          needsSubdivision = true;\n        } else {\n          // It might be the case that only 1 of the points is infinite. In this case\n          // we can draw a single triangle with the other three points\n          isNotFinite =\n            (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ? 8 : 0) +\n            (!isFinite(bSrc[0]) || !isFinite(bSrc[1]) ? 4 : 0) +\n            (!isFinite(cSrc[0]) || !isFinite(cSrc[1]) ? 2 : 0) +\n            (!isFinite(dSrc[0]) || !isFinite(dSrc[1]) ? 1 : 0);\n          if (\n            isNotFinite != 1 &&\n            isNotFinite != 2 &&\n            isNotFinite != 4 &&\n            isNotFinite != 8\n          ) {\n            return;\n          }\n        }\n      }\n    }\n\n    if (maxSubdivision > 0) {\n      if (!needsSubdivision) {\n        const center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n        const centerSrc = this.transformInv_(center);\n\n        let dx;\n        if (wrapsX) {\n          const centerSrcEstimX =\n            (modulo(aSrc[0], sourceWorldWidth) +\n              modulo(cSrc[0], sourceWorldWidth)) /\n            2;\n          dx = centerSrcEstimX - modulo(centerSrc[0], sourceWorldWidth);\n        } else {\n          dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n        }\n        const dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n        const centerSrcErrorSquared = dx * dx + dy * dy;\n        needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n      }\n      if (needsSubdivision) {\n        if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n          // split horizontally (top & bottom)\n          const bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n          const bcSrc = this.transformInv_(bc);\n          const da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n          const daSrc = this.transformInv_(da);\n\n          this.addQuad_(\n            a,\n            b,\n            bc,\n            da,\n            aSrc,\n            bSrc,\n            bcSrc,\n            daSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            da,\n            bc,\n            c,\n            d,\n            daSrc,\n            bcSrc,\n            cSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n        } else {\n          // split vertically (left & right)\n          const ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n          const abSrc = this.transformInv_(ab);\n          const cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n          const cdSrc = this.transformInv_(cd);\n\n          this.addQuad_(\n            a,\n            ab,\n            cd,\n            d,\n            aSrc,\n            abSrc,\n            cdSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            ab,\n            b,\n            c,\n            cd,\n            abSrc,\n            bSrc,\n            cSrc,\n            cdSrc,\n            maxSubdivision - 1\n          );\n        }\n        return;\n      }\n    }\n\n    if (wrapsX) {\n      if (!this.canWrapXInSource_) {\n        return;\n      }\n      this.wrapsXInSource_ = true;\n    }\n\n    // Exactly zero or one of *Src is not finite\n    // The triangles must have the diagonal line as the first side\n    // This is to allow easy code in reproj.s to make it straight for broken\n    // browsers that can't handle diagonal clipping\n    if ((isNotFinite & 0xb) == 0) {\n      this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n    }\n    if ((isNotFinite & 0xe) == 0) {\n      this.addTriangle_(a, c, b, aSrc, cSrc, bSrc);\n    }\n    if (isNotFinite) {\n      // Try the other two triangles\n      if ((isNotFinite & 0xd) == 0) {\n        this.addTriangle_(b, d, a, bSrc, dSrc, aSrc);\n      }\n      if ((isNotFinite & 0x7) == 0) {\n        this.addTriangle_(b, d, c, bSrc, dSrc, cSrc);\n      }\n    }\n  }\n\n  /**\n   * Calculates extent of the `source` coordinates from all the triangles.\n   *\n   * @return {import(\"../extent.js\").Extent} Calculated extent.\n   */\n  calculateSourceExtent() {\n    const extent = createEmpty();\n\n    this.triangles_.forEach(function (triangle, i, arr) {\n      const src = triangle.source;\n      extendCoordinate(extent, src[0]);\n      extendCoordinate(extent, src[1]);\n      extendCoordinate(extent, src[2]);\n    });\n\n    return extent;\n  }\n\n  /**\n   * @return {Array<Triangle>} Array of the calculated triangles.\n   */\n  getTriangles() {\n    return this.triangles_;\n  }\n}\n\nexport default Triangulation;\n","/**\n * @module ol/reproj/Tile\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport EventType from '../events/EventType.js';\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport Triangulation from './Triangulation.js';\nimport {\n  calculateSourceExtentResolution,\n  canvasPool,\n  render as renderReprojected,\n} from '../reproj.js';\nimport {clamp} from '../math.js';\nimport {getArea, getIntersection} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {releaseCanvas} from '../dom.js';\n\n/**\n * @typedef {function(number, number, number, number) : (import(\"../ImageTile.js\").default)} FunctionType\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nclass ReprojTile extends Tile {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n   * @param {import(\"../tilecoord.js\").TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} gutter Gutter of the source tiles.\n   * @param {FunctionType} getTileFunction\n   *     Function returning source tiles (z, x, y, pixelRatio).\n   * @param {number} [errorThreshold] Acceptable reprojection error (in px).\n   * @param {boolean} [renderEdges] Render reprojection edges.\n   * @param {boolean} [interpolate] Use linear interpolation when resampling.\n   */\n  constructor(\n    sourceProj,\n    sourceTileGrid,\n    targetProj,\n    targetTileGrid,\n    tileCoord,\n    wrappedTileCoord,\n    pixelRatio,\n    gutter,\n    getTileFunction,\n    errorThreshold,\n    renderEdges,\n    interpolate\n  ) {\n    super(tileCoord, TileState.IDLE, {interpolate: !!interpolate});\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderEdges_ = renderEdges !== undefined ? renderEdges : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = gutter;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.sourceTileGrid_ = sourceTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.targetTileGrid_ = targetTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n\n    /**\n     * @private\n     * @type {!Array<import(\"../ImageTile.js\").default>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    const targetExtent = targetTileGrid.getTileCoordExtent(\n      this.wrappedTileCoord_\n    );\n    const maxTargetExtent = this.targetTileGrid_.getExtent();\n    let maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const sourceProjExtent = sourceProj.getExtent();\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    const targetResolution = targetTileGrid.getResolution(\n      this.wrappedTileCoord_[0]\n    );\n\n    const sourceResolution = calculateSourceExtentResolution(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      targetResolution\n    );\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const errorThresholdInPixels =\n      errorThreshold !== undefined ? errorThreshold : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution\n    );\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n    let sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n        sourceExtent[3] = clamp(\n          sourceExtent[3],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      const sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(\n        sourceExtent,\n        this.sourceZ_\n      );\n\n      for (let srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n        for (let srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n          const tile = getTileFunction(this.sourceZ_, srcX, srcY, pixelRatio);\n          if (tile) {\n            this.sourceTiles_.push(tile);\n          }\n        }\n      }\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  /**\n   * Get the HTML Canvas element for this tile.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const sources = [];\n    this.sourceTiles_.forEach((tile) => {\n      if (tile && tile.getState() == TileState.LOADED) {\n        sources.push({\n          extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\n          image: tile.getImage(),\n        });\n      }\n    });\n    this.sourceTiles_.length = 0;\n\n    if (sources.length === 0) {\n      this.state = TileState.ERROR;\n    } else {\n      const z = this.wrappedTileCoord_[0];\n      const size = this.targetTileGrid_.getTileSize(z);\n      const width = typeof size === 'number' ? size : size[0];\n      const height = typeof size === 'number' ? size : size[1];\n      const targetResolution = this.targetTileGrid_.getResolution(z);\n      const sourceResolution = this.sourceTileGrid_.getResolution(\n        this.sourceZ_\n      );\n\n      const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n        this.wrappedTileCoord_\n      );\n\n      this.canvas_ = renderReprojected(\n        width,\n        height,\n        this.pixelRatio_,\n        sourceResolution,\n        this.sourceTileGrid_.getExtent(),\n        targetResolution,\n        targetExtent,\n        this.triangulation_,\n        sources,\n        this.gutter_,\n        this.renderEdges_,\n        this.interpolate\n      );\n\n      this.state = TileState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n\n      let leftToLoad = 0;\n\n      this.sourcesListenerKeys_ = [];\n      this.sourceTiles_.forEach((tile) => {\n        const state = tile.getState();\n        if (state == TileState.IDLE || state == TileState.LOADING) {\n          leftToLoad++;\n\n          const sourceListenKey = listen(\n            tile,\n            EventType.CHANGE,\n            function (e) {\n              const state = tile.getState();\n              if (\n                state == TileState.LOADED ||\n                state == TileState.ERROR ||\n                state == TileState.EMPTY\n              ) {\n                unlistenByKey(sourceListenKey);\n                leftToLoad--;\n                if (leftToLoad === 0) {\n                  this.unlistenSources_();\n                  this.reproject_();\n                }\n              }\n            },\n            this\n          );\n          this.sourcesListenerKeys_.push(sourceListenKey);\n        }\n      });\n\n      if (leftToLoad === 0) {\n        setTimeout(this.reproject_.bind(this), 0);\n      } else {\n        this.sourceTiles_.forEach(function (tile, i, arr) {\n          const state = tile.getState();\n          if (state == TileState.IDLE) {\n            tile.load();\n          }\n        });\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSources_() {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  }\n\n  /**\n   * Remove from the cache due to expiry\n   */\n  release() {\n    if (this.canvas_) {\n      releaseCanvas(this.canvas_.getContext('2d'));\n      canvasPool.push(this.canvas_);\n      this.canvas_ = null;\n    }\n    super.release();\n  }\n}\n\nexport default ReprojTile;\n","/**\n * @module ol/reproj/common\n */\n\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport const ERROR_THRESHOLD = 0.5;\n","/**\n * @module ol/rotationconstraint\n */\nimport {toRadians} from './math.js';\n\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation) {\n  if (rotation !== undefined) {\n    return 0;\n  }\n  return undefined;\n}\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation) {\n  if (rotation !== undefined) {\n    return rotation;\n  }\n  return undefined;\n}\n\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n  const theta = (2 * Math.PI) / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        rotation = Math.floor(rotation / theta + 0.5) * theta;\n        return rotation;\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} [tolerance] Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(tolerance) {\n  tolerance = tolerance || toRadians(5);\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        if (Math.abs(rotation) <= tolerance) {\n          return 0;\n        }\n        return rotation;\n      }\n      return undefined;\n    }\n  );\n}\n","/**\n * @module ol/size\n */\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = size[0] + 2 * num;\n  dest[1] = size[1] + 2 * num;\n  return dest;\n}\n\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = (size[0] * ratio + 0.5) | 0;\n  dest[1] = (size[1] * ratio + 0.5) | 0;\n  return dest;\n}\n\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, dest) {\n  if (Array.isArray(size)) {\n    return size;\n  }\n  if (dest === undefined) {\n    dest = [size, size];\n  } else {\n    dest[0] = size;\n    dest[1] = size;\n  }\n  return dest;\n}\n","/**\n * @module ol/structs/LRUCache\n */\n\nimport {assert} from '../asserts.js';\n\n/**\n * @typedef {Object} Entry\n * @property {string} key_ Key.\n * @property {Object} newer Newer.\n * @property {Object} older Older.\n * @property {*} value_ Value.\n */\n\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").default\n * @template T\n */\nclass LRUCache {\n  /**\n   * @param {number} [highWaterMark] High water mark.\n   */\n  constructor(highWaterMark) {\n    /**\n     * Desired max cache size after expireCache(). If set to 0, no cache entries\n     * will be pruned at all.\n     * @type {number}\n     */\n    this.highWaterMark = highWaterMark !== undefined ? highWaterMark : 2048;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.count_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, Entry>}\n     */\n    this.entries_ = {};\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.oldest_ = null;\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.newest_ = null;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.highWaterMark > 0 && this.getCount() > this.highWaterMark;\n  }\n\n  /**\n   * Expire the cache.\n   * @param {!Object<string, boolean>} [keep] Keys to keep. To be implemented by subclasses.\n   */\n  expireCache(keep) {\n    while (this.canExpireCache()) {\n      this.pop();\n    }\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.count_ = 0;\n    this.entries_ = {};\n    this.oldest_ = null;\n    this.newest_ = null;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Contains key.\n   */\n  containsKey(key) {\n    return this.entries_.hasOwnProperty(key);\n  }\n\n  /**\n   * @param {function(T, string, LRUCache<T>): ?} f The function\n   *     to call for every entry from the oldest to the newer. This function takes\n   *     3 arguments (the entry value, the entry key and the LRUCache object).\n   *     The return value is ignored.\n   */\n  forEach(f) {\n    let entry = this.oldest_;\n    while (entry) {\n      f(entry.value_, entry.key_, this);\n      entry = entry.newer;\n    }\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {*} [options] Options (reserved for subclasses).\n   * @return {T} Value.\n   */\n  get(key, options) {\n    const entry = this.entries_[key];\n    assert(\n      entry !== undefined,\n      'Tried to get a value for a key that does not exist in the cache'\n    );\n    if (entry === this.newest_) {\n      return entry.value_;\n    }\n    if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n      this.oldest_.older = null;\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    entry.newer = null;\n    entry.older = this.newest_;\n    this.newest_.newer = entry;\n    this.newest_ = entry;\n    return entry.value_;\n  }\n\n  /**\n   * Remove an entry from the cache.\n   * @param {string} key The entry key.\n   * @return {T} The removed entry.\n   */\n  remove(key) {\n    const entry = this.entries_[key];\n    assert(\n      entry !== undefined,\n      'Tried to get a value for a key that does not exist in the cache'\n    );\n    if (entry === this.newest_) {\n      this.newest_ = /** @type {Entry} */ (entry.older);\n      if (this.newest_) {\n        this.newest_.newer = null;\n      }\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (entry.newer);\n      if (this.oldest_) {\n        this.oldest_.older = null;\n      }\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    delete this.entries_[key];\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.count_;\n  }\n\n  /**\n   * @return {Array<string>} Keys.\n   */\n  getKeys() {\n    const keys = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      keys[i++] = entry.key_;\n    }\n    return keys;\n  }\n\n  /**\n   * @return {Array<T>} Values.\n   */\n  getValues() {\n    const values = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      values[i++] = entry.value_;\n    }\n    return values;\n  }\n\n  /**\n   * @return {T} Last value.\n   */\n  peekLast() {\n    return this.oldest_.value_;\n  }\n\n  /**\n   * @return {string} Last key.\n   */\n  peekLastKey() {\n    return this.oldest_.key_;\n  }\n\n  /**\n   * Get the key of the newest item in the cache.  Throws if the cache is empty.\n   * @return {string} The newest key.\n   */\n  peekFirstKey() {\n    return this.newest_.key_;\n  }\n\n  /**\n   * Return an entry without updating least recently used time.\n   * @param {string} key Key.\n   * @return {T} Value.\n   */\n  peek(key) {\n    if (!this.containsKey(key)) {\n      return undefined;\n    }\n    return this.entries_[key].value_;\n  }\n\n  /**\n   * @return {T} value Value.\n   */\n  pop() {\n    const entry = this.oldest_;\n    delete this.entries_[entry.key_];\n    if (entry.newer) {\n      entry.newer.older = null;\n    }\n    this.oldest_ = /** @type {Entry} */ (entry.newer);\n    if (!this.oldest_) {\n      this.newest_ = null;\n    }\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  replace(key, value) {\n    this.get(key); // update `newest_`\n    this.entries_[key].value_ = value;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  set(key, value) {\n    assert(\n      !(key in this.entries_),\n      'Tried to set a value for a key that is used already'\n    );\n    const entry = {\n      key_: key,\n      newer: null,\n      older: this.newest_,\n      value_: value,\n    };\n    if (!this.newest_) {\n      this.oldest_ = entry;\n    } else {\n      this.newest_.newer = entry;\n    }\n    this.newest_ = entry;\n    this.entries_[key] = entry;\n    ++this.count_;\n  }\n\n  /**\n   * Set a maximum number of entries for the cache.\n   * @param {number} size Cache size.\n   * @api\n   */\n  setSize(size) {\n    this.highWaterMark = size;\n  }\n}\n\nexport default LRUCache;\n","/**\n * @module ol/tilecoord\n */\n\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z` (zoom level), `x` (column), and `y` (row).\n * @typedef {Array<number>} TileCoord\n * @api\n */\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord} [tileCoord] Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, tileCoord) {\n  if (tileCoord !== undefined) {\n    tileCoord[0] = z;\n    tileCoord[1] = x;\n    tileCoord[2] = y;\n    return tileCoord;\n  }\n  return [z, x, y];\n}\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n  return z + '/' + x + '/' + y;\n}\n\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n  return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n/**\n * Get the tile cache key for a tile key obtained through `tile.getKey()`.\n * @param {string} tileKey The tile key.\n * @return {string} The cache key.\n */\nexport function getCacheKeyForTileKey(tileKey) {\n  const [z, x, y] = tileKey\n    .substring(tileKey.lastIndexOf('/') + 1, tileKey.length)\n    .split(',')\n    .map(Number);\n  return getKeyZXY(z, x, y);\n}\n\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n  return key.split('/').map(Number);\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n  return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n  const z = tileCoord[0];\n  const x = tileCoord[1];\n  const y = tileCoord[2];\n\n  if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n    return false;\n  }\n  const tileRange = tileGrid.getFullTileRange(z);\n  if (!tileRange) {\n    return true;\n  }\n  return tileRange.containsXY(x, y);\n}\n","/**\n * @module ol/TileCache\n */\nimport LRUCache from './structs/LRUCache.js';\nimport {fromKey, getKey} from './tilecoord.js';\n\nclass TileCache extends LRUCache {\n  clear() {\n    while (this.getCount() > 0) {\n      this.pop().release();\n    }\n    super.clear();\n  }\n\n  /**\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(usedTiles) {\n    while (this.canExpireCache()) {\n      const tile = this.peekLast();\n      if (tile.getKey() in usedTiles) {\n        break;\n      } else {\n        this.pop().release();\n      }\n    }\n  }\n\n  /**\n   * Prune all tiles from the cache that don't have the same z as the newest tile.\n   */\n  pruneExceptNewestZ() {\n    if (this.getCount() === 0) {\n      return;\n    }\n    const key = this.peekFirstKey();\n    const tileCoord = fromKey(key);\n    const z = tileCoord[0];\n    this.forEach((tile) => {\n      if (tile.tileCoord[0] !== z) {\n        this.remove(getKey(tile.tileCoord));\n        tile.release();\n      }\n    });\n  }\n}\n\nexport default TileCache;\n","/**\n * @module ol/source/TileEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a tile starts loading.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n   * @api\n   */\n  TILELOADSTART: 'tileloadstart',\n\n  /**\n   * Triggered when a tile finishes loading, either when its data is loaded,\n   * or when loading was aborted because the tile is no longer needed.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n   * @api\n   */\n  TILELOADEND: 'tileloadend',\n\n  /**\n   * Triggered if tile loading results in an error. Note that this is not the\n   * right place to re-fetch tiles. See {@link module:ol/ImageTile~ImageTile#load}\n   * for details.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n   * @api\n   */\n  TILELOADERROR: 'tileloaderror',\n};\n\n/**\n * @typedef {'tileloadstart'|'tileloadend'|'tileloaderror'} TileSourceEventTypes\n */\n","/**\n * @module ol/source/Source\n */\nimport BaseObject from '../Object.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * @typedef {'undefined' | 'loading' | 'ready' | 'error'} State\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\n\n/**\n * A function that takes a {@link import(\"../View.js\").ViewStateLayerStateExtent} and returns a string or\n * an array of strings representing source attributions.\n *\n * @typedef {function(import(\"../View.js\").ViewStateLayerStateExtent): (string|Array<string>)} Attribution\n */\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"./Source.js\").State} [state='ready'] State.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nclass Source extends BaseObject {\n  /**\n   * @param {Options} options Source options.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|null}\n     */\n    this.projection = getProjection(options.projection);\n\n    /**\n     * @private\n     * @type {?Attribution}\n     */\n    this.attributions_ = adaptAttributions(options.attributions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.attributionsCollapsible_ =\n      options.attributionsCollapsible !== undefined\n        ? options.attributionsCollapsible\n        : true;\n\n    /**\n     * This source is currently loading data. Sources that defer loading to the\n     * map's tile queue never set this to `true`.\n     * @type {boolean}\n     */\n    this.loading = false;\n\n    /**\n     * @private\n     * @type {import(\"./Source.js\").State}\n     */\n    this.state_ = options.state !== undefined ? options.state : 'ready';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.interpolate_ = !!options.interpolate;\n\n    /**\n     * @protected\n     * @type {function(import(\"../View.js\").ViewOptions):void}\n     */\n    this.viewResolver = null;\n\n    /**\n     * @protected\n     * @type {function(Error):void}\n     */\n    this.viewRejector = null;\n\n    const self = this;\n    /**\n     * @private\n     * @type {Promise<import(\"../View.js\").ViewOptions>}\n     */\n    this.viewPromise_ = new Promise(function (resolve, reject) {\n      self.viewResolver = resolve;\n      self.viewRejector = reject;\n    });\n  }\n\n  /**\n   * Get the attribution function for the source.\n   * @return {?Attribution} Attribution function.\n   * @api\n   */\n  getAttributions() {\n    return this.attributions_;\n  }\n\n  /**\n   * @return {boolean} Attributions are collapsible.\n   * @api\n   */\n  getAttributionsCollapsible() {\n    return this.attributionsCollapsible_;\n  }\n\n  /**\n   * Get the projection of the source.\n   * @return {import(\"../proj/Projection.js\").default|null} Projection.\n   * @api\n   */\n  getProjection() {\n    return this.projection;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions(projection) {\n    return null;\n  }\n\n  /**\n   * @return {Promise<import(\"../View.js\").ViewOptions>} A promise for view-related properties.\n   */\n  getView() {\n    return this.viewPromise_;\n  }\n\n  /**\n   * Get the state of the source, see {@link import(\"./Source.js\").State} for possible states.\n   * @return {import(\"./Source.js\").State} State.\n   * @api\n   */\n  getState() {\n    return this.state_;\n  }\n\n  /**\n   * @return {boolean|undefined} Wrap X.\n   */\n  getWrapX() {\n    return this.wrapX_;\n  }\n\n  /**\n   * @return {boolean} Use linear interpolation when resampling.\n   */\n  getInterpolate() {\n    return this.interpolate_;\n  }\n\n  /**\n   * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n   * @api\n   */\n  refresh() {\n    this.changed();\n  }\n\n  /**\n   * Set the attributions of the source.\n   * @param {AttributionLike|undefined} attributions Attributions.\n   *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n   *     or `undefined`.\n   * @api\n   */\n  setAttributions(attributions) {\n    this.attributions_ = adaptAttributions(attributions);\n    this.changed();\n  }\n\n  /**\n   * Set the state of the source.\n   * @param {import(\"./Source.js\").State} state State.\n   */\n  setState(state) {\n    this.state_ = state;\n    this.changed();\n  }\n}\n\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {Attribution|null} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (Array.isArray(attributionLike)) {\n    return function (frameState) {\n      return attributionLike;\n    };\n  }\n\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n\n  return function (frameState) {\n    return [attributionLike];\n  };\n}\n\nexport default Source;\n","/**\n * @module ol/tilegrid/TileGrid\n */\nimport TileRange, {\n  createOrUpdate as createOrUpdateTileRange,\n} from '../TileRange.js';\nimport {DEFAULT_TILE_SIZE} from './common.js';\nimport {assert} from '../asserts.js';\nimport {ceil, clamp, floor} from '../math.js';\nimport {createOrUpdate, getTopLeft} from '../extent.js';\nimport {createOrUpdate as createOrUpdateTileCoord} from '../tilecoord.js';\nimport {intersectsLinearRing} from '../geom/flat/intersectsextent.js';\nimport {isSorted, linearFindNearest} from '../array.js';\nimport {toSize} from '../size.js';\n\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nconst tmpTileCoord = [0, 0, 0];\n\n/**\n * Number of decimal digits to consider in integer values when rounding.\n * @type {number}\n */\nconst DECIMALS = 5;\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile~TileSource} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and downwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and downwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. If specified the values\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent\n * for which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<number|import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nclass TileGrid {\n  /**\n   * @param {Options} options Tile grid options.\n   */\n  constructor(options) {\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n\n    /**\n     * @private\n     * @type {!Array<number>}\n     */\n    this.resolutions_ = options.resolutions;\n    assert(\n      isSorted(\n        this.resolutions_,\n        function (a, b) {\n          return b - a;\n        },\n        true\n      ),\n      '`resolutions` must be sorted in descending order'\n    );\n\n    // check if we've got a consistent zoom factor and origin\n    let zoomFactor;\n    if (!options.origins) {\n      for (let i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n        if (!zoomFactor) {\n          zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n        } else {\n          if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n            zoomFactor = undefined;\n            break;\n          }\n        }\n      }\n    }\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zoomFactor_ = zoomFactor;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxZoom = this.resolutions_.length - 1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.origin_ = options.origin !== undefined ? options.origin : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../coordinate.js\").Coordinate>}\n     */\n    this.origins_ = null;\n    if (options.origins !== undefined) {\n      this.origins_ = options.origins;\n      assert(\n        this.origins_.length == this.resolutions_.length,\n        'Number of `origins` and `resolutions` must be equal'\n      );\n    }\n\n    const extent = options.extent;\n\n    if (extent !== undefined && !this.origin_ && !this.origins_) {\n      this.origin_ = getTopLeft(extent);\n    }\n\n    assert(\n      (!this.origin_ && this.origins_) || (this.origin_ && !this.origins_),\n      'Either `origin` or `origins` must be configured, never both'\n    );\n\n    /**\n     * @private\n     * @type {Array<number|import(\"../size.js\").Size>}\n     */\n    this.tileSizes_ = null;\n    if (options.tileSizes !== undefined) {\n      this.tileSizes_ = options.tileSizes;\n      assert(\n        this.tileSizes_.length == this.resolutions_.length,\n        'Number of `tileSizes` and `resolutions` must be equal'\n      );\n    }\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.tileSize_ =\n      options.tileSize !== undefined\n        ? options.tileSize\n        : !this.tileSizes_\n        ? DEFAULT_TILE_SIZE\n        : null;\n    assert(\n      (!this.tileSize_ && this.tileSizes_) ||\n        (this.tileSize_ && !this.tileSizes_),\n      'Either `tileSize` or `tileSizes` must be configured, never both'\n    );\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = extent !== undefined ? extent : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../TileRange.js\").default>}\n     */\n    this.fullTileRanges_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize_ = [0, 0];\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = [0, 0, 0, 0];\n\n    if (options.sizes !== undefined) {\n      this.fullTileRanges_ = options.sizes.map(function (size, z) {\n        const tileRange = new TileRange(\n          Math.min(0, size[0]),\n          Math.max(size[0] - 1, -1),\n          Math.min(0, size[1]),\n          Math.max(size[1] - 1, -1)\n        );\n        if (extent) {\n          const restrictedTileRange = this.getTileRangeForExtentAndZ(extent, z);\n          tileRange.minX = Math.max(restrictedTileRange.minX, tileRange.minX);\n          tileRange.maxX = Math.min(restrictedTileRange.maxX, tileRange.maxX);\n          tileRange.minY = Math.max(restrictedTileRange.minY, tileRange.minY);\n          tileRange.maxY = Math.min(restrictedTileRange.maxY, tileRange.maxY);\n        }\n        return tileRange;\n      }, this);\n    } else if (extent) {\n      this.calculateTileRanges_(extent);\n    }\n  }\n\n  /**\n   * Call a function with each tile coordinate for a given extent and zoom level.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} zoom Integer zoom level.\n   * @param {function(import(\"../tilecoord.js\").TileCoord): void} callback Function called with each tile coordinate.\n   * @api\n   */\n  forEachTileCoord(extent, zoom, callback) {\n    const tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n    for (let i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n      for (let j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n        callback([zoom, i, j]);\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {function(number, import(\"../TileRange.js\").default): boolean} callback Callback.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {boolean} Callback succeeded.\n   */\n  forEachTileCoordParentTileRange(\n    tileCoord,\n    callback,\n    tempTileRange,\n    tempExtent\n  ) {\n    let tileRange, x, y;\n    let tileCoordExtent = null;\n    let z = tileCoord[0] - 1;\n    if (this.zoomFactor_ === 2) {\n      x = tileCoord[1];\n      y = tileCoord[2];\n    } else {\n      tileCoordExtent = this.getTileCoordExtent(tileCoord, tempExtent);\n    }\n    while (z >= this.minZoom) {\n      if (this.zoomFactor_ === 2) {\n        x = Math.floor(x / 2);\n        y = Math.floor(y / 2);\n        tileRange = createOrUpdateTileRange(x, x, y, y, tempTileRange);\n      } else {\n        tileRange = this.getTileRangeForExtentAndZ(\n          tileCoordExtent,\n          z,\n          tempTileRange\n        );\n      }\n      if (callback(z, tileRange)) {\n        return true;\n      }\n      --z;\n    }\n    return false;\n  }\n\n  /**\n   * Get the extent for this tile grid, if it was configured.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the maximum zoom level for the grid.\n   * @return {number} Max zoom.\n   * @api\n   */\n  getMaxZoom() {\n    return this.maxZoom;\n  }\n\n  /**\n   * Get the minimum zoom level for the grid.\n   * @return {number} Min zoom.\n   * @api\n   */\n  getMinZoom() {\n    return this.minZoom;\n  }\n\n  /**\n   * Get the origin for the grid at the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {import(\"../coordinate.js\").Coordinate} Origin.\n   * @api\n   */\n  getOrigin(z) {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    return this.origins_[z];\n  }\n\n  /**\n   * Get the resolution for the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {number} Resolution.\n   * @api\n   */\n  getResolution(z) {\n    return this.resolutions_[z];\n  }\n\n  /**\n   * Get the list of resolutions for the tile grid.\n   * @return {Array<number>} Resolutions.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileCoordChildTileRange(tileCoord, tempTileRange, tempExtent) {\n    if (tileCoord[0] < this.maxZoom) {\n      if (this.zoomFactor_ === 2) {\n        const minX = tileCoord[1] * 2;\n        const minY = tileCoord[2] * 2;\n        return createOrUpdateTileRange(\n          minX,\n          minX + 1,\n          minY,\n          minY + 1,\n          tempTileRange\n        );\n      }\n      const tileCoordExtent = this.getTileCoordExtent(\n        tileCoord,\n        tempExtent || this.tmpExtent_\n      );\n      return this.getTileRangeForExtentAndZ(\n        tileCoordExtent,\n        tileCoord[0] + 1,\n        tempTileRange\n      );\n    }\n    return null;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileRangeForTileCoordAndZ(tileCoord, z, tempTileRange) {\n    if (z > this.maxZoom || z < this.minZoom) {\n      return null;\n    }\n\n    const tileCoordZ = tileCoord[0];\n    const tileCoordX = tileCoord[1];\n    const tileCoordY = tileCoord[2];\n\n    if (z === tileCoordZ) {\n      return createOrUpdateTileRange(\n        tileCoordX,\n        tileCoordY,\n        tileCoordX,\n        tileCoordY,\n        tempTileRange\n      );\n    }\n\n    if (this.zoomFactor_) {\n      const factor = Math.pow(this.zoomFactor_, z - tileCoordZ);\n      const minX = Math.floor(tileCoordX * factor);\n      const minY = Math.floor(tileCoordY * factor);\n      if (z < tileCoordZ) {\n        return createOrUpdateTileRange(minX, minX, minY, minY, tempTileRange);\n      }\n\n      const maxX = Math.floor(factor * (tileCoordX + 1)) - 1;\n      const maxY = Math.floor(factor * (tileCoordY + 1)) - 1;\n      return createOrUpdateTileRange(minX, maxX, minY, maxY, tempTileRange);\n    }\n\n    const tileCoordExtent = this.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    return this.getTileRangeForExtentAndZ(tileCoordExtent, z, tempTileRange);\n  }\n\n  /**\n   * Get a tile range for the given extent and integer zoom level.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary tile range object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileRangeForExtentAndZ(extent, z, tempTileRange) {\n    this.getTileCoordForXYAndZ_(extent[0], extent[3], z, false, tmpTileCoord);\n    const minX = tmpTileCoord[1];\n    const minY = tmpTileCoord[2];\n    this.getTileCoordForXYAndZ_(extent[2], extent[1], z, true, tmpTileCoord);\n    const maxX = tmpTileCoord[1];\n    const maxY = tmpTileCoord[2];\n    return createOrUpdateTileRange(minX, maxX, minY, maxY, tempTileRange);\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n   */\n  getTileCoordCenter(tileCoord) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    return [\n      origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n      origin[1] - (tileCoord[2] + 0.5) * tileSize[1] * resolution,\n    ];\n  }\n\n  /**\n   * Get the extent of a tile coordinate.\n   *\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getTileCoordExtent(tileCoord, tempExtent) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    const minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n    const minY = origin[1] - (tileCoord[2] + 1) * tileSize[1] * resolution;\n    const maxX = minX + tileSize[0] * resolution;\n    const maxY = minY + tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, tempExtent);\n  }\n\n  /**\n   * Get the tile coordinate for the given map coordinate and resolution.  This\n   * method considers that coordinates that intersect tile boundaries should be\n   * assigned the higher tile coordinate.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndResolution(coordinate, resolution, opt_tileCoord) {\n    return this.getTileCoordForXYAndResolution_(\n      coordinate[0],\n      coordinate[1],\n      resolution,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * Note that this method should not be called for resolutions that correspond\n   * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {number} resolution Resolution (for a non-integer zoom level).\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndResolution_(\n    x,\n    y,\n    resolution,\n    reverseIntersectionPolicy,\n    opt_tileCoord\n  ) {\n    const z = this.getZForResolution(resolution);\n    const scale = resolution / this.getResolution(z);\n    const origin = this.getOrigin(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (scale * (x - origin[0])) / resolution / tileSize[0];\n    let tileCoordY = (scale * (origin[1] - y)) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n   * they should have separate implementations.  This method is for integer zoom\n   * levels.  The other method should only be called for resolutions corresponding\n   * to non-integer zoom levels.\n   * @param {number} x Map x coordinate.\n   * @param {number} y Map y coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndZ_(x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (x - origin[0]) / resolution / tileSize[0];\n    let tileCoordY = (origin[1] - y) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Get a tile coordinate given a map coordinate and zoom level.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} z Zoom level.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndZ(coordinate, z, opt_tileCoord) {\n    return this.getTileCoordForXYAndZ_(\n      coordinate[0],\n      coordinate[1],\n      z,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {number} Tile resolution.\n   */\n  getTileCoordResolution(tileCoord) {\n    return this.resolutions_[tileCoord[0]];\n  }\n\n  /**\n   * Get the tile size for a zoom level. The type of the return value matches the\n   * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n   * get an {@link import(\"../size.js\").Size}, run the result through {@link module:ol/size.toSize}.\n   * @param {number} z Z.\n   * @return {number|import(\"../size.js\").Size} Tile size.\n   * @api\n   */\n  getTileSize(z) {\n    if (this.tileSize_) {\n      return this.tileSize_;\n    }\n    return this.tileSizes_[z];\n  }\n\n  /**\n   * @param {number} z Zoom level.\n   * @return {import(\"../TileRange.js\").default} Extent tile range for the specified zoom level.\n   */\n  getFullTileRange(z) {\n    if (!this.fullTileRanges_) {\n      return this.extent_\n        ? this.getTileRangeForExtentAndZ(this.extent_, z)\n        : null;\n    }\n    return this.fullTileRanges_[z];\n  }\n\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number|import(\"../array.js\").NearestDirectionFunction} [opt_direction]\n   *     If 0, the nearest resolution will be used.\n   *     If 1, the nearest higher resolution (lower Z) will be used. If -1, the\n   *     nearest lower resolution (higher Z) will be used. Default is 0.\n   *     Use a {@link module:ol/array~NearestDirectionFunction} for more precise control.\n   *\n   * For example to change tile Z at the midpoint of zoom levels\n   * ```js\n   * function(value, high, low) {\n   *   return value - low * Math.sqrt(high / low);\n   * }\n   * ```\n   * @return {number} Z.\n   * @api\n   */\n  getZForResolution(resolution, opt_direction) {\n    const z = linearFindNearest(\n      this.resolutions_,\n      resolution,\n      opt_direction || 0\n    );\n    return clamp(z, this.minZoom, this.maxZoom);\n  }\n\n  /**\n   * The tile with the provided tile coordinate intersects the given viewport.\n   * @param {import('../tilecoord.js').TileCoord} tileCoord Tile coordinate.\n   * @param {Array<number>} viewport Viewport as returned from {@link module:ol/extent.getRotatedViewport}.\n   * @return {boolean} The tile with the provided tile coordinate intersects the given viewport.\n   */\n  tileCoordIntersectsViewport(tileCoord, viewport) {\n    return intersectsLinearRing(\n      viewport,\n      0,\n      viewport.length,\n      2,\n      this.getTileCoordExtent(tileCoord)\n    );\n  }\n\n  /**\n   * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n   * @private\n   */\n  calculateTileRanges_(extent) {\n    const length = this.resolutions_.length;\n    const fullTileRanges = new Array(length);\n    for (let z = this.minZoom; z < length; ++z) {\n      fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n    }\n    this.fullTileRanges_ = fullTileRanges;\n  }\n}\n\nexport default TileGrid;\n","/**\n * @module ol/tilegrid\n */\nimport TileGrid from './tilegrid/TileGrid.js';\nimport {DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {METERS_PER_UNIT, get as getProjection} from './proj.js';\nimport {\n  containsCoordinate,\n  createOrUpdate,\n  getCorner,\n  getHeight,\n  getWidth,\n} from './extent.js';\nimport {toSize} from './size.js';\n\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n  let tileGrid = projection.getDefaultTileGrid();\n  if (!tileGrid) {\n    tileGrid = createForProjection(projection);\n    projection.setDefaultTileGrid(tileGrid);\n  }\n  return tileGrid;\n}\n\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n  const z = tileCoord[0];\n  const center = tileGrid.getTileCoordCenter(tileCoord);\n  const projectionExtent = extentFromProjection(projection);\n  if (!containsCoordinate(projectionExtent, center)) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.ceil(\n      (projectionExtent[0] - center[0]) / worldWidth\n    );\n    center[0] += worldWidth * worldsAway;\n    return tileGrid.getTileCoordForCoordAndZ(center, z);\n  }\n  return tileCoord;\n}\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, maxZoom, tileSize, corner) {\n  corner = corner !== undefined ? corner : 'top-left';\n\n  const resolutions = resolutionsFromExtent(extent, maxZoom, tileSize);\n\n  return new TileGrid({\n    extent: extent,\n    origin: getCorner(extent, corner),\n    resolutions: resolutions,\n    tileSize: tileSize,\n  });\n}\n\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. If `maxResolution` is not provided the zero level of the grid is defined by the resolution\n * at which one tile fits in the provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxResolution] Resolution at level zero.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions} [options] Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(options) {\n  const xyzOptions = options || {};\n\n  const extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n\n  const gridOptions = {\n    extent: extent,\n    minZoom: xyzOptions.minZoom,\n    tileSize: xyzOptions.tileSize,\n    resolutions: resolutionsFromExtent(\n      extent,\n      xyzOptions.maxZoom,\n      xyzOptions.tileSize,\n      xyzOptions.maxResolution\n    ),\n  };\n  return new TileGrid(gridOptions);\n}\n\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {number} [maxResolution] Resolution at level zero.\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(extent, maxZoom, tileSize, maxResolution) {\n  maxZoom = maxZoom !== undefined ? maxZoom : DEFAULT_MAX_ZOOM;\n  tileSize = toSize(tileSize !== undefined ? tileSize : DEFAULT_TILE_SIZE);\n\n  const height = getHeight(extent);\n  const width = getWidth(extent);\n\n  maxResolution =\n    maxResolution > 0\n      ? maxResolution\n      : Math.max(width / tileSize[0], height / tileSize[1]);\n\n  const length = maxZoom + 1;\n  const resolutions = new Array(length);\n  for (let z = 0; z < length; ++z) {\n    resolutions[z] = maxResolution / Math.pow(2, z);\n  }\n  return resolutions;\n}\n\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(projection, maxZoom, tileSize, corner) {\n  const extent = extentFromProjection(projection);\n  return createForExtent(extent, maxZoom, tileSize, corner);\n}\n\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n  projection = getProjection(projection);\n  let extent = projection.getExtent();\n  if (!extent) {\n    const half =\n      (180 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit();\n    extent = createOrUpdate(-half, -half, half, half);\n  }\n  return extent;\n}\n","/**\n * @module ol/source/Tile\n */\nimport Event from '../events/Event.js';\nimport Source from './Source.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {equivalent} from '../proj.js';\nimport {getKeyZXY, withinExtentAndZ} from '../tilecoord.js';\nimport {\n  getForProjection as getTileGridForProjection,\n  wrapX,\n} from '../tilegrid.js';\nimport {scale as scaleSize, toSize} from '../size.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./TileEventType\").TileSourceEventTypes, TileSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./TileEventType\").TileSourceEventTypes, Return>} TileSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] CacheSize.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n * @abstract\n * @api\n */\nclass TileSource extends Source {\n  /**\n   * @param {Options} options SourceTile source options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      projection: options.projection,\n      state: options.state,\n      wrapX: options.wrapX,\n      interpolate: options.interpolate,\n    });\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {TileSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilePixelRatio_ =\n      options.tilePixelRatio !== undefined ? options.tilePixelRatio : 1;\n\n    /**\n     * @type {import(\"../tilegrid/TileGrid.js\").default|null}\n     */\n    this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n\n    const tileSize = [256, 256];\n    if (this.tileGrid) {\n      toSize(this.tileGrid.getTileSize(this.tileGrid.getMinZoom()), tileSize);\n    }\n\n    /**\n     * @protected\n     * @type {import(\"../TileCache.js\").default}\n     */\n    this.tileCache = new TileCache(options.cacheSize || 0);\n\n    /**\n     * @protected\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize = [0, 0];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.key_ = options.key || '';\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").Options}\n     */\n    this.tileOptions = {\n      transition: options.transition,\n      interpolate: options.interpolate,\n    };\n\n    /**\n     * zDirection hint, read by the renderer. Indicates which resolution should be used\n     * by a renderer if the views resolution does not match any resolution of the tile source.\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n     * will be used. If -1, the nearest higher resolution will be used.\n     * @type {number|import(\"../array.js\").NearestDirectionFunction}\n     */\n    this.zDirection = options.zDirection ? options.zDirection : 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.tileCache.canExpireCache();\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCache) {\n      tileCache.expireCache(usedTiles);\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {number} z Zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {function(import(\"../Tile.js\").default):(boolean|void)} callback Called with each\n   *     loaded tile.  If the callback returns `false`, the tile will not be\n   *     considered loaded.\n   * @return {boolean} The tile range is fully covered with loaded tiles.\n   */\n  forEachLoadedTile(projection, z, tileRange, callback) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (!tileCache) {\n      return false;\n    }\n\n    let covered = true;\n    let tile, tileCoordKey, loaded;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        tileCoordKey = getKeyZXY(z, x, y);\n        loaded = false;\n        if (tileCache.containsKey(tileCoordKey)) {\n          tile = /** @type {!import(\"../Tile.js\").default} */ (\n            tileCache.get(tileCoordKey)\n          );\n          loaded = tile.getState() === TileState.LOADED;\n          if (loaded) {\n            loaded = callback(tile) !== false;\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    return this.key_;\n  }\n\n  /**\n   * Set the value to be used as the key for all tiles in the source.\n   * @param {string} key The key for tiles.\n   * @protected\n   */\n  setKey(key) {\n    if (this.key_ !== key) {\n      this.key_ = key;\n      this.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    return this.opaque_;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions(projection) {\n    const tileGrid = projection\n      ? this.getTileGridForProjection(projection)\n      : this.tileGrid;\n    if (!tileGrid) {\n      return null;\n    }\n    return tileGrid.getResolutions();\n  }\n\n  /**\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    return abstract();\n  }\n\n  /**\n   * Return the tile grid of the tile source.\n   * @return {import(\"../tilegrid/TileGrid.js\").default|null} Tile grid.\n   * @api\n   */\n  getTileGrid() {\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!this.tileGrid) {\n      return getTileGridForProjection(projection);\n    }\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   * @protected\n   */\n  getTileCacheForProjection(projection) {\n    const sourceProjection = this.getProjection();\n    assert(\n      sourceProjection === null || equivalent(sourceProjection, projection),\n      'A VectorTile source can only be rendered if it has a projection compatible with the view projection.'\n    );\n    return this.tileCache;\n  }\n\n  /**\n   * Get the tile pixel ratio for this source. Subclasses may override this\n   * method, which is meant to return a supported pixel ratio that matches the\n   * provided `pixelRatio` as close as possible.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return this.tilePixelRatio_;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   */\n  getTilePixelSize(z, pixelRatio, projection) {\n    const tileGrid = this.getTileGridForProjection(projection);\n    const tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n    const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    if (tilePixelRatio == 1) {\n      return tileSize;\n    }\n    return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n  }\n\n  /**\n   * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n   * is outside the resolution and extent range of the tile grid, `null` will be\n   * returned.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Projection.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n   *     null if no tile URL should be created for the passed `tileCoord`.\n   */\n  getTileCoordForTileUrlFunction(tileCoord, projection) {\n    projection = projection !== undefined ? projection : this.getProjection();\n    const tileGrid = this.getTileGridForProjection(projection);\n    if (this.getWrapX() && projection.isGlobal()) {\n      tileCoord = wrapX(tileGrid, tileCoord, projection);\n    }\n    return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n  }\n\n  /**\n   * Remove all cached tiles from the source. The next render cycle will fetch new tiles.\n   * @api\n   */\n  clear() {\n    this.tileCache.clear();\n  }\n\n  refresh() {\n    this.clear();\n    super.refresh();\n  }\n\n  /**\n   * Increases the cache size if needed\n   * @param {number} tileCount Minimum number of tiles needed.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  updateCacheSize(tileCount, projection) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCount > tileCache.highWaterMark) {\n      tileCache.highWaterMark = tileCount;\n    }\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  useTile(z, x, y, projection) {}\n}\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nexport class TileSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Tile.js\").default} tile The tile.\n   */\n  constructor(type, tile) {\n    super(type);\n\n    /**\n     * The tile related to the event.\n     * @type {import(\"../Tile.js\").default}\n     * @api\n     */\n    this.tile = tile;\n  }\n}\n\nexport default TileSource;\n","/**\n * @module ol/tileurlfunction\n */\nimport {assert} from './asserts.js';\nimport {modulo} from './math.js';\nimport {hash as tileCoordHash} from './tilecoord.js';\n\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n  const zRegEx = /\\{z\\}/g;\n  const xRegEx = /\\{x\\}/g;\n  const yRegEx = /\\{y\\}/g;\n  const dashYRegEx = /\\{-y\\}/g;\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      }\n      return template\n        .replace(zRegEx, tileCoord[0].toString())\n        .replace(xRegEx, tileCoord[1].toString())\n        .replace(yRegEx, tileCoord[2].toString())\n        .replace(dashYRegEx, function () {\n          const z = tileCoord[0];\n          const range = tileGrid.getFullTileRange(z);\n          assert(\n            range,\n            'The {-y} placeholder requires a tile grid with extent'\n          );\n          const y = range.getHeight() - tileCoord[2] - 1;\n          return y.toString();\n        });\n    }\n  );\n}\n\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n  const len = templates.length;\n  const tileUrlFunctions = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n  }\n  return createFromTileUrlFunctions(tileUrlFunctions);\n}\n\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[0];\n  }\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      }\n      const h = tileCoordHash(tileCoord);\n      const index = modulo(h, tileUrlFunctions.length);\n      return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n    }\n  );\n}\n\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n  return undefined;\n}\n\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n  const urls = [];\n  let match = /\\{([a-z])-([a-z])\\}/.exec(url);\n  if (match) {\n    // char range\n    const startCharCode = match[1].charCodeAt(0);\n    const stopCharCode = match[2].charCodeAt(0);\n    let charCode;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n    return urls;\n  }\n  match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n  if (match) {\n    // number range\n    const stop = parseInt(match[2], 10);\n    for (let i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n    return urls;\n  }\n  urls.push(url);\n  return urls;\n}\n","/**\n * @module ol/source/TileImage\n */\nimport EventType from '../events/EventType.js';\nimport ImageTile from '../ImageTile.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport UrlTile from './UrlTile.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport {getKey, getKeyZXY} from '../tilecoord.js';\nimport {getForProjection as getTileGridForProjection} from '../tilegrid.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./Source.js\").State} [state] Source state.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [key] Optional tile key for proper cache fetching\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Base class for sources providing images divided into a tile grid.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nclass TileImage extends UrlTile {\n  /**\n   * @param {!Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction\n        ? options.tileLoadFunction\n        : defaultTileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate:\n        options.interpolate !== undefined ? options.interpolate : true,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @protected\n     * @type {?string}\n     */\n    this.crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @protected\n     * @type {typeof ImageTile}\n     */\n    this.tileClass =\n      options.tileClass !== undefined ? options.tileClass : ImageTile;\n\n    /**\n     * @protected\n     * @type {!Object<string, TileCache>}\n     */\n    this.tileCacheForProjection = {};\n\n    /**\n     * @protected\n     * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGridForProjection = {};\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderReprojectionEdges_ = false;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    if (this.tileCache.canExpireCache()) {\n      return true;\n    }\n    for (const key in this.tileCacheForProjection) {\n      if (this.tileCacheForProjection[key].canExpireCache()) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const usedTileCache = this.getTileCacheForProjection(projection);\n\n    this.tileCache.expireCache(\n      this.tileCache == usedTileCache ? usedTiles : {}\n    );\n    for (const id in this.tileCacheForProjection) {\n      const tileCache = this.tileCacheForProjection[id];\n      tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    if (\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return 0;\n    }\n    return this.getGutter();\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    let key = super.getKey();\n    if (!this.getInterpolate()) {\n      key += ':disable-interpolation';\n    }\n    return key;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    if (\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return false;\n    }\n    return super.getOpaque(projection);\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n      return this.tileGrid;\n    }\n    const projKey = getUid(projection);\n    if (!(projKey in this.tileGridForProjection)) {\n      this.tileGridForProjection[projKey] =\n        getTileGridForProjection(projection);\n    }\n    return this.tileGridForProjection[projKey];\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   */\n  getTileCacheForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (!thisProj || equivalent(thisProj, projection)) {\n      return this.tileCache;\n    }\n    const projKey = getUid(projection);\n    if (!(projKey in this.tileCacheForProjection)) {\n      this.tileCacheForProjection[projKey] = new TileCache(\n        this.tileCache.highWaterMark\n      );\n    }\n    return this.tileCacheForProjection[projKey];\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {string} key The key set on the tile.\n   * @return {!ImageTile} Tile.\n   * @private\n   */\n  createTile_(z, x, y, pixelRatio, projection, key) {\n    const tileCoord = [z, x, y];\n    const urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection\n    );\n    const tileUrl = urlTileCoord\n      ? this.tileUrlFunction(urlTileCoord, pixelRatio, projection)\n      : undefined;\n    const tile = new this.tileClass(\n      tileCoord,\n      tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n      tileUrl !== undefined ? tileUrl : '',\n      this.crossOrigin,\n      this.tileLoadFunction,\n      this.tileOptions\n    );\n    tile.key = key;\n    tile.addEventListener(EventType.CHANGE, this.handleTileChange.bind(this));\n    return tile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!(ImageTile|ReprojTile)} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const sourceProjection = this.getProjection();\n    if (\n      !sourceProjection ||\n      !projection ||\n      equivalent(sourceProjection, projection)\n    ) {\n      return this.getTileInternal(\n        z,\n        x,\n        y,\n        pixelRatio,\n        sourceProjection || projection\n      );\n    }\n    const cache = this.getTileCacheForProjection(projection);\n    const tileCoord = [z, x, y];\n    let tile;\n    const tileCoordKey = getKey(tileCoord);\n    if (cache.containsKey(tileCoordKey)) {\n      tile = cache.get(tileCoordKey);\n    }\n    const key = this.getKey();\n    if (tile && tile.key == key) {\n      return tile;\n    }\n    const sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n    const targetTileGrid = this.getTileGridForProjection(projection);\n    const wrappedTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection\n    );\n    const newTile = new ReprojTile(\n      sourceProjection,\n      sourceTileGrid,\n      projection,\n      targetTileGrid,\n      tileCoord,\n      wrappedTileCoord,\n      this.getTilePixelRatio(pixelRatio),\n      this.getGutter(),\n      (z, x, y, pixelRatio) =>\n        this.getTileInternal(z, x, y, pixelRatio, sourceProjection),\n      this.reprojectionErrorThreshold_,\n      this.renderReprojectionEdges_,\n      this.getInterpolate()\n    );\n    newTile.key = key;\n\n    if (tile) {\n      newTile.interimTile = tile;\n      newTile.refreshInterimChain();\n      cache.replace(tileCoordKey, newTile);\n    } else {\n      cache.set(tileCoordKey, newTile);\n    }\n    return newTile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {!import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!ImageTile} Tile.\n   * @protected\n   */\n  getTileInternal(z, x, y, pixelRatio, projection) {\n    let tile = null;\n    const tileCoordKey = getKeyZXY(z, x, y);\n    const key = this.getKey();\n    if (!this.tileCache.containsKey(tileCoordKey)) {\n      tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n      this.tileCache.set(tileCoordKey, tile);\n    } else {\n      tile = this.tileCache.get(tileCoordKey);\n      if (tile.key != key) {\n        // The source's params changed. If the tile has an interim tile and if we\n        // can use it then we use it. Otherwise we create a new tile.  In both\n        // cases we attempt to assign an interim tile to the new tile.\n        const interimTile = tile;\n        tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n\n        //make the new tile the head of the list,\n        if (interimTile.getState() == TileState.IDLE) {\n          //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\n          tile.interimTile = interimTile.interimTile;\n        } else {\n          tile.interimTile = interimTile;\n        }\n        tile.refreshInterimChain();\n        this.tileCache.replace(tileCoordKey, tile);\n      }\n    }\n    return tile;\n  }\n\n  /**\n   * Sets whether to render reprojection edges or not (usually for debugging).\n   * @param {boolean} render Render the edges.\n   * @api\n   */\n  setRenderReprojectionEdges(render) {\n    if (this.renderReprojectionEdges_ == render) {\n      return;\n    }\n    this.renderReprojectionEdges_ = render;\n    for (const id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n    this.changed();\n  }\n\n  /**\n   * Sets the tile grid to use when reprojecting the tiles to the given\n   * projection instead of the default tile grid for the projection.\n   *\n   * This can be useful when the default tile grid cannot be created\n   * (e.g. projection has no extent defined) or\n   * for optimization reasons (custom tile size, resolutions, ...).\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n   * @api\n   */\n  setTileGridForProjection(projection, tilegrid) {\n    const proj = getProjection(projection);\n    if (proj) {\n      const projKey = getUid(proj);\n      if (!(projKey in this.tileGridForProjection)) {\n        this.tileGridForProjection[projKey] = tilegrid;\n      }\n    }\n  }\n\n  clear() {\n    super.clear();\n    for (const id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n  }\n}\n\n/**\n * @param {ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src =\n    src;\n}\n\nexport default TileImage;\n","/**\n * @module ol/source/OSM\n */\n\nimport XYZ from './XYZ.js';\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nexport const ATTRIBUTION =\n  '&#169; ' +\n  '<a href=\"https://www.openstreetmap.org/copyright\" target=\"_blank\">OpenStreetMap</a> ' +\n  'contributors.';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin='anonymous'] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {number} [maxZoom=19] Max zoom.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [url='https://tile.openstreetmap.org/{z}/{x}/{y}.png'] URL template.\n * Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n * @api\n */\nclass OSM extends XYZ {\n  /**\n   * @param {Options} [options] Open Street Map options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    let attributions;\n    if (options.attributions !== undefined) {\n      attributions = options.attributions;\n    } else {\n      attributions = [ATTRIBUTION];\n    }\n\n    const crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : 'anonymous';\n\n    const url =\n      options.url !== undefined\n        ? options.url\n        : 'https://tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n    super({\n      attributions: attributions,\n      attributionsCollapsible: false,\n      cacheSize: options.cacheSize,\n      crossOrigin: crossOrigin,\n      interpolate: options.interpolate,\n      maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n      opaque: options.opaque !== undefined ? options.opaque : true,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileLoadFunction: options.tileLoadFunction,\n      transition: options.transition,\n      url: url,\n      wrapX: options.wrapX,\n      zDirection: options.zDirection,\n    });\n  }\n}\n\nexport default OSM;\n","/**\n * @module ol/source/XYZ\n */\n\nimport TileImage from './TileImage.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {number} [maxZoom=42] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom=0] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * Not used if `tileGrid` is provided.\n * @property {number} [gutter=0] The size in pixels of the gutter around image tiles to ignore.\n * This allows artifacts of rendering at tile edges to be ignored.\n * Supported images should be wider and taller than the tile size by a value of `2 x gutter`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get\n * tile URL given a tile coordinate and the projection.\n * Required if `url` or `urls` are not provided.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\n * may be used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case\n * a `tileUrlFunction` can be used, such as:\n * ```js\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *      coordinate[1] + '/' + (-coordinate[2] - 1) + '.png';\n *  }\n * ```\n * @api\n */\nclass XYZ extends TileImage {\n  /**\n   * @param {Options} [options] XYZ options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    const projection =\n      options.projection !== undefined ? options.projection : 'EPSG:3857';\n\n    const tileGrid =\n      options.tileGrid !== undefined\n        ? options.tileGrid\n        : createXYZ({\n            extent: extentFromProjection(projection),\n            maxResolution: options.maxResolution,\n            maxZoom: options.maxZoom,\n            minZoom: options.minZoom,\n            tileSize: options.tileSize,\n          });\n\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      interpolate: options.interpolate,\n      opaque: options.opaque,\n      projection: projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return this.gutter_;\n  }\n}\n\nexport default XYZ;\n","/**\n * @module ol/source/UrlTile\n */\nimport TileEventType from './TileEventType.js';\nimport TileSource, {TileSourceEvent} from './Tile.js';\nimport TileState from '../TileState.js';\nimport {createFromTemplates, expandUrl} from '../tileurlfunction.js';\nimport {getKeyZXY} from '../tilecoord.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Cache size.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction TileLoadFunction.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] TileUrlFunction.\n * @property {string} [url] Url.\n * @property {Array<string>} [urls] Urls.\n * @property {boolean} [wrapX=true] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nclass UrlTile extends TileSource {\n  /**\n   * @param {Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tilePixelRatio: options.tilePixelRatio,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate: options.interpolate,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.generateTileUrlFunction_ =\n      this.tileUrlFunction === UrlTile.prototype.tileUrlFunction;\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction = options.tileLoadFunction;\n\n    if (options.tileUrlFunction) {\n      this.tileUrlFunction = options.tileUrlFunction;\n    }\n\n    /**\n     * @protected\n     * @type {!Array<string>|null}\n     */\n    this.urls = null;\n\n    if (options.urls) {\n      this.setUrls(options.urls);\n    } else if (options.url) {\n      this.setUrl(options.url);\n    }\n\n    /**\n     * @private\n     * @type {!Object<string, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n  }\n\n  /**\n   * Return the tile load function of the source.\n   * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n   * @api\n   */\n  getTileLoadFunction() {\n    return this.tileLoadFunction;\n  }\n\n  /**\n   * Return the tile URL function of the source.\n   * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n   * @api\n   */\n  getTileUrlFunction() {\n    return Object.getPrototypeOf(this).tileUrlFunction === this.tileUrlFunction\n      ? this.tileUrlFunction.bind(this)\n      : this.tileUrlFunction;\n  }\n\n  /**\n   * Return the URLs used for this source.\n   * When a tileUrlFunction is used instead of url or urls,\n   * null will be returned.\n   * @return {!Array<string>|null} URLs.\n   * @api\n   */\n  getUrls() {\n    return this.urls;\n  }\n\n  /**\n   * Handle tile change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n    const uid = getUid(tile);\n    const tileState = tile.getState();\n    let type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type =\n        tileState == TileState.ERROR\n          ? TileEventType.TILELOADERROR\n          : tileState == TileState.LOADED\n          ? TileEventType.TILELOADEND\n          : undefined;\n    }\n    if (type != undefined) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  }\n\n  /**\n   * Set the tile load function of the source.\n   * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @api\n   */\n  setTileLoadFunction(tileLoadFunction) {\n    this.tileCache.clear();\n    this.tileLoadFunction = tileLoadFunction;\n    this.changed();\n  }\n\n  /**\n   * Set the tile URL function of the source.\n   * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n   * @param {string} [key] Optional new tile key for the source.\n   * @api\n   */\n  setTileUrlFunction(tileUrlFunction, key) {\n    this.tileUrlFunction = tileUrlFunction;\n    this.tileCache.pruneExceptNewestZ();\n    if (typeof key !== 'undefined') {\n      this.setKey(key);\n    } else {\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string} url URL.\n   * @api\n   */\n  setUrl(url) {\n    const urls = expandUrl(url);\n    this.urls = urls;\n    this.setUrls(urls);\n  }\n\n  /**\n   * Set the URLs to use for requests.\n   * @param {Array<string>} urls URLs.\n   * @api\n   */\n  setUrls(urls) {\n    this.urls = urls;\n    const key = urls.join('\\n');\n    if (this.generateTileUrlFunction_) {\n      this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n    } else {\n      this.setKey(key);\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {string|undefined} Tile URL.\n   */\n  tileUrlFunction(tileCoord, pixelRatio, projection) {\n    return undefined;\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   */\n  useTile(z, x, y) {\n    const tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      this.tileCache.get(tileCoordKey);\n    }\n  }\n}\n\nexport default UrlTile;\n","/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport const DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport const DEFAULT_TILE_SIZE = 256;\n","/**\n * @module ol/transform\n */\nimport {WORKER_OFFSCREEN_CANVAS} from './has.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n * @api\n */\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n/**\n * @private\n * @type {Transform}\n */\nconst tmp_ = new Array(6);\n\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  const a1 = transform1[0];\n  const b1 = transform1[1];\n  const c1 = transform1[2];\n  const d1 = transform1[3];\n  const e1 = transform1[4];\n  const f1 = transform1[5];\n  const a2 = transform2[0];\n  const b2 = transform2[1];\n  const c2 = transform2[2];\n  const d2 = transform2[3];\n  const e2 = transform2[4];\n  const f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n  return set(target, x, 0, 0, y, 0, 0);\n}\n\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  const sin = Math.sin(angle);\n  const cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative). The resulting transform\n * string can be applied as `transform` property of an HTMLElement's style.\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {string} The composite css transform.\n * @api\n */\nexport function composeCssTransform(dx1, dy1, sx, sy, angle, dx2, dy2) {\n  return toString(compose(create(), dx1, dy1, sx, sy, angle, dx2, dy2));\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n  return makeInverse(source, source);\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n  const det = determinant(source);\n  assert(det !== 0, 'Transformation matrix cannot be inverted');\n\n  const a = source[0];\n  const b = source[1];\n  const c = source[2];\n  const d = source[3];\n  const e = source[4];\n  const f = source[5];\n\n  target[0] = d / det;\n  target[1] = -b / det;\n  target[2] = -c / det;\n  target[3] = a / det;\n  target[4] = (c * f - d * e) / det;\n  target[5] = -(a * f - b * e) / det;\n\n  return target;\n}\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n\n/**\n * @type {HTMLElement}\n * @private\n */\nlet transformStringDiv;\n\n/**\n * A rounded string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n  const transformString = 'matrix(' + mat.join(', ') + ')';\n  if (WORKER_OFFSCREEN_CANVAS) {\n    return transformString;\n  }\n  const node =\n    transformStringDiv || (transformStringDiv = document.createElement('div'));\n  node.style.transform = transformString;\n  return node.style.transform;\n}\n","/**\n * @module ol/util\n */\n\n/**\n * @return {never} Any return.\n */\nexport function abstract() {\n  throw new Error('Unimplemented abstract method.');\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nlet uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport const VERSION = '8.1.0';\n"],"names":["_assertThisInitialized","self","ReferenceError","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","this","args","arguments","apply","err","undefined","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","_createClass","protoProps","staticProps","prototype","_createSuper","Derived","hasNativeReflectConstruct","Reflect","construct","sham","Proxy","Boolean","valueOf","call","e","result","Super","getPrototypeOf","NewTarget","constructor","possibleConstructorReturn","_defineProperty","obj","_get","get","bind","property","receiver","base","object","hasOwnProperty","desc","getOwnPropertyDescriptor","_getPrototypeOf","o","setPrototypeOf","__proto__","_inherits","subClass","superClass","create","ownKeys","r","t","keys","getOwnPropertySymbols","filter","push","_objectSpread2","forEach","getOwnPropertyDescriptors","defineProperties","_possibleConstructorReturn","_regeneratorRuntime","n","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","wrap","Generator","Context","makeInvokeMethod","tryCatch","type","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","v","values","g","defineIteratorMethods","_invoke","AsyncIterator","invoke","__await","callInvokeWithMethodAndArg","Error","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","isNaN","displayName","isGeneratorFunction","name","mark","awrap","async","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","delegateYield","_toPropertyKey","input","hint","prim","toPrimitive","res","String","Number","_typeof","Disposable","disposed","disposeInternal","_Tile","ImageTile","_super","tileCoord","state","src","crossOrigin","tileLoadFunction","options","_this","crossOrigin_","src_","image_","Image","unlisten_","tileLoadFunction_","element","TileState","LOADED","unlistenImage_","changed","ERROR","ctx","createCanvasContext2D","fillStyle","fillRect","canvas","getBlankImage","image","naturalWidth","naturalHeight","EMPTY","IDLE","LOADING","loadHandler","errorHandler","img","listening","decoding","loaded","listenerKeys","listenOnce","EventType","LOAD","IMAGE_DECODE","decode","catch","unlistenByKey","listenImage","handleImageLoad_","handleImageError_","Tile","Property","CollectionEvent","_Event","index","Event","Collection","_BaseObject","_super2","array","_this2","on","once","un","unique_","unique","array_","ii","assertUnique_","updateLength_","getLength","arr","elem","splice","dispatchEvent","CollectionEventType","removeAt","insertAt","set","except","BaseObject","IconImageCache","cache_","cacheSize_","maxCacheSize_","canExpireCache","iconImage","hasListener","color","getKey","maxCacheSize","expire","asString","shared","expireIconCache","map","frameState","iconImageCache","measureFont","_Disposable","MapRenderer","map_","abstract","viewState","coordinateToPixelTransform","pixelToCoordinateTransform","composeTransform","size","resolution","rotation","center","makeInverse","coordinate","hitTolerance","checkWrapped","callback","thisArg","layerFilter","thisArg2","forEachFeatureAtCoordinate","managed","feature","layer","geometry","projection","translatedCoordinate","wrapX","offsets","canWrapX","projectionExtent","getExtent","worldWidth","getWidth","layerStates","layerStatesArray","numLayers","matches","tmpCoord","j","layerState","hasRenderer","inView","layerRenderer","getRenderer","source","getSource","coordinates","getWrapX","order","m","distanceSq","sort","b","some","TRUE","postRenderFunctions","CLASS_HIDDEN","CLASS_UNSELECTABLE","CLASS_CONTROL","CLASS_COLLAPSED","fontRegEx","RegExp","join","fontRegExMatchIndex","getFontParameters","fontSpec","match","style","lineHeight","weight","variant","families","family","split","checkedFonts","measureContext","textHeights","interval","referenceWidth","referenceFonts","len","text","isAvailable","fontStyle","fontWeight","fontFamily","available","referenceFont","measureTextWidth","width","check","fonts","getKeys","font","clear","clearInterval","measureElement","measureText","_MapRenderer","CompositeMapRenderer","fontChangeListenerKey_","listen","ObjectEventType","PROPERTYCHANGE","redrawText","element_","document","createElement","position","height","zIndex","className","container","getViewport","insertBefore","firstChild","children_","renderedVisible_","declutterLayers_","getMap","event","RenderEvent","parentNode","removeChild","calculateMatrices2D","dispatchRenderEvent","RenderEventType","PRECOMPOSE","declutterLayers","previousElement","layerIndex","sourceState","getSourceState","unrender","render","flushDeclutterItems","replaceChildren","POSTCOMPOSE","display","scheduleExpireIconCache","layers","renderDeclutter","GroupEvent","LayerGroup","_BaseLayer","baseOptions","assign","layersListenerKeys_","listenerKeys_","addChangeListener","handleLayersChanged_","Array","isArray","assert","getArray","setLayers","getLayers","id","handleLayersAdd_","handleLayersRemove_","layersArray","registerLayerListeners_","handleLayerChange_","CHANGE","handleLayerGroupAdd_","handleLayerGroupRemove_","getUid","collectionEvent","collection","currentLayers","getLayersArray","dest","states","pos","getLayerStatesArray","ownLayerState","getLayerState","defaultZIndex","opacity","visible","maxResolution","Math","min","minResolution","max","minZoom","maxZoom","extent","getIntersection","BaseLayer","MapEvent","_MapEvent","MapBrowserEvent","originalEvent","dragging","activePointers","pixel_","coordinate_","getEventPixel","pixel","getCoordinateFromPixel","preventDefault","stopPropagation","SINGLECLICK","CLICK","DBLCLICK","POINTERDRAG","POINTERMOVE","POINTERDOWN","POINTERUP","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","POINTERCANCEL","_Target","MapBrowserEventHandler","moveTolerance","clickTimeoutId_","emulateClicks_","dragging_","dragListenerKeys_","moveTolerance_","down_","activePointers_","trackedTouches_","pointerdownListenerKey_","PointerEventType","handlePointerDown_","originalPointerMoveEvent_","relayedListenerKey_","relayMoveEvent_","boundHandleTouchMove_","handleTouchMove_","addEventListener","TOUCHMOVE","PASSIVE_EVENT_LISTENERS","passive","pointerEvent","newEvent","MapBrowserEventType","clearTimeout","setTimeout","pointerId","updateActivePointers_","defaultPrevented","isMouseActionButton_","emulateClick_","button","PointerEvent","doc","getOwnerDocument","handlePointerMove_","handlePointerUp_","getRootNode","isMoving_","cancelable","abs","clientX","clientY","removeEventListener","Target","DROP","Infinity","PriorityQueue","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","elements","priorities","siftUp_","elementKey","priority","siftDown_","isKeyQueued","count","startIndex","lIndex","getLeftChildIndex_","rIndex","getRightChildIndex_","smallerChildIndex","parentIndex","getParentIndex_","heapify_","_PriorityQueue","TileQueue","tilePriorityFunction","tileChangeCallback","boundHandleTileChange_","handleTileChange","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","added","tile","getState","tileKey","maxTotalLoading","maxNewLoads","newLoads","getCount","dequeue","load","Control","pointerEvents","target_","setTarget","removeNode","getOverlayContainerStopEvent","appendChild","VOID","MapEventType","mapEvent","getElementById","_Control","Attribution","ulElement_","collapsed_","collapsed","userCollapsed_","overrideCollapsible_","collapsible","collapsible_","tipLabel","expandClassName","collapseLabel","collapseClassName","collapseLabel_","textContent","label","label_","activeLabel","toggleButton_","setAttribute","title","handleClick_","cssClasses","renderedAttributions_","visibleAttributions","from","Set","getAllLayers","flatMap","getAttributions","getAttributionsCollapsible","setCollapsible","attributions","collectSourceAttributions_","equals","removeChildren","innerHTML","handleToggle_","classList","toggle","replaceNode","updateElement_","Rotate","compassClassName","add","callResetNorth_","resetNorth","duration_","duration","autoHide_","autoHide","rotation_","resetNorth_","view","getView","getRotation","PI","animate","easing","easeOut","setRotation","transform","contains","remove","Zoom","delta","zoomInClassName","zoomOutClassName","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","createTextNode","outElement","zoomByDelta_","currentZoom","getZoom","newZoom","getConstrainedZoom","getAnimating","cancelAnimations","zoom","setZoom","zoomByDelta","anchor","newResolution","getResolutionForZoom","Interaction","handleEvent","setActive","InteractionProperty","mapBrowserEvent","active","_Interaction","DoubleClickZoom","delta_","stopEvent","browserEvent","shiftKey","centroid","PointerInteraction","handleDownEvent","handleDragEvent","handleMoveEvent","handleUpEvent","stopDown","handlingDownUpSequence","targetPointers","updateTrackedPointers_","handledUp","handled","all","var_args","conditions","pass","altShiftKeysOnly","altKey","metaKey","ctrlKey","focusWithTabindex","getTargetElement","hasAttribute","targetElement","activeElement","focus","always","mouseActionButton","WEBKIT","MAC","noModifierKeys","shiftKeyOnly","targetNotEditable","tagName","isContentEditable","mouseOnly","pointerType","primaryAction","isPrimary","_PointerInteraction","DragPan","FALSE","kinetic_","kinetic","lastCentroid","lastPointersCount_","panning_","condition","condition_","onFocusOnly","noKinetic_","beginInteraction","centroidFromPointers","update","scaleCoordinate","getResolution","rotateCoordinate","adjustCenterInternal","begin","end","distance","getDistance","angle","getAngle","getCenterInternal","centerpx","getPixelFromCoordinateInternal","getCoordinateFromPixelInternal","cos","sin","animateInternal","getConstrainedCenter","endInteraction","DragRotate","lastAngle_","getConstraints","disable","getSize","offset","theta","atan2","adjustRotationInternal","RenderBox","geometry_","startPixel_","endPixel_","setMap","startPixel","endPixel","px","left","top","getOverlayContainer","createOrUpdateGeometry","render_","setCoordinates","Polygon","DragBoxEventType","DragBoxEvent","_DragBox","DragZoom","minArea","out_","out","getGeometry","rotatedExtent","rotatedExtentForGeometry","getResolutionForExtentInternal","factor","clone","scale","fitInternal","DragBox","box_","minArea_","onBoxEnd","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","setPixels","completeBox","KeyboardPan","defaultCondition_","pixelDelta_","pixelDelta","KEYDOWN","keyEvent","Key","mapUnitsDelta","deltaX","deltaY","currentCenter","linear","pan","KeyboardZoom","platformModifierKey","KEYPRESS","Kinetic","decay","minVelocity","delay","decay_","minVelocity_","delay_","points_","angle_","initialVelocity_","x","Date","now","lastIndex","firstIndex","dx","dy","sqrt","MouseWheelZoom","totalDelta_","lastDelta_","maxDelta_","maxDelta","timeout_","timeout","useAnchor_","useAnchor","constrainResolution_","constrainResolution","lastAnchor_","startTime_","timeoutId_","mode_","trackpadEventGap_","trackpadTimeoutId_","deltaPerZoom_","WHEEL","wheelEvent","FIREFOX","deltaMode","WheelEvent","DOM_DELTA_PIXEL","DEVICE_PIXEL_RATIO","DOM_DELTA_LINE","getConstrainResolution","endInteraction_","adjustZoom","timeLeft","handleWheelZoom_","clamp","PinchRotate","pointerOptions","anchor_","rotating_","rotationDelta_","threshold_","threshold","rotationDelta","touch0","touch1","PinchZoom","lastDistance_","lastScaleDelta_","scaleDelta","adjustResolutionInternal","direction","removeLayerMapProperty","Layer","setMapInternal","setLayerMapProperty","Map","optionsInternal","keyboardEventTarget","controls","interactions","overlays","layerGroup","MapProperty","View","createOptionsInternal","renderComplete_","loaded_","boundHandleBrowserEvent_","handleBrowserEvent","maxTilesLoading_","maxTilesLoading","pixelRatio_","pixelRatio","postRenderTimeoutHandle_","animationDelayKey_","animationDelay_","coordinateToPixelTransform_","createTransform","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","window","overflow","overlayContainer_","overlayContainerStopEvent_","mapBrowserEventHandler_","keyboardEventTarget_","targetChangeHandlerKeys_","targetElement_","resizeObserver_","ResizeObserver","updateSize","zoomOptions","rotate","rotateOptions","attribution","attributionOptions","defaultControls","altShiftDragRotate","doubleClickZoom","zoomDelta","zoomDuration","dragPan","pinchRotate","pinchZoom","keyboard","mouseWheelZoom","shiftDragZoom","defaultInteractions","overlays_","overlayIdIndex_","renderer_","postRenderFunctions_","tileQueue_","getTilePriority","handleTileChange_","handleLayerGroupChanged_","handleViewChanged_","handleSizeChanged_","handleTargetChanged_","setProperties","viewOptions","setView","addOverlayInternal_","getId","toString","control","interaction","getControls","getInteractions","getLayerGroup","overlay","getOverlays","disconnect","features","forEachFeatureAtPixel","addLayersFrom","hasFeatureAtCoordinate","viewportPosition","getBoundingClientRect","viewportSize","scaleX","scaleY","eventPosition","changedTouches","toUserCoordinate","getProjection","applyTransform","group","extend","renderer","ready","loading","viewCoordinate","fromUserCoordinate","ownerDocument","tileSourceKey","tileCenter","tileResolution","wantedTiles","log","handleMapBrowserEvent","eventType","rootNode","documentElement","interactionsArray","getActive","propagationStopped","tileQueue","isEmpty","hints","viewHints","ViewHint","ANIMATING","INTERACTING","lowOnFrameBudget","time","getTilesLoading","reprioritize","loadMoreTiles","RENDERCOMPLETE","resolveConstraints","CONTEXTMENU","dispose","unobserve","ShadowRoot","host","setSize","getTarget","observe","cancelAnimationFrame","updateViewportSize_","handleViewPropertyChanged_","handleLayerAdd_","handleLayerRemove_","renderFrame_","handleFontsChanged","requestAnimationFrame","previousFrameState","hasArea","isDef","getHints","declutterTree","getForViewAndSize","usedTiles","mapId","renderTargets","nextCenter","nextResolution","nextRotation","nextExtent","renderFrame","equalsExtent","createOrUpdateEmpty","getLoadingOrNotReady","handlePostRender","oldLayerGroup","computedStyle","getComputedStyle","offsetWidth","parseFloat","offsetHeight","getClientRects","warn","oldSize","parseInt","setViewportSize","ObjectEvent","oldValue","_Observable","values_","concat","listener","silent","notify","Observable","_EventTarget","onInternal","onceInternal","unInternal","revision_","ol_key","unByKey","EventTarget","interimTile","transition_","transition","transitionStarts_","interpolate","setState","start","easeIn","TileRange","minX","maxX","minY","maxY","containsXY","tileRange","getHeight","createOrUpdate","CENTER","RESOLUTION","ROTATION","createExtent","onlyCenter","smooth","isMoving","centerShift","viewWidth","viewHeight","shiftX","shiftY","ratio","none","getViewportClampedResolution","maxExtent","showFullExtent","xResolution","yResolution","getSmoothClampedResolution","createMinMaxResolution","cappedMaxRes","hints_","animations_","updateAnimationKey_","projection_","createProjection","viewportSize_","targetCenter_","targetResolution_","targetRotation_","nextCenter_","nextResolution_","nextRotation_","cancelAnchor_","disableCoordinateWarning","fromUserExtent","applyOptions_","properties","ViewProperty","resolutionConstraintInfo","resolutionConstraint","defaultMaxZoom","defaultZoomFactor","zoomFactor","multiWorld","smoothResolutionConstraint","projExtent","constrainOnlyCenter","isGlobal","resolutions","capped","z","floor","linearFindNearest","createSnapToResolutions","defaultMaxResolution","METERS_PER_UNIT","degrees","getMetersPerUnit","DEFAULT_TILE_SIZE","pow","defaultMinResolution","power","minZoomLevel","ceil","cappedZoomLevel","zoomLevel","createSnapToPower","constraint","createResolutionConstraint","maxResolution_","minResolution_","zoomFactor_","resolutions_","padding_","padding","minZoom_","centerConstraint","smoothExtentConstraint","centerNone","createCenterConstraint","rotationConstraint","enableRotation","constrainRotation","createSnapToZero","rotationNone","createSnapToN","createRotationConstraint","constraints_","setCenterInternal","setResolution","oldPadding","newPadding","offsetX","offsetY","newOptions","getProperties","animationCount","series","animation","inAndOut","sourceCenter","targetCenter","sourceResolution","targetResolution","sourceRotation","modulo","targetRotation","isNoopAnimation","setHint","updateAnimations_","animationCallback","jj","NaN","more","seriesComplete","elapsed","fraction","progress","x0","y0","x1","y1","getViewportSize_","constrainedResolution","calculateCenterZoom","applyTargetState_","constrainedRotation","calculateCenterRotate","addCoordinate","currentResolution","w","calculateExtentInternal","toUserExtent","getViewportSizeMinusPadding_","getZoomForResolution","getUpdatedOptions_","enabled","getConstrainedResolution","logPower","reducedSize","calculateCenterOn","calculateExtent","nearest","baseLevel","geometryOrExtent","getSimplifiedGeometry","polygonFromExtent","getType","getCenter","userProjection","getUserProjection","cosAngle","sinAngle","coords","getFlatCoordinates","stride","getStride","minRotX","minRotY","maxRotX","maxRotY","rotX","rotY","centerRot","centerX","centerY","centerOnInternal","shiftedCenter","deltaCoordinates","setCenter","getInteracting","adjustResolution","newRotation","doNotCancelAnims","forceMoving","newCenter","calculateCenterShift","resolutionDirection","endInteractionInternal","targetZoom","targetRes","returnValue","coordinatesEqual","ascending","candidate","data","extension","arr1","arr2","len1","isSorted","func","strict","compare","every","currentVal","assertion","errorMessage","HEX_COLOR_RE_","NAMED_COLOR_RE_","round","fromNamed","el","body","rgb","fromString","cache","cacheSize","exec","hasAlpha","substr","startsWith","normalize","fromStringInternal_","asArray","levels","level","_console2","console","coordinate1","coordinate2","worldsAway","sourceExtentWidth","getWorldsAway","canvasPool","settings","shift","WORKER_OFFSCREEN_CANVAS","OffscreenCanvas","getContext","releaseCanvas","context","clearRect","newNode","oldNode","parent","replaceChild","node","lastChild","children","oldChildren","childNodes","oldChild","newChild","originalListener","eventsKey","BaseEvent","BLUR","CLEAR","DRAGENTER","DRAGOVER","FOCUS","RESIZE","eventTarget_","pendingRemovals_","dispatching_","listeners_","listeners","listenersForType","includes","isString","evt","propagate","dispatching","pendingRemovals","pr","indexOf","UNKNOWN","INTERSECTING","ABOVE","RIGHT","BELOW","LEFT","boundingExtent","createEmpty","extendCoordinate","closestSquaredDistanceXY","containsCoordinate","containsExtent","extent1","extent2","coordinateRelationship","relationship","Relationship","createOrUpdateFromCoordinate","createOrUpdateFromFlatCoordinates","flatCoordinates","extendFlatCoordinates","extendXY","forEachCorner","val","getBottomLeft","getBottomRight","getTopRight","getTopLeft","getArea","area","getCorner","corner","_getRotatedViewport","getRotatedViewport","_getRotatedViewport2","_slicedToArray","x2","y2","x3","y3","cosRotation","sinRotation","xCos","xSin","yCos","ySin","intersection","intersects","returnOrUpdate","intersectsSegment","startRel","endRel","startX","startY","endX","endY","slope","transformFn","stops","xs","ys","_boundingExtentXYs","memoizeOne","lastResult","lastArgs","lastThis","called","nextArgs","arrayEquals","tmpTransform","SimpleGeometry","_Geometry","layout","squaredTolerance","simplifiedGeometryRevision","getRevision","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometry","getSimplifiedGeometryInternal","getStrideForLayout","nesting","getLayoutForStride","anchorX","anchorY","k","sx","sy","translate","Geometry","extent_","extentRevision_","simplifyTransformedInternal","revision","closestPoint","minSquaredDistance","coord","getClosestPoint","point","closestPointXY","computeExtent","tolerance","destination","sourceProj","getUnits","inCoordinates","outCoordinates","pixelExtent","projectedExtent","getWorldExtent","transform2D","getTransform","assignClosest","offset1","offset2","lerp","maxSquaredDelta","squaredDelta","squaredDx","arrayMaxSquaredDelta","ends","assignClosestPoint","isRing","tmpPoint","squaredDistance","assignClosestArrayPoint","deflateCoordinates","deflateCoordinatesArray","coordinatess","douglasPeucker","simplifiedFlatCoordinates","simplifiedOffset","markers","stack","last","first","maxSquaredDistance","squaredSegmentDistance","snap","quantize","dx1","dy1","dx2","dy2","quantizeArray","simplifiedEnds","inflateCoordinates","inflateCoordinatesArray","linearRing","twiceArea","linearRings","LinearRing","_SimpleGeometry","maxDeltaRevision_","setFlatCoordinates","linearRingArea","setLayout","Point","applyProperties","deflateCoordinate","getInteriorPointOfArray","flatCenters","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","segmentLength","linearRingsContainsXY","tmp","linearRingIsClockwise","edge","linearRingsAreOriented","right","isClockwise","orientLinearRings","reverseCoordinates","ends_","flatInteriorPointRevision_","flatInteriorPoint_","orientedRevision_","orientedFlatCoordinates_","polygon","getOrientedFlatCoordinates","linearRingsArea","flatCenter","getFlatInteriorPoint","intersectsLinearRingArray","fromExtent","linearRingContainsExtent","linearRingContainsXY","wn","intersectsLineString","coordinatesExtent","ret","forEachSegment","point1","point2","intersectsLinearRing","ua","navigator","userAgent","toLowerCase","test","devicePixelRatio","WorkerGlobalScope","background_","background","LayerProperty","OPACITY","VISIBLE","Z_INDEX","MAX_RESOLUTION","MIN_RESOLUTION","MIN_ZOOM","MAX_ZOOM","className_","state_","getZIndex","getOpacity","getVisible","getMaxResolution","getMinResolution","getMinZoom","getMaxZoom","EXTENT","zindex","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","sourceReady_","rendered","SOURCE","handleSourcePropertyChange_","setSource","handleSourceChange_","getFeatures","getData","_this3","getMapInternal","find","layerExtent","isVisible","getViewStateAndExtent","prepareFrame","MAP","arrayLayerState","createRenderer","_Layer","BaseTileLayer","preload","useInterimTilesOnError","setPreload","setUseInterimTilesOnError","TileProperty","LayerRenderer","boundHandleImageChange_","handleImageChange_","layer_","declutterExecutorGroup","tiles","loadedTileCallback","forEachLoadedTile","ImageState","renderIfReadyAndVisible","imageState","getLayer","pixelContext","_LayerRenderer","CanvasLayerRenderer","renderedResolution","tempTransform","pixelTransform","inversePixelTransform","containerReused","pixelContext_","col","row","willReadFrequently","drawImage","getImageData","getBackground","backgroundColor","layerClassName","getClassName","firstElementChild","HTMLCanvasElement","transformOrigin","topLeft","topRight","bottomRight","bottomLeft","inverted","save","beginPath","moveTo","lineTo","clip","dispatchRenderEvent_","PRERENDER","POSTRENDER","_CanvasLayerRenderer","CanvasTileLayerRenderer","tileLayer","extentChanged","renderedExtent_","renderedPixelRatio","renderedProjection","renderedRevision","renderedTiles","newTiles_","tmpExtent","tmpTileRange_","tileState","getUseInterimTilesOnError","getTile","getPreload","isDrawableTile","getInterimTile","getRenderSource","tileGrid","getTileGridForProjection","tilePixelRatio","getTilePixelRatio","getZForResolution","getTileCoordForCoordAndZ","ReprojTile","tileOrigin","getOrigin","tileSize","toSize","getTileSize","gutter","getGutterForProjection","getImage","viewResolution","viewCenter","tileSource","sourceRevision","zDirection","canvasExtent","getTileRangeForExtentAndZ","tilesToDrawByZ","findLoadedTiles","createLoadedTileFinder","tmpTileRange","viewport","tileCoordIntersectsViewport","uid","inTransition","endTransition","getAlpha","childTileRange","getTileCoordChildTileRange","covered","forEachTileCoordParentTileRange","canvasScale","canvasTransform","toTransformString","useContainer","clipUnrotated","getInterpolate","imageSmoothingEnabled","preRender","clips","clipZs","currentClip","zs","getOpaque","currentZ","currentTilePixelSize","getTilePixelSize","currentScale","originTileCoord","originTileExtent","getTileCoordExtent","origin","tileGutter","tilesToDraw","tileCoordKey","xIndex","nextX","yIndex","nextY","contextSaved","drawTileImage","restore","unshift","updateUsedTiles","manageTilePyramid","scheduleExpireCache","postRender","getTileImage","alpha","alphaChanged","globalAlpha","postRenderFunction","expireCache","tileCallback","tileCount","enqueue","getTileCoordCenter","useTile","updateCacheSize","_BaseTileLayer","TileLayer","solveLinearSystem","mat","maxRow","maxEl","absValue","coef","toRadians","angleInDegrees","toFixed","decimals","Projection","code_","code","units_","units","worldExtent_","worldExtent","axisOrientation_","axisOrientation","global_","global","canWrapX_","getPointResolutionFunc_","getPointResolution","defaultTileGrid_","metersPerUnit_","metersPerUnit","RADIUS","HALF_SIZE","WORLD_EXTENT","MAX_SAFE_Y","tan","EPSG3857Projection","_Projection","cosh","PROJECTIONS","fromEPSG4326","output","dimension","toEPSG4326","atan","exp","EPSG4326Projection","transforms","sourceCode","getCode","destinationCode","DEFAULT_RADIUS","c1","c2","radius","lat1","lat2","deltaLatBy2","deltaLonBy2","showCoordinateWarning","cloneTransform","identityTransform","addProjection","addProj","addTransformFunc","projectionLike","replace","pointResolution","getter","getPointResolutionFunc","projUnits","getTransformFromProjections","vertices","addEquivalentProjections","projections","addProjections","defaultCode","equivalent","projection1","projection2","equalUnits","sourceProjection","destinationProjection","transformFunc","getTransformFunc","transformExtent","destProjection","projections2","forwardTransform","inverseTransform","EPSG3857_PROJECTIONS","EPSG4326_PROJECTIONS","addCommon","brokenDiagonalRendering_","Triangulation","targetProj","targetExtent","maxSourceExtent","errorThreshold","destinationResolution","sourceProj_","targetProj_","transformInvCache","transformInv","transformInv_","maxSourceExtent_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","maxSubdivision","log2","addQuad_","leftBound","triangle","newTriangle","aSrc","bSrc","cSrc","dSrc","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","targetQuadExtent","isFinite","isNotFinite","centerSrc","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","addTriangle_","drawTestTriangle","u1","v1","u2","v2","closePath","verifyBrokenDiagonalRendering","calculateSourceResolution","targetMetersPerUnit","sourceMetersPerUnit","sourceExtent","compensationFactor","triangulation","sources","renderEdges","pixelRound","globalCompositeOperation","sourceDataExtent","canvasWidthInUnits","canvasHeightInUnits","stitchContext","stitchScale","xPos","yPos","srcWidth","srcHeight","targetTopLeft","getTriangles","u0","v0","sourceNumericalShiftX","sourceNumericalShiftY","augmentedMatrix","affineCoefs","isBrokenDiagonalRendering","ud","vd","step","steps","strokeStyle","lineWidth","stroke","sourceTileGrid","targetTileGrid","wrappedTileCoord","getTileFunction","renderEdges_","gutter_","canvas_","sourceTileGrid_","targetTileGrid_","wrappedTileCoord_","sourceTiles_","sourcesListenerKeys_","sourceZ_","maxTargetExtent","limitedTargetExtent","sourceProjExtent","calculateSourceExtentResolution","errorThresholdInPixels","triangulation_","calculateSourceExtent","sourceRange","srcX","srcY","renderReprojected","leftToLoad","sourceListenKey","unlistenSources_","reproject_","LRUCache","highWaterMark","count_","entries_","oldest_","newest_","keep","entry","value_","key_","newer","older","containsKey","getKeyZXY","TileCache","_LRUCache","release","peekLast","fromKey","peekFirstKey","adaptAttributions","attributionLike","Source","attributions_","attributionsCollapsible_","attributionsCollapsible","wrapX_","interpolate_","viewResolver","viewRejector","viewPromise_","tmpTileCoord","TileGrid","origins","origin_","origins_","tileSizes_","tileSizes","tileSize_","fullTileRanges_","tmpSize_","tmpExtent_","sizes","restrictedTileRange","calculateTileRanges_","tempTileRange","tempExtent","tileCoordExtent","createOrUpdateTileRange","tileCoordZ","tileCoordX","tileCoordY","getTileCoordForXYAndZ_","opt_tileCoord","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","createOrUpdateTileCoord","opt_direction","fullTileRanges","getForProjection","getDefaultTileGrid","extentFromProjection","resolutionsFromExtent","createForExtent","createForProjection","setDefaultTileGrid","DEFAULT_MAX_ZOOM","half","TileSource","_Source","opaque_","opaque","tilePixelRatio_","tileCache","tmpSize","tileOptions","getTileCacheForProjection","getResolutions","scaleSize","getFullTileRange","withinExtentAndZ","TileSourceEvent","createFromTemplate","template","zRegEx","xRegEx","yRegEx","dashYRegEx","range","createFromTemplates","templates","tileUrlFunctions","tileCoordHash","createFromTileUrlFunctions","defaultTileLoadFunction","imageTile","_XYZ","OSM","url","reprojectionErrorThreshold","_TileImage","XYZ","xyzOptions","gridOptions","createXYZ","tileUrlFunction","urls","_UrlTile","TileImage","tileClass","tileCacheForProjection","tileGridForProjection","reprojectionErrorThreshold_","renderReprojectionEdges_","usedTileCache","getGutter","thisProj","projKey","urlTileCoord","getTileCoordForTileUrlFunction","tileUrl","getTileInternal","newTile","refreshInterimChain","createTile_","tilegrid","proj","_TileSource","UrlTile","generateTileUrlFunction_","setUrls","setUrl","tileLoadingKeys_","TileEventType","pruneExceptNewestZ","setKey","charCode","startCharCode","charCodeAt","stopCharCode","fromCharCode","expandUrl","setTileUrlFunction","transformStringDiv","compose","det","transformString","uidCounter_","ol_uid"],"sourceRoot":""}